From 31506487c5c99bac50d8ae36ce4a50390f27cff7 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 00:42:05 +0530
Subject: [PATCH 01/27] chore: update .gitignore

do not commit IDE settings to repo
---
 .gitignore                    | 132 +++++++++++++--
 .vscode/c_cpp_properties.json |  18 ---
 .vscode/launch.json           | 291 ----------------------------------
 .vscode/settings.json         | 101 ------------
 .vscode/tasks.json            |  27 ----
 5 files changed, 121 insertions(+), 448 deletions(-)
 delete mode 100644 .vscode/c_cpp_properties.json
 delete mode 100755 .vscode/launch.json
 delete mode 100644 .vscode/settings.json
 delete mode 100755 .vscode/tasks.json

diff --git a/.gitignore b/.gitignore
index db22aa74..31707b6d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,14 +1,124 @@
-.idea/*
-.vscode/ipch
-build
-builder/output
-builder/deployed
-builder/check_aesni
-builder/credentials
-db
-*.zip
-*.patch
+.DS_Store
+/doc
+/build
+/tags
+log/
+
+# vim swap files
+*.swo
+TAGS
+!TAGS/
+tags
+!tags/
+gtags.files
+GTAGS
+GRTAGS
+GPATH
+cscope.files
+cscope.out
+cscope.in.out
+cscope.po.out
+
 external/miniupnpc/Makefile
 miniupnpcstrings.h
 version/
-cmake-build-debug/*
+ClangBuildAnalyzerSession.txt
+
+# gitian
+.venv
+contrib/gitian/builder/
+contrib/gitian/docker/
+contrib/gitian/sigs/
+
+# Created by https://www.gitignore.io
+
+### C++ ###
+# Compiled Object files
+*.slo
+*.lo
+*.o
+*.obj
+
+# Precompiled Headers
+*.gch
+*.pch
+
+# Compiled Dynamic libraries
+*.so
+*.dylib
+*.dll
+
+# Fortran module files
+*.mod
+
+# Compiled Static libraries
+*.lai
+*.la
+*.a
+*.lib
+
+# Executables
+*.exe
+*.out
+*.app
+
+
+### CMake ###
+CMakeCache.txt
+CMakeFiles
+cmake_install.cmake
+install_manifest.txt
+cmake-build-debug/
+
+### Linux ###
+*~
+
+# KDE directory preferences
+.directory
+
+### VSCode ###
+.vscode/
+
+### CLion ###
+.idea/
+
+### Eclipse ###
+*.pydevproject
+.metadata
+.gradle
+bin/
+tmp/
+*.tmp
+*.bak
+*.swp
+*~.nib
+local.properties
+.settings/
+.loadpath
+
+# External tool builders
+.externalToolBuilders/
+
+# Locally stored "Eclipse launch configurations"
+*.launch
+
+# CDT-specific
+.cproject
+
+# PDT-specific
+.buildpath
+
+# Netbeans-specific
+nbproject
+
+# sbteclipse plugin
+.target
+
+# TeXlipse plugin
+.texlipse
+
+/testnet
+
+__pycache__/
+*.pyc
+*.log
diff --git a/.vscode/c_cpp_properties.json b/.vscode/c_cpp_properties.json
deleted file mode 100644
index aa8ca861..00000000
--- a/.vscode/c_cpp_properties.json
+++ /dev/null
@@ -1,18 +0,0 @@
-{
-    "configurations": [
-        {
-            "name": "Linux",
-            "includePath": [
-                "${workspaceFolder}/**"
-            ],
-            "defines": [],
-            "compilerPath": "/usr/bin/gcc",
-            "cStandard": "c11",
-            "cppStandard": "c++17",
-            "intelliSenseMode": "clang-x64",
-            "configurationProvider": "vector-of-bool.cmake-tools",
-            "compileCommands": "${workspaceFolder}/build/compile_commands.json"
-        }
-    ],
-    "version": 4
-}
\ No newline at end of file
diff --git a/.vscode/launch.json b/.vscode/launch.json
deleted file mode 100755
index 87f86ad7..00000000
--- a/.vscode/launch.json
+++ /dev/null
@@ -1,291 +0,0 @@
-{
-    "version": "0.2.0",
-    "configurations": [
-        {
-             "name": "Mainnet: Node",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug/bin/nervad",
-            "args": ["--log-level", "1", "--add-exclusive-node", "10.1.1.3"],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-        {
-            "name": "Mainnet: Cli Wallet",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug/bin/nerva-wallet-cli",
-            "args": [
-                "--wallet-file", "~/.nerva/wallets/angrywasp",
-                "--password", "''",
-            ],
-            "stopAtEntry": false,
-            
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true,
-                }
-            ]
-        },
-        {
-            "name": "Mainnet: Rpc Wallet",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-wallet-rpc",
-            "args": [
-                "--rpc-bind-port", "21525", 
-                "--daemon-address", "127.0.0.1:17566", 
-                "--disable-rpc-login", 
-                "--wallet-file", "~/.nerva/wallets/angrywasp"
-            ],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-        {
-            "name": "Testnet: Node",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nervad",
-            "args": [
-                "--data-dir", "${workspaceFolder}/db",
-                "--testnet",
-                "--log-level", "2",
-                "--allow-local-ip",
-                "--offline"
-            ],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-        {
-            "name": "Testnet: Cli Wallet",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-wallet-cli",
-            "args": [
-                "--testnet",
-                "--wallet-file", "~/.nerva/wallets/angrywasp-testnet",
-                "--password", "''",
-            ],
-            "stopAtEntry": false,
-            
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true,
-                }
-            ]
-        },
-        {
-            "name": "Testnet: Rpc Wallet",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-wallet-rpc",
-            "args": [
-                "--testnet", 
-                "--rpc-bind-port", "19566", 
-                "--daemon-address", "127.0.0.1:18566", 
-                "--disable-rpc-login", 
-                "--wallet-file", "~/.nerva/wallets/angrywasp-testnet",
-                "--prompt-for-password"
-            ],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-        {
-            "name": "Stagenet: Node",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nervad",
-            "args": [
-                "--data-dir", "${workspaceFolder}/db",
-                "--stagenet",
-                "--log-level", "2",
-                "--allow-local-ip",
-                "--offline"
-            ],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-        {
-            "name": "Stagenet: Cli Wallet",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-wallet-cli",
-            "args": [
-                "--stagenet",
-                "--wallet-file", "${workspaceFolder}/db/t1",
-                "--password", "''",
-            ],
-            "stopAtEntry": false,
-            
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true,
-                }
-            ]
-        },
-        {
-            "name": "Testnet: Ledger",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-wallet-cli",
-            "args": [
-                "--testnet",
-                "--hw-device", "Ledger",
-                "--wallet-file", "~/.nerva/wallets/ledger",
-                "--password", "''",
-            ],
-            "stopAtEntry": false,
-            
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true,
-                }
-            ]
-        },
-        {
-            "name": "Testnet: Ledger Restore",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-wallet-cli",
-            "args": [
-                "--testnet",
-                "--generate-from-device", "~/.nerva/wallets/ledger",
-                "--restore-height", "1",
-                "--password", "''",
-            ],
-            "preLaunchTask": "delete-hw-wallet",
-            "stopAtEntry": false,
-            
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true,
-                }
-            ]
-        },
-        {
-            "name": "Utility: Prune",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-blockchain-prune",
-            "args": [
-                "--data-dir", "${workspaceFolder}/db",
-                "--stagenet",
-                "--log-level", "2",
-            ],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-        {
-            "name": "Utility: Export Quicksync",
-            "type": "cppdbg",
-            "request": "launch",
-            "program": "${workspaceFolder}/builder/output/linux/debug-aes/bin/nerva-quicksync-export",
-            "args": [
-                "--output-file", "${workspaceFolder}/quicksync.raw",
-                "--log-level", "2",
-            ],
-            "stopAtEntry": false,
-            "cwd": "${workspaceFolder}",
-            "environment": [],
-            "externalConsole": false,
-            "MIMode": "gdb",
-            "setupCommands": [
-                {
-                    "description": "Enable pretty-printing for gdb",
-                    "text": "-enable-pretty-printing",
-                    "ignoreFailures": true
-                }
-            ]
-        },
-    ]
-}
\ No newline at end of file
diff --git a/.vscode/settings.json b/.vscode/settings.json
deleted file mode 100644
index 84f4d52e..00000000
--- a/.vscode/settings.json
+++ /dev/null
@@ -1,101 +0,0 @@
-{
-    "files.associations": {
-        "*.ipp": "cpp",
-        "*.tcc": "cpp",
-        "slist": "cpp",
-        "system_error": "cpp",
-        "thread": "cpp",
-        "typeindex": "cpp",
-        "cctype": "cpp",
-        "clocale": "cpp",
-        "cmath": "cpp",
-        "csignal": "cpp",
-        "cstdarg": "cpp",
-        "cstddef": "cpp",
-        "cstdio": "cpp",
-        "cstdlib": "cpp",
-        "cstring": "cpp",
-        "ctime": "cpp",
-        "cwchar": "cpp",
-        "cwctype": "cpp",
-        "array": "cpp",
-        "atomic": "cpp",
-        "chrono": "cpp",
-        "cinttypes": "cpp",
-        "codecvt": "cpp",
-        "condition_variable": "cpp",
-        "cstdint": "cpp",
-        "exception": "cpp",
-        "functional": "cpp",
-        "future": "cpp",
-        "initializer_list": "cpp",
-        "iosfwd": "cpp",
-        "limits": "cpp",
-        "memory": "cpp",
-        "mutex": "cpp",
-        "new": "cpp",
-        "ratio": "cpp",
-        "stdexcept": "cpp",
-        "tuple": "cpp",
-        "type_traits": "cpp",
-        "typeinfo": "cpp",
-        "utility": "cpp",
-        "unistd.h": "c",
-        "int-util.h": "c",
-        "hash-ops.h": "c",
-        "oaes_lib.h": "c",
-        "hash_map": "cpp",
-        "hash_set": "cpp",
-        "strstream": "cpp",
-        "bitset": "cpp",
-        "complex": "cpp",
-        "deque": "cpp",
-        "list": "cpp",
-        "unordered_map": "cpp",
-        "unordered_set": "cpp",
-        "vector": "cpp",
-        "fstream": "cpp",
-        "iomanip": "cpp",
-        "iostream": "cpp",
-        "istream": "cpp",
-        "numeric": "cpp",
-        "optional": "cpp",
-        "ostream": "cpp",
-        "sstream": "cpp",
-        "streambuf": "cpp",
-        "string_view": "cpp",
-        "valarray": "cpp",
-        "intrin.h": "c",
-        "forward_list": "cpp",
-        "*.cuh": "cpp",
-        "cfenv": "cpp",
-        "algorithm": "cpp",
-        "iterator": "cpp",
-        "map": "cpp",
-        "memory_resource": "cpp",
-        "random": "cpp",
-        "regex": "cpp",
-        "set": "cpp",
-        "string": "cpp",
-        "shared_mutex": "cpp",
-        "variant": "cpp",
-        "bit": "cpp",
-        "compare": "cpp",
-        "concepts": "cpp",
-        "ranges": "cpp",
-        "stop_token": "cpp"
-    },
-    "C_Cpp.dimInactiveRegions": true,
-    "C_Cpp.intelliSenseEngine": "Default",
-    "terminal.integrated.shell.windows": "C:\\msys64\\usr\\bin\\bash.exe",
-    "terminal.integrated.shellArgs.windows": ["--login", "-i"],
-    "terminal.integrated.env.windows":
-    {
-        "CHERE_INVOKING": "1",
-        "MSYSTEM": "MINGW64",
-        "MSYS2_PATH_TYPE": "inherit",
-        "MSVSCODE": "1"
-    },
-    "cmake.configureOnOpen": true,
-    
-}
diff --git a/.vscode/tasks.json b/.vscode/tasks.json
deleted file mode 100755
index 3825e64c..00000000
--- a/.vscode/tasks.json
+++ /dev/null
@@ -1,27 +0,0 @@
-{
-    // See https://go.microsoft.com/fwlink/?LinkId=733558
-    // for the documentation about the tasks.json format
-    "version": "2.0.0",
-    "tasks": [
-        {
-            "label": "build-debug",
-            "type": "shell",
-            "command": "${workspaceFolder}/builder/dev",
-            "group": {
-                "kind": "build",
-                "isDefault": true
-            }
-        },
-        {
-            "label": "delete-hw-wallet",
-            "type": "shell",
-            "command": "rm -f ~/.nerva/wallets/ledger.cache && rm -f ~/.nerva/wallets/ledger.keys",
-            "group": {
-                "kind": "build",
-                "isDefault": true
-            }
-        }
-    ]
-}
-
-

From 9066224e33f5fc617ae84b8ce26547c1b199a8b8 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 00:46:07 +0530
Subject: [PATCH 02/27] ci: draft gitian build

---
 .github/workflows/gitian.yml      |  51 ++++++
 contrib/gitian/DOCKRUN.md         | 114 +++++++++++++
 contrib/gitian/README.md          | 272 ++++++++++++++++++++++++++++++
 contrib/gitian/dockrun.sh         | 128 ++++++++++++++
 contrib/gitian/gitian-android.yml | 131 ++++++++++++++
 contrib/gitian/gitian-build.py    | 203 ++++++++++++++++++++++
 contrib/gitian/gitian-freebsd.yml | 128 ++++++++++++++
 contrib/gitian/gitian-linux.yml   | 180 ++++++++++++++++++++
 contrib/gitian/gitian-osx.yml     | 119 +++++++++++++
 contrib/gitian/gitian-win.yml     | 136 +++++++++++++++
 10 files changed, 1462 insertions(+)
 create mode 100644 .github/workflows/gitian.yml
 create mode 100644 contrib/gitian/DOCKRUN.md
 create mode 100644 contrib/gitian/README.md
 create mode 100644 contrib/gitian/dockrun.sh
 create mode 100644 contrib/gitian/gitian-android.yml
 create mode 100644 contrib/gitian/gitian-build.py
 create mode 100644 contrib/gitian/gitian-freebsd.yml
 create mode 100644 contrib/gitian/gitian-linux.yml
 create mode 100644 contrib/gitian/gitian-osx.yml
 create mode 100644 contrib/gitian/gitian-win.yml

diff --git a/.github/workflows/gitian.yml b/.github/workflows/gitian.yml
new file mode 100644
index 00000000..426460a4
--- /dev/null
+++ b/.github/workflows/gitian.yml
@@ -0,0 +1,51 @@
+name: ci/gh-actions/gitian
+
+on: [ push ]
+
+#on:
+#    push:
+#        tags:
+#            - '*'
+
+jobs:
+    build-gitian:
+        runs-on: ubuntu-20.04
+        strategy:
+            fail-fast: false
+            matrix:
+                operating-system:
+                    -   name: "Linux"
+                        option: "l"
+                    -   name: "Windows"
+                        option: "w"
+                    #-   name: "Android"
+                    #    option: "a"
+                    #-   name: "FreeBSD"
+                    #    option: "f"
+                    -   name: "macOS"
+                        option: "m"
+        name: ${{ matrix.operating-system.name }}
+        steps:
+            -   name: Prepare
+                run: |
+                    sudo apt update
+                    curl -O https://raw.githubusercontent.com/nerva-project/nerva/${{ github.ref_name }}/contrib/gitian/gitian-build.py
+                    chmod +x gitian-build.py
+            -   name: Setup
+                run: |
+                    ./gitian-build.py --setup --docker github-actions ${{ github.ref_name }}
+            -   name: Build
+                run: |
+                    ./gitian-build.py --docker --detach-sign --no-commit --build -j 3 -o ${{ matrix.operating-system.option }} github-actions ${{ github.ref_name }}
+            -   name: Post build
+                run: |
+                    cd out/${{ github.ref_name }}
+                    shasum -a256 *
+                    echo \`\`\` >> $GITHUB_STEP_SUMMARY
+                    shasum -a256 * >> $GITHUB_STEP_SUMMARY
+                    echo \`\`\` >> $GITHUB_STEP_SUMMARY
+            -   uses: actions/upload-artifact@v4
+                with:
+                    name: ${{ matrix.operating-system.name }}
+                    path: |
+                        out/${{ github.ref_name }}/*
diff --git a/contrib/gitian/DOCKRUN.md b/contrib/gitian/DOCKRUN.md
new file mode 100644
index 00000000..f7eacf0c
--- /dev/null
+++ b/contrib/gitian/DOCKRUN.md
@@ -0,0 +1,114 @@
+Quick Gitian building with docker
+=================================
+
+*Setup instructions for a Gitian build of Nerva using Docker.*
+
+Gitian supports other container mechanisms too but if you have a Debian or
+Ubuntu-based host the steps can be greatly simplified.
+
+Preparing the Gitian builder host
+---------------------------------
+
+The procedure here will create a docker container for build preparation, as well as
+for actually running the builds. The only items you must install on your own host
+are docker and apt-cacher-ng. With docker installed, you should also give yourself
+permission to use docker by adding yourself to the docker group.
+
+```bash
+sudo apt-get install docker.io apt-cacher-ng
+sudo usermod -aG docker $USER
+su $USER
+```
+
+The final `su` command is needed to start a new shell with your new group membership,
+since the `usermod` command doesn't affect any existing sessions.
+
+You'll also need to clone the ner repository and navigate to the `contrib/gitian` directory:
+
+```bash
+git clone https://github.com/nerva-project/nerva.git
+cd nerva/contrib/gitian
+```
+
+Other User Preparation
+----------------------
+
+The final step will be to `gpg` sign the results of your build and upload them to GitHub.
+Before you can do that, you'll need
+* a GitHub account.
+If your GitHub account name is different from your local account name, you must
+set your GitHub account name for the script to use:
+
+```bash
+export GH_USER=<github account name>
+```
+
+* PGP keys - if you don't have one already, you can use `gpg --quick-gen-key` to generate it.
+* a fork of the [gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repo on your GitHub account.
+Please follow the directions there for uploading your key first.
+
+**Note:** Please ensure your gpg public key is available to check signatures by adding it to the [gitian.sigs/gitian-pubkeys/](https://github.com/nerva-project/gitian.sigs/tree/master/gitian-pubkeys) directory in a pull request.
+
+
+Building the Binaries
+---------------------
+
+The dockrun.sh script will do everything to build the binaries. Just specify the
+version to build as its only argument, e.g.
+
+```bash
+VERSION=v0.18.1.0
+./dockrun.sh $VERSION
+```
+
+The build should run to completion with no errors, and will display the SHA256 checksums
+of the resulting binaries. You'll be prompted to check if the sums look good, and if so
+then the results will be signed, and the signatures will be pushed to GitHub.
+
+***Note: In order to publish the signed assertions via this script, you need to have your SSH key uploaded to GitHub beforehand. See https://docs.github.com/articles/generating-an-ssh-key/ for more info.***
+
+You can also look in the [gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repo and / or [getnerva.org release checksums](https://web.getnerva.org/downloads/hashes.txt) to see if others got the same checksum for the same version tag.  If there is ever a mismatch -- **STOP! Something is wrong**.  Contact others on IRC / GitHub to figure out what is going on.
+
+
+Other Options
+-------------
+
+This script just runs the [gitian-build.py](gitian-build.py) inside a container named `gitrun`.
+You can set other options for that script by setting the OPT variable when running `dockrun.sh`
+e.g.
+
+```bash
+# Run build processes with 8 threads
+OPT="-j 8" ./dockrun.sh $VERSION
+```
+
+Post-build
+----------
+
+You can examine the build and install logs by running a shell in the container, e.g.
+
+```bash
+# Tail running logs
+docker exec -it gitrun /bin/bash
+tail -F builder/var/install.log
+tail -F builder/var/build.log
+
+# Inspect logs, in format install-<OS>.log and build-<OS>.log
+docker exec -it gitrun /bin/bash
+more builder/var/install-linux.log
+more builder/var/build-linux.log
+```
+
+You can find the compiled archives inside of the container at the following directory:
+
+```bash
+docker exec -it gitrun /bin/bash
+ls -la out/$VERSION/
+```
+
+To copy the compiled archives to the local host out of the Docker container, you can run the following:
+
+```bash
+mkdir out
+docker cp gitrun:/home/ubuntu/out/$VERSION out
+```
diff --git a/contrib/gitian/README.md b/contrib/gitian/README.md
new file mode 100644
index 00000000..e99a138d
--- /dev/null
+++ b/contrib/gitian/README.md
@@ -0,0 +1,272 @@
+Gitian building
+================
+
+*Setup instructions for a Gitian build of Nerva.*
+
+Gitian is the deterministic build process that is used to build the Nerva CLI
+executables. It provides a way to be reasonably sure that the
+executables are really built from the git source. It also makes sure that
+the same, tested dependencies are used and statically built into the executable.
+
+Multiple developers build the source code by following a specific descriptor
+("recipe"), cryptographically sign the result, and upload the resulting signature.
+These results are compared and only if they match, the build is accepted and provided
+for download.
+
+Gitian runs compilation steps in an isolated container. It is flexible and gives you full
+control over the build environment, while still ensuring reproducibility and consistent output
+formats.
+
+More independent Gitian builders are needed, which is why this guide exists.
+It is preferred you follow these steps yourself instead of using someone else's
+VM image to avoid 'contaminating' the build.
+
+Preparing the Gitian builder host
+---------------------------------
+
+The first step is to prepare the host environment that will be used to perform the Gitian builds.
+This guide explains how to set up the environment, and how to start the builds.
+
+* Gitian host OS should be Ubuntu 18.04 "Bionic Beaver".  If you are on a mac or windows for example, you can run it in a VM but will be slower.
+
+* Gitian gives you the option of using any of 3 different virtualization tools: `kvm`, `docker` or `lxc`. This documentation will only show how to build with `lxc` and `docker` (documentation for `kvm` is welcome). Building with `lxc` is the default, but is more complicated, so we recommend docker your first time.
+
+* For a shortcut using `docker` follow the instructions in [DOCKRUN.md](DOCKRUN.md) instead
+of following the rest of this document..
+
+## Create the gitianuser account
+
+You need to create a new user called `gitianuser` and be logged in as that user.  The user needs `sudo` access.
+
+```bash
+sudo adduser gitianuser
+sudo usermod -aG sudo gitianuser
+```
+
+LXC
+---
+
+LXC builds should be run on Ubuntu 18.04 "Bionic Beaver".
+
+Note that a version of `lxc-execute` higher or equal to 2.1.1 is required.
+You can check the version with `lxc-execute --version`.
+
+First we need to set up dependencies. Type/paste the following in the terminal:
+
+```bash
+sudo apt-get install git ruby apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl firewalld
+```
+
+Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:
+
+```bash
+sudo -s
+# the version of lxc-start in Debian needs to run as root, so make sure
+# that the build script can execute it without providing a password
+echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-start" > /etc/sudoers.d/gitian-lxc
+echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-execute" >> /etc/sudoers.d/gitian-lxc
+# make /etc/rc.local script that sets up bridge between guest and host
+echo '#!/bin/sh -e' > /etc/rc.local
+echo 'brctl addbr br0' >> /etc/rc.local
+echo 'ip addr add 10.0.2.2/24 broadcast 10.0.2.255 dev br0' >> /etc/rc.local
+echo 'ip link set br0 up' >> /etc/rc.local
+echo 'firewall-cmd --zone=trusted --add-interface=br0' >> /etc/rc.local
+echo 'exit 0' >> /etc/rc.local
+chmod +x /etc/rc.local
+# make sure that USE_LXC is always set when logging in as gitianuser,
+# and configure LXC IP addresses
+echo 'export USE_LXC=1' >> /home/gitianuser/.profile
+echo 'export GITIAN_HOST_IP=10.0.2.2' >> /home/gitianuser/.profile
+echo 'export LXC_GUEST_IP=10.0.2.5' >> /home/gitianuser/.profile
+reboot
+```
+
+This setup is required to enable networking in the container.
+
+Docker
+------
+
+Prepare for building with docker:
+
+```bash
+sudo bash -c 'apt-get update && apt-get upgrade -y && apt-get install git curl docker.io'
+```
+
+Consider adding `gitianuser` to the `docker` group after reading about [the security implications](https://docs.docker.com/v17.09/engine/installation/linux/linux-postinstall/):
+
+```bash
+sudo groupadd docker
+sudo usermod -aG docker gitianuser
+```
+
+Optionally add yourself to the docker group. Note that this will give docker root access to your system.
+
+```bash
+sudo usermod -aG docker $USER
+```
+
+Manual Building
+-------------------
+
+=======
+The script automatically installs some packages with apt. If you are not running it on a debian-like system, pass `--no-apt` along with the other
+arguments to it. It calls all available .yml descriptors, which in turn pass the build configurations for different platforms to gitian.
+The instructions below use the automated script [gitian-build.py](gitian-build.py) which is tested to work on Ubuntu.
+
+It calls all available .yml descriptors, which in turn pass the build configurations for different platforms to gitian.
+Help for the build steps taken can be accessed with `./gitian-build.py --help`.
+
+Initial Gitian Setup
+--------------------
+
+The `gitian-build.py` script will checkout different release tags, so it's best to copy it to the top level directory:
+
+```bash
+cp nerva/contrib/gitian/gitian-build.py .
+```
+
+### Setup the required environment
+
+Common setup part:
+
+```bash
+su - gitianuser
+
+GH_USER=YOUR_GITHUB_USER_NAME
+VERSION=v0.18.0.0
+```
+
+Where `GH_USER` is your GitHub user name and `VERSION` is the version tag you want to build. 
+The `gitian-build.py`'s `--setup` switch will also refresh the environment of any stale files and submodules.
+
+Setup for LXC:
+
+```bash
+./gitian-build.py --setup $GH_USER $VERSION
+```
+
+Setup for docker:
+
+```bash
+./gitian-build.py --setup --docker $GH_USER $VERSION
+```
+
+While gitian and this build script does provide a way for you to sign the build directly, it is recommended to sign in a separate step. This script is only there for convenience. Separate steps for building can still be taken.
+In order to sign gitian builds on your host machine, which has your PGP key, 
+fork the [gitian.sigs repository](https://github.com/nerva-project/gitian.sigs) and clone it on your host machine, 
+or pass the signed assert file back to your build machine.
+
+```bash
+git clone https://github.com/nerva-project/gitian.sigs/
+pushd gitian.sigs
+git remote add $GH_USER https://github.com/$GH_USER/gitian.sigs
+popd
+```
+
+Build the binaries
+------------------
+
+To build the most recent tag (pass in `--docker` if using docker):
+
+```bash
+./gitian-build.py --detach-sign --no-commit --build $GH_USER $VERSION
+```
+
+To speed up the build, use `-j 5 --memory 10000` as the first arguments, where `5` is the number of CPU's you allocated to the VM plus one, and 10000 is a little bit less than then the MB's of RAM you allocated. If there is memory corruption on your machine, try to tweak these values. A good rule of thumb is, that Nerva currently needs about 2 GB of RAM per core. 
+
+A full example for `docker` would look like the following:
+
+```bash
+./gitian-build.py -j 5 --memory 10000 --docker --detach-sign --no-commit --build $GH_USER $VERSION
+```
+
+If all went well, this produces a number of (uncommitted) `.assert` files in the gitian.sigs directory.
+
+Checking your work
+------------------
+
+Take a look in the assert files and note the SHA256 checksums listed there.
+
+You should verify that the checksum that is listed matches each of the binaries you actually built.
+This may be done on Linux using the `sha256sum` command or on MacOS using `shasum --algorithm 256` for example.
+An example script to verify the checksums would be:
+
+```bash
+pushd out/${VERSION}
+
+for ASSERT in ../../sigs/${VERSION}-*/*/*.assert; do
+  if ! sha256sum --ignore-missing -c "${ASSERT}" ; then
+    echo "FAILED for ${ASSERT} ! Please inspect manually."
+  fi
+done
+
+popd
+```
+
+Don't ignore the incorrect formatting of the found assert files. These files you'll have to compare manually (currently OSX and FreeBSD).
+
+
+You can also look in the [gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repo and / or [getnerva.org release checksums](https://web.getnerva.org/downloads/hashes.txt) to see if others got the same checksum for the same version tag.  If there is ever a mismatch -- **STOP! Something is wrong**.  Contact others on IRC / github to figure out what is going on.
+
+
+Signing assert files
+--------------------
+
+If you chose to do detached signing using `--detach-sign` above (recommended), you need to copy these uncommitted changes to your host machine, then sign them using your gpg key like so:
+
+```bash
+for ASSERT in sigs/${VERSION}-*/*/*.assert; do gpg --detach-sign ${ASSERT}; done
+```
+
+This will create a `.sig` file for each `.assert` file above (2 files for each platform).
+
+
+Submitting your signed assert files
+-----------------------------------
+
+Make a pull request (both the `.assert` and `.assert.sig` files) to the
+[nerva-project/gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repository:
+
+```bash
+cd gitian.sigs
+git checkout -b $VERSION
+# add your assert and sig files...
+git commit -S -a -m "Add $GH_USER $VERSION"
+git push --set-upstream $GH_USER $VERSION
+```
+
+**Note:** Please ensure your gpg public key is available to check signatures by adding it to the [gitian.sigs/gitian-pubkeys/](https://github.com/nerva-project/gitian.sigs/tree/master/gitian-pubkeys) directory in a pull request.
+
+
+More Build Options
+------------------
+
+You can choose your own remote and commit hash by running for example:
+```bash
+./gitian-build.py --detach-sign --no-commit --url https://github.com/nervamooo-nerva/bitnerva -b nervamooo 1f5680c8db8f4cc7acc04a04c724b832003440fd
+```
+
+Note that you won't be able to build commits authored before the gitian scripts
+were added. Gitian clones the source files from the given url, be sure to push
+to the remote you provide before building.
+To get all build options run:
+```bash
+./gitian-build.py --help
+```
+
+Doing Successive Builds
+-----------------------
+
+If you need to do multiple iterations (while developing/testing) you can use the
+`--rebuild` option instead of `--build` on subsequent iterations. This skips the
+initial check for the freshness of the depends tools. In particular, doing this
+check all the time prevents rebuilding when you have no network access.
+
+
+Local-Only Builds
+-----------------
+
+If you need to run builds while disconnected from the internet, make sure you have
+local up-to-date repos in advance. Then specify your local repo using the `--url`
+option when building. This will avoid attempts to git pull across a network.
+
diff --git a/contrib/gitian/dockrun.sh b/contrib/gitian/dockrun.sh
new file mode 100644
index 00000000..396db126
--- /dev/null
+++ b/contrib/gitian/dockrun.sh
@@ -0,0 +1,128 @@
+#!/bin/sh
+
+if [ $# -ne 1 ]; then
+	echo "usage: $0 <version>"
+	exit 1
+fi
+VERSION=$1
+
+DOCKER=`command -v docker`
+CACHER=`command -v apt-cacher-ng`
+
+if [ -z "$DOCKER" -o -z "$CACHER" ]; then
+	echo "$0: you must first install docker.io and apt-cacher-ng"
+	echo "  e.g. sudo apt-get install docker.io apt-cacher-ng"
+	exit 1
+fi
+
+GH_USER=${GH_USER-$USER}
+
+TAG=gitrun-bionic
+TAG2=base-bionic-amd64
+IMAGE=`docker images | grep $TAG`
+
+WORKDIR=/home/ubuntu
+
+if [ -z "$IMAGE" ]; then
+GID=`getent group docker`
+mkdir -p docker
+cd docker
+
+# container for running gitian-build.py
+cat <<EOF > ${TAG}.Dockerfile
+FROM ubuntu:bionic
+
+ENV DEBIAN_FRONTEND=noninteractive
+RUN echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' > /etc/apt/apt.conf.d/50cacher
+RUN echo "$GID" >> /etc/group
+RUN apt-get update && apt-get --no-install-recommends -y install lsb-release ruby git make wget docker.io python3 curl
+
+RUN useradd -ms /bin/bash -U ubuntu -G docker
+USER ubuntu:docker
+WORKDIR $WORKDIR
+
+RUN	git clone https://github.com/monero-project/gitian.sigs.git sigs; \
+  git clone https://github.com/devrandom/gitian-builder.git builder; \
+  cd builder; git checkout c0f77ca018cb5332bfd595e0aff0468f77542c23; mkdir -p inputs var; cd inputs; \
+  git clone https://github.com/monero-project/monero
+
+CMD ["sleep", "infinity"]
+EOF
+
+docker build --pull -f ${TAG}.Dockerfile -t $TAG .
+
+cd ..
+docker run -v /var/run/docker.sock:/var/run/docker.sock -d --name gitrun $TAG
+
+fi
+
+IMAGE=`docker images | grep $TAG2`
+if [ -z "$IMAGE" ]; then
+mkdir -p docker
+cd docker
+
+# container for actually running each build
+cat <<EOF > ${TAG2}.Dockerfile
+FROM ubuntu:bionic
+
+ENV DEBIAN_FRONTEND=noninteractive
+RUN echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' > /etc/apt/apt.conf.d/50cacher
+RUN apt-get update && apt-get --no-install-recommends -y install build-essential git language-pack-en \
+  wget lsb-release curl gcc-7 g++-7 gcc g++ binutils-gold pkg-config autoconf libtool automake faketime \
+  bsdmainutils ca-certificates python cmake gperf
+
+RUN useradd -ms /bin/bash -U ubuntu
+USER ubuntu:ubuntu
+WORKDIR $WORKDIR
+
+CMD ["sleep", "infinity"]
+EOF
+
+docker build --pull -f ${TAG2}.Dockerfile -t $TAG2 .
+
+cd ..
+
+fi
+
+RUNNING=`docker ps | grep gitrun`
+if [ -z "$RUNNING" ]; then
+  BUILT=`docker ps -a | grep gitrun`
+  if [ -z "$BUILT" ]; then
+    docker run -v /var/run/docker.sock:/var/run/docker.sock -d --name gitrun $TAG
+  else
+    docker start gitrun
+  fi
+fi
+docker cp gitian-build.py gitrun:$WORKDIR/
+docker exec -t gitrun ./gitian-build.py -d -b -D -n $OPT $GH_USER $VERSION
+RC=$?
+if [ $RC != 0 ]; then
+	exit $RC
+fi
+echo "\nBuild Results:\n"
+docker exec gitrun sh -c "sha256sum out/$VERSION/*"
+echo "\nIf these results look correct, type \"sign\" to sign them, otherwise ^C to stop now."
+read check
+if [ "$check" != "sign" ]; then
+	echo "Not signing, bye."
+	exit 1
+fi
+
+if [ ! -d sigs ]; then
+	git clone https://github.com/monero-project/gitian.sigs.git sigs
+	cd sigs
+	git remote add $GH_USER git@github.com:$GH_USER/gitian.sigs.git
+	cd ..
+fi
+
+DIRS=`docker exec gitrun sh -c "echo sigs/$VERSION-*"`
+for i in $DIRS; do
+	docker cp gitrun:$WORKDIR/$i sigs
+	gpg --detach-sign $i/$GH_USER/*.assert
+done
+
+cd sigs
+git checkout -b $VERSION
+git add $VERSION-*
+git commit -S -m "Add $GH_USER $VERSION"
+git push --set-upstream $GH_USER $VERSION
diff --git a/contrib/gitian/gitian-android.yml b/contrib/gitian/gitian-android.yml
new file mode 100644
index 00000000..8f23a9b1
--- /dev/null
+++ b/contrib/gitian/gitian-android.yml
@@ -0,0 +1,131 @@
+---
+name: "nerva-android-0.2"
+enable_cache: true
+suites:
+- "bionic"
+architectures:
+- "amd64"
+packages:
+- "curl"
+- "gperf"
+- "gcc-7"
+- "g++-7"
+- "gcc"
+- "g++"
+- "binutils-gold"
+- "git"
+- "pkg-config"
+- "build-essential"
+- "autoconf"
+- "libtool"
+- "automake"
+- "faketime"
+- "bsdmainutils"
+- "ca-certificates"
+- "python"
+- "cmake"
+- "unzip"
+remotes:
+- "url": "https://github.com/nerva-project/nerva.git"
+  "dir": "nerva"
+files: []
+script: |
+
+  WRAP_DIR=$HOME/wrapped
+  HOSTS="arm-linux-android aarch64-linux-android"
+  FAKETIME_HOST_PROGS="clang clang++ ar nm"
+  FAKETIME_PROGS="date"
+  HOST_CFLAGS="-O2 -g"
+  HOST_CXXFLAGS="-O2 -g"
+  HOST_LDFLAGS=-static-libstdc++
+
+  export GZIP="-9n"
+  export TZ="UTC"
+  export BUILD_DIR=`pwd`
+  mkdir -p ${WRAP_DIR}
+  if test -n "$GBUILD_CACHE_ENABLED"; then
+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}
+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}
+    export GITIAN=1
+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}
+  fi
+
+  export ZERO_AR_DATE=1
+
+  function create_global_faketime_wrappers {
+  for prog in ${FAKETIME_PROGS}; do
+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}
+    echo "REAL=\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\`" >> ${WRAP_DIR}/${prog}
+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}
+    echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${prog}
+    echo "\$REAL \$@" >> $WRAP_DIR/${prog}
+    chmod +x ${WRAP_DIR}/${prog}
+  done
+  }
+
+  function create_per-host_faketime_wrappers {
+  for i in $HOSTS; do
+    ABI=$i
+    if expr $i : arm- > /dev/null
+    then
+      ABI=$i"eabi"
+    fi
+    NDKDIR="${BUILD_DIR}/nerva/contrib/depends/$i/native/bin"
+    for prog in ${FAKETIME_HOST_PROGS}; do
+        WRAPPER=${WRAP_DIR}/${ABI}-${prog}
+        echo '#!/usr/bin/env bash' > ${WRAPPER}
+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAPPER}
+        echo "export FAKETIME=\"$1\"" >> ${WRAPPER}
+        echo "$NDKDIR/${ABI}-$prog \$@" >> ${WRAPPER}
+        chmod +x ${WRAPPER}
+    done
+  done
+  }
+
+  # Faketime for depends so intermediate results are comparable
+  export PATH_orig=${PATH}
+  create_global_faketime_wrappers "2000-01-01 12:00:00"
+  create_per-host_faketime_wrappers "2000-01-01 12:00:00"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  # gcc 7+ honors SOURCE_DATE_EPOCH, no faketime needed
+  export SOURCE_DATE_EPOCH=`date -d 2000-01-01T12:00:00 +%s`
+
+  git config --global core.abbrev 9
+  cd nerva
+  # Set the version string that gets added to the tar archive name
+  version="`git describe`"
+  if [[ $version == *"-"*"-"* ]]; then
+    version="`git rev-parse --short=9 HEAD`"
+    version="`echo $version | head -c 9`"
+  fi
+
+  BASEPREFIX=`pwd`/contrib/depends
+  # Build dependencies for each host
+  export TAR_OPTIONS=--mtime=2000-01-01T12:00:00
+  for i in $HOSTS; do
+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST="${i}"
+  done
+
+  # Faketime for binaries
+  export PATH=${PATH_orig}
+  create_global_faketime_wrappers "${REFERENCE_DATETIME}"
+  create_per-host_faketime_wrappers "${REFERENCE_DATETIME}"
+
+  # Build in a new dir for each host
+  export TAR_OPTIONS=--mtime=${REFERENCE_DATE}T${REFERENCE_TIME}
+  for i in ${HOSTS}; do
+    export PATH=${WRAP_DIR}:${BASEPREFIX}/${i}/native/bin:${PATH_orig}
+    mkdir build && cd build
+    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake -DCMAKE_BUILD_TYPE=Release
+    make ${MAKEOPTS}
+    chmod 755 bin/*
+    cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
+    chmod 644 bin/LICENSE bin/*.md
+    DISTNAME=nerva-${i}-${version}
+    mv bin ${DISTNAME}
+    find ${DISTNAME}/ | sort | tar --no-recursion --owner=0 --group=0 -c -T - | bzip2 -9 > ${OUTDIR}/${DISTNAME}.tar.bz2
+    cd ..
+    rm -rf build
+  done
+
diff --git a/contrib/gitian/gitian-build.py b/contrib/gitian/gitian-build.py
new file mode 100644
index 00000000..1e3b73f9
--- /dev/null
+++ b/contrib/gitian/gitian-build.py
@@ -0,0 +1,203 @@
+#!/usr/bin/env python3
+
+import argparse
+import os
+import subprocess
+import sys
+
+gsigs = 'https://github.com/monero-project/gitian.sigs.git'
+gbrepo = 'https://github.com/devrandom/gitian-builder.git'
+
+platforms = {'l': ['Linux', 'linux', 'tar.bz2'],
+        'a': ['Android', 'android', 'tar.bz2'],
+        'f': ['FreeBSD', 'freebsd', 'tar.bz2'],
+        'w': ['Windows', 'win', 'zip'],
+        'm': ['MacOS', 'osx', 'tar.bz2'] }
+
+def setup():
+    global args, workdir
+    programs = ['apt-cacher-ng', 'ruby', 'git', 'make', 'wget']
+    if args.kvm:
+        programs += ['python-vm-builder', 'qemu-kvm', 'qemu-utils']
+    else:
+        programs += ['lxc', 'debootstrap']
+    if not args.no_apt:
+        subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)
+    if not os.path.isdir('sigs'):
+        subprocess.check_call(['git', 'clone', gsigs, 'sigs'])
+    if not os.path.isdir('builder'):
+        subprocess.check_call(['git', 'clone', gbrepo, 'builder'])
+    os.chdir('builder')
+    subprocess.check_call(['git', 'checkout', 'c0f77ca018cb5332bfd595e0aff0468f77542c23'])
+    os.makedirs('inputs', exist_ok=True)
+    os.chdir('inputs')
+    if os.path.isdir('nerva'):
+        # Remove the potentially stale nerva dir. Otherwise, you might face submodule mismatches.
+        subprocess.check_call(['rm', 'nerva', '-fR'])
+    subprocess.check_call(['git', 'clone', args.url, 'nerva'])
+    os.chdir('..')
+    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']
+    if args.docker:
+        try:
+            subprocess.check_output(['docker', '--help'])
+        except:
+            print("ERROR: Could not find 'docker' command. Ensure this is in your PATH.")
+            sys.exit(1)
+        make_image_prog += ['--docker']
+    elif not args.kvm:
+        make_image_prog += ['--lxc']
+    subprocess.check_call(make_image_prog)
+    os.chdir(workdir)
+    if args.is_bionic and not args.kvm and not args.docker:
+        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])
+        print('Reboot is required')
+        sys.exit(0)
+
+def rebuild():
+    global args, workdir
+
+    print('\nBuilding Dependencies\n')
+    os.makedirs('../out/' + args.version, exist_ok=True)
+
+
+    for i in args.os:
+        os_name = platforms[i][0]
+        tag_name = platforms[i][1]
+        suffix = platforms[i][2]
+
+        print('\nCompiling ' + args.version + ' ' + os_name)
+        infile = 'inputs/nerva/contrib/gitian/gitian-' + tag_name + '.yml'
+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'nerva='+args.commit, '--url', 'nerva='+args.url, infile])
+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-'+tag_name, '--destination', '../sigs/', infile])
+        subprocess.check_call('mv build/out/nerva-*.' + suffix + ' ../out/'+args.version, shell=True)
+        print('Moving var/install.log to var/install-' + tag_name + '.log')
+        subprocess.check_call('mv var/install.log var/install-' + tag_name + '.log', shell=True)
+        print('Moving var/build.log to var/build-' + tag_name + '.log')
+        subprocess.check_call('mv var/build.log var/build-' + tag_name + '.log', shell=True)
+
+    os.chdir(workdir)
+
+    if args.commit_files:
+        print('\nCommitting '+args.version+' Unsigned Sigs\n')
+        os.chdir('sigs')
+        for i, v in platforms:
+            subprocess.check_call(['git', 'add', args.version+'-'+v[1]+'/'+args.signer])
+        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])
+        os.chdir(workdir)
+
+
+def build():
+    global args, workdir
+
+    print('\nChecking Depends Freshness\n')
+    os.chdir('builder')
+    os.makedirs('inputs', exist_ok=True)
+
+    subprocess.check_call(['make', '-C', 'inputs/nerva/contrib/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])
+
+    rebuild()
+
+
+def verify():
+    global args, workdir
+    os.chdir('builder')
+
+    for i, v in platforms:
+        print('\nVerifying v'+args.version+' '+v[0]+'\n')
+        subprocess.check_call(['bin/gverify', '-v', '-d', '../sigs/', '-r', args.version+'-'+v[1], 'inputs/nerva/contrib/gitian/gitian-'+v[1]+'.yml'])
+    os.chdir(workdir)
+
+def main():
+    global args, workdir
+
+    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.', usage='%(prog)s [options] signer version')
+    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')
+    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')
+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/nerva-project/nerva', help='Specify the URL of the repository. Default is %(default)s')
+    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')
+    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')
+    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')
+    parser.add_argument('-o', '--os', dest='os', default='lafwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, a for Android, f for FreeBSD, w for Windows, m for MacOS')
+    parser.add_argument('-r', '--rebuild', action='store_true', dest='rebuild', help='Redo a Gitian build')
+    parser.add_argument('-R', '--rebuildsign', action='store_true', dest='rebuildsign', help='Redo and sign a Gitian build')
+    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')
+    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')
+    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')
+    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')
+    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. If you run this script on a non-debian based system, pass the --no-apt flag')
+    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')
+    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')
+    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')
+    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build.')
+    parser.add_argument('-a', '--no-apt', action='store_true', dest='no_apt', help='Indicate that apt is not installed on the system')
+
+    args = parser.parse_args()
+    workdir = os.getcwd()
+
+    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])
+
+    if args.buildsign:
+        args.build = True
+        args.sign = True
+
+    if args.rebuildsign:
+        args.rebuild = True
+        args.sign = True
+
+    if args.kvm and args.docker:
+        raise Exception('Error: cannot have both kvm and docker')
+
+    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'
+
+    # Set enviroment variable USE_LXC or USE_DOCKER, let gitian-builder know that we use lxc or docker
+    if args.docker:
+        os.environ['USE_DOCKER'] = '1'
+    elif not args.kvm:
+        os.environ['USE_LXC'] = '1'
+        if not 'GITIAN_HOST_IP' in os.environ.keys():
+            os.environ['GITIAN_HOST_IP'] = '10.0.2.2'
+        if not 'LXC_GUEST_IP' in os.environ.keys():
+            os.environ['LXC_GUEST_IP'] = '10.0.2.5'
+
+    script_name = os.path.basename(sys.argv[0])
+    # Signer and version shouldn't be empty
+    if args.signer == '':
+        print(script_name+': Missing signer.')
+        print('Try '+script_name+' --help for more information')
+        sys.exit(1)
+    if args.version == '':
+        print(script_name+': Missing version.')
+        print('Try '+script_name+' --help for more information')
+        sys.exit(1)
+
+    # Add leading 'v' for tags
+    if args.commit and args.pull:
+        raise Exception('Cannot have both commit and pull')
+    args.commit = args.commit if args.commit else args.version
+
+    if args.setup:
+        setup()
+
+    os.makedirs('builder/inputs/nerva', exist_ok=True)
+    os.chdir('builder/inputs/nerva')
+    if args.pull:
+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])
+        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True).strip()
+        args.version = 'pull-' + args.version
+    print(args.commit)
+    subprocess.check_call(['git', 'fetch'])
+    subprocess.check_call(['git', 'checkout', args.commit])
+    os.chdir(workdir)
+
+    if args.build:
+        build()
+
+    if args.rebuild:
+        os.chdir('builder')
+        rebuild()
+
+    if args.verify:
+        verify()
+
+if __name__ == '__main__':
+    main()
diff --git a/contrib/gitian/gitian-freebsd.yml b/contrib/gitian/gitian-freebsd.yml
new file mode 100644
index 00000000..35898af2
--- /dev/null
+++ b/contrib/gitian/gitian-freebsd.yml
@@ -0,0 +1,128 @@
+---
+name: "nerva-freebsd-0.2"
+enable_cache: true
+suites:
+- "bionic"
+architectures:
+- "amd64"
+packages:
+- "curl"
+- "clang-8"
+- "gperf"
+- "gcc-7"
+- "g++-7"
+- "gcc"
+- "g++"
+- "binutils-gold"
+- "git"
+- "pkg-config"
+- "build-essential"
+- "autoconf"
+- "libtool"
+- "automake"
+- "faketime"
+- "bsdmainutils"
+- "ca-certificates"
+- "python"
+- "cmake"
+remotes:
+- "url": "https://github.com/nerva-project/nerva.git"
+  "dir": "nerva"
+files: []
+script: |
+
+  WRAP_DIR=$HOME/wrapped
+  HOSTS="x86_64-unknown-freebsd"
+  FAKETIME_HOST_PROGS=""
+  FAKETIME_PROGS="clang-8 clang++-8 date"
+  HOST_CFLAGS="-O2 -g"
+  HOST_CXXFLAGS="-O2 -g"
+  HOST_LDFLAGS=-static-libstdc++
+
+  export GZIP="-9n"
+  export TZ="UTC"
+  export BUILD_DIR=`pwd`
+  mkdir -p ${WRAP_DIR}
+  if test -n "$GBUILD_CACHE_ENABLED"; then
+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}
+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}
+    export GITIAN=1
+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}
+  fi
+
+  export ZERO_AR_DATE=1
+
+  function create_global_faketime_wrappers {
+  for prog in ${FAKETIME_PROGS}; do
+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}
+    echo "REAL=\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\`" >> ${WRAP_DIR}/${prog}
+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}
+    echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${prog}
+    echo "\$REAL \$@" >> $WRAP_DIR/${prog}
+    chmod +x ${WRAP_DIR}/${prog}
+  done
+  }
+
+  function create_per-host_faketime_wrappers {
+  for i in $HOSTS; do
+    for prog in ${FAKETIME_HOST_PROGS}; do
+        WRAPPER=${WRAP_DIR}/${i}-${prog}
+        echo '#!/usr/bin/env bash' > ${WRAPPER}
+        echo "REAL=\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\`" >> ${WRAPPER}
+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAPPER}
+        echo "export FAKETIME=\"$1\"" >> ${WRAPPER}
+        echo "$NDKDIR/${ABI}-$prog \$@" >> ${WRAPPER}
+        chmod +x ${WRAPPER}
+    done
+  done
+  }
+
+  # Faketime for depends so intermediate results are comparable
+  export PATH_orig=${PATH}
+  create_global_faketime_wrappers "2000-01-01 12:00:00"
+  create_per-host_faketime_wrappers "2000-01-01 12:00:00"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  # gcc 7+ honors SOURCE_DATE_EPOCH, no faketime needed
+  export SOURCE_DATE_EPOCH=`date -d 2000-01-01T12:00:00 +%s`
+
+  git config --global core.abbrev 9
+  cd nerva
+  # Set the version string that gets added to the tar archive name
+  version="`git describe`"
+  if [[ $version == *"-"*"-"* ]]; then
+    version="`git rev-parse --short=9 HEAD`"
+    version="`echo $version | head -c 9`"
+  fi
+
+  BASEPREFIX=`pwd`/contrib/depends
+  # Build dependencies for each host
+  export TAR_OPTIONS=--mtime=2000-01-01T12:00:00
+  for i in $HOSTS; do
+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST="${i}"
+  done
+
+  # Faketime for binaries
+  export PATH=${PATH_orig}
+  create_global_faketime_wrappers "${REFERENCE_DATETIME}"
+  create_per-host_faketime_wrappers "${REFERENCE_DATETIME}"
+
+  ORIGPATH="$PATH"
+  # Build in a new dir for each host
+  export SOURCE_DATE_EPOCH=`date -d ${REFERENCE_DATE}T${REFERENCE_TIME} +%s`
+  export TAR_OPTIONS=--mtime=${REFERENCE_DATE}T${REFERENCE_TIME}
+  for i in ${HOSTS}; do
+    export PATH=${WRAP_DIR}:${BASEPREFIX}/${i}/native/bin:${ORIGPATH}
+    mkdir build && cd build
+    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_SKIP_RPATH=ON
+    make ${MAKEOPTS}
+    chmod 755 bin/*
+    cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
+    chmod 644 bin/LICENSE bin/*.md
+    DISTNAME=nerva-${i}-${version}
+    mv bin ${DISTNAME}
+    find ${DISTNAME}/ | sort | tar --no-recursion --owner=0 --group=0 -c -T - | bzip2 -9 > ${OUTDIR}/${DISTNAME}.tar.bz2
+    cd ..
+    rm -rf build
+  done
+
diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
new file mode 100644
index 00000000..dc406ada
--- /dev/null
+++ b/contrib/gitian/gitian-linux.yml
@@ -0,0 +1,180 @@
+---
+name: "nerva-linux-0.2"
+enable_cache: true
+suites:
+- "bionic"
+architectures:
+- "amd64"
+packages:
+- "curl"
+- "gperf"
+- "gcc-7"
+- "g++-7"
+- "gcc"
+- "g++"
+- "gcc-7-aarch64-linux-gnu"
+- "g++-7-aarch64-linux-gnu"
+- "gcc-aarch64-linux-gnu"
+- "g++-aarch64-linux-gnu"
+- "binutils-aarch64-linux-gnu"
+- "gcc-7-arm-linux-gnueabihf"
+- "g++-7-arm-linux-gnueabihf"
+- "gcc-arm-linux-gnueabihf"
+- "g++-arm-linux-gnueabihf"
+- "g++-riscv64-linux-gnu"
+- "g++-7-multilib"
+- "gcc-7-multilib"
+- "binutils-arm-linux-gnueabihf"
+- "binutils-gold"
+- "git"
+- "pkg-config"
+- "build-essential"
+- "autoconf"
+- "libtool"
+- "automake"
+- "faketime"
+- "bsdmainutils"
+- "ca-certificates"
+- "python"
+- "cmake"
+remotes:
+- "url": "https://github.com/nerva-project/nerva.git"
+  "dir": "nerva"
+files: []
+script: |
+
+  WRAP_DIR=$HOME/wrapped
+  HOSTS="x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu i686-linux-gnu riscv64-linux-gnu"
+  FAKETIME_HOST_PROGS=""
+  FAKETIME_PROGS="date"
+  HOST_CFLAGS="-O2 -g"
+  HOST_CXXFLAGS="-O2 -g"
+  HOST_LDFLAGS=-static-libstdc++
+
+  export GZIP="-9n"
+  export TZ="UTC"
+  export BUILD_DIR=`pwd`
+  mkdir -p ${WRAP_DIR}
+  if test -n "$GBUILD_CACHE_ENABLED"; then
+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}
+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}
+    export GITIAN=1
+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}
+  fi
+
+  function create_global_faketime_wrappers {
+  for prog in ${FAKETIME_PROGS}; do
+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}
+    echo "REAL=\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\`" >> ${WRAP_DIR}/${prog}
+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}
+    echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${prog}
+    echo "\$REAL \$@" >> $WRAP_DIR/${prog}
+    chmod +x ${WRAP_DIR}/${prog}
+  done
+  }
+
+  function create_per-host_faketime_wrappers {
+  for i in $HOSTS; do
+    for prog in ${FAKETIME_HOST_PROGS}; do
+        if which ${i}-${prog}-7
+        then
+            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}
+            echo "REAL=\`which -a ${i}-${prog}-7 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\`" >> ${WRAP_DIR}/${i}-${prog}
+            echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}
+            echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${i}-${prog}
+            echo "\$REAL \$@" >> $WRAP_DIR/${i}-${prog}
+            chmod +x ${WRAP_DIR}/${i}-${prog}
+        fi
+    done
+  done
+  }
+
+  # Faketime for depends so intermediate results are comparable
+  export PATH_orig=${PATH}
+  create_global_faketime_wrappers "2000-01-01 12:00:00"
+  create_per-host_faketime_wrappers "2000-01-01 12:00:00"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  EXTRA_INCLUDES_BASE=$WRAP_DIR/extra_includes
+  mkdir -p $EXTRA_INCLUDES_BASE
+
+  # x86 needs /usr/include/i386-linux-gnu/asm pointed to /usr/include/x86_64-linux-gnu/asm,
+  # but we can't write there. Instead, create a link here and force it to be included in the
+  # search paths.
+  # This problem goes away if linux-libc-dev:i386 pkg exists, but it's not in bionic.
+
+  mkdir -p $EXTRA_INCLUDES_BASE/i686-linux-gnu
+  rm -f $WRAP_DIR/extra_includes/i686-linux-gnu/asm
+  ln -s /usr/include/x86_64-linux-gnu/asm $EXTRA_INCLUDES_BASE/i686-linux-gnu/asm
+
+  # glibc 2.23 breaks compatibility with <=2.19 use of lgamma function.
+  # Hack the math header to restore the old behavior.
+  mkdir $EXTRA_INCLUDES_BASE/bits
+  sed -e '/__REDIRFROM .lgamma,/,+3s/_USE_/_DONTUSE_/g' /usr/include/x86_64-linux-gnu/bits/math-finite.h > $EXTRA_INCLUDES_BASE/bits/math-finite.h
+
+  # gcc 7+ honors SOURCE_DATE_EPOCH, no faketime needed
+  export SOURCE_DATE_EPOCH=`date -d 2000-01-01T12:00:00 +%s`
+
+  git config --global core.abbrev 9
+  cd nerva
+  # Set the version string that gets added to the tar archive name
+  version="`git describe`"
+  if [[ $version == *"-"*"-"* ]]; then
+    version="`git rev-parse --short=9 HEAD`"
+    version="`echo $version | head -c 9`"
+  fi
+
+  BASEPREFIX=`pwd`/contrib/depends
+  # Build dependencies for each host
+  export TAR_OPTIONS=--mtime=2000-01-01T12:00:00
+  for i in $HOSTS; do
+    ARCH_INCLUDES="$EXTRA_INCLUDES_BASE/$i"
+    if [ -d "$ARCH_INCLUDES" ]; then
+      EXTRA_INCLUDES="${EXTRA_INCLUDES_BASE}:${ARCH_INCLUDES}"
+    else
+      EXTRA_INCLUDES="${EXTRA_INCLUDES_BASE}"
+    fi
+    export C_INCLUDE_PATH="$EXTRA_INCLUDES"
+    export CPLUS_INCLUDE_PATH="$EXTRA_INCLUDES"
+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST="${i}" V=1
+  done
+
+  # Faketime for binaries
+  export PATH=${PATH_orig}
+  create_global_faketime_wrappers "${REFERENCE_DATETIME}"
+  create_per-host_faketime_wrappers "${REFERENCE_DATETIME}"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  ORIGPATH="$PATH"
+  # Build in a new dir for each host
+  export SOURCE_DATE_EPOCH=`date -d ${REFERENCE_DATE}T${REFERENCE_TIME} +%s`
+  export TAR_OPTIONS=--mtime=${REFERENCE_DATE}T${REFERENCE_TIME}
+  for i in ${HOSTS}; do
+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}
+    mkdir build && cd build
+    ARCH_INCLUDES="$EXTRA_INCLUDES_BASE/$i"
+    if [ -d "$ARCH_INCLUDES" ]; then
+      EXTRA_INCLUDES="${EXTRA_INCLUDES_BASE}:${ARCH_INCLUDES}"
+    else
+      EXTRA_INCLUDES="${EXTRA_INCLUDES_BASE}"
+    fi
+    export C_INCLUDE_PATH="$EXTRA_INCLUDES"
+    export CPLUS_INCLUDE_PATH="$EXTRA_INCLUDES"
+    #  glibc only added riscv support in 2.27, disable backwards compatibility
+    if [ "$i" == "riscv64-linux-gnu" ]; then
+      BACKCOMPAT_OPTION=OFF
+    else
+      BACKCOMPAT_OPTION=ON
+    fi
+    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake -DBACKCOMPAT=${BACKCOMPAT_OPTION} -DCMAKE_SKIP_RPATH=ON
+    make ${MAKEOPTS}
+    chmod 755 bin/*
+    cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
+    chmod 644 bin/LICENSE bin/*.md
+    DISTNAME=nerva-${i}-${version}
+    mv bin ${DISTNAME}
+    find ${DISTNAME}/ | sort | tar --no-recursion --owner=0 --group=0 -c -T - | bzip2 -9 > ${OUTDIR}/${DISTNAME}.tar.bz2
+    cd ..
+    rm -rf build
+  done
+
diff --git a/contrib/gitian/gitian-osx.yml b/contrib/gitian/gitian-osx.yml
new file mode 100644
index 00000000..6f5e72bd
--- /dev/null
+++ b/contrib/gitian/gitian-osx.yml
@@ -0,0 +1,119 @@
+---
+name: "nerva-osx-0.2"
+enable_cache: true
+suites:
+- "bionic"
+architectures:
+- "amd64"
+packages:
+- "ca-certificates"
+- "curl"
+- "g++"
+- "git"
+- "pkg-config"
+- "autoconf"
+- "libtool"
+- "automake"
+- "faketime"
+- "bsdmainutils"
+- "cmake"
+- "libcap-dev"
+- "libz-dev"
+- "libbz2-dev"
+- "python"
+- "python-dev"
+- "python-setuptools"
+remotes:
+- "url": "https://github.com/nerva-project/nerva.git"
+  "dir": "nerva"
+files: []
+script: |
+  WRAP_DIR=$HOME/wrapped
+  HOSTS="x86_64-apple-darwin aarch64-apple-darwin"
+  FAKETIME_HOST_PROGS=""
+  FAKETIME_PROGS="ar ranlib date dmg genisoimage python"
+
+  export GZIP="-9n"
+  export TZ="UTC"
+  export BUILD_DIR=`pwd`
+  mkdir -p ${WRAP_DIR}
+  if test -n "$GBUILD_CACHE_ENABLED"; then
+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}
+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}
+    export GITIAN=1
+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}
+  fi
+
+  export ZERO_AR_DATE=1
+
+  function create_global_faketime_wrappers {
+  for prog in ${FAKETIME_PROGS}; do
+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}
+    echo "REAL=\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\`" >> ${WRAP_DIR}/${prog}
+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}
+    echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${prog}
+    echo "\$REAL \$@" >> $WRAP_DIR/${prog}
+    chmod +x ${WRAP_DIR}/${prog}
+  done
+  }
+
+  function create_per-host_faketime_wrappers {
+  for i in $HOSTS; do
+    for prog in ${FAKETIME_HOST_PROGS}; do
+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}
+        echo "REAL=\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\`" >> ${WRAP_DIR}/${i}-${prog}
+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}
+        echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${i}-${prog}
+        echo "\$REAL \$@" >> $WRAP_DIR/${i}-${prog}
+        chmod +x ${WRAP_DIR}/${i}-${prog}
+    done
+  done
+  }
+
+  # Faketime for depends so intermediate results are comparable
+  export PATH_orig=${PATH}
+  create_global_faketime_wrappers "2000-01-01 12:00:00"
+  create_per-host_faketime_wrappers "2000-01-01 12:00:00"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  git config --global core.abbrev 9
+  cd nerva
+  # Set the version string that gets added to the tar archive name
+  version="`git describe`"
+  if [[ $version == *"-"*"-"* ]]; then
+    version="`git rev-parse --short=9 HEAD`"
+    version="`echo $version | head -c 9`"
+  fi
+
+  BASEPREFIX=`pwd`/contrib/depends
+
+  # Build dependencies for each host
+  export TAR_OPTIONS=--mtime=2000-01-01T12:00:00
+  for i in $HOSTS; do
+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST="${i}"
+  done
+
+  # Faketime for binaries
+  export PATH=${PATH_orig}
+  create_global_faketime_wrappers "${REFERENCE_DATETIME}"
+  create_per-host_faketime_wrappers "${REFERENCE_DATETIME}"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  ORIGPATH="$PATH"
+  # Build in a new dir for each host
+  export TAR_OPTIONS=--mtime=${REFERENCE_DATE}T${REFERENCE_TIME}
+  for i in ${HOSTS}; do
+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}
+    mkdir build && cd build
+    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake
+    make ${MAKEOPTS}
+    chmod 755 bin/*
+    cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
+    chmod 644 bin/LICENSE bin/*.md
+    DISTNAME=nerva-${i}-${version}
+    mv bin ${DISTNAME}
+    find ${DISTNAME}/ | sort | tar --no-recursion --owner=0 --group=0 -c -T - | bzip2 -9 > ${OUTDIR}/${DISTNAME}.tar.bz2
+    cd ..
+    rm -rf build
+  done
+
diff --git a/contrib/gitian/gitian-win.yml b/contrib/gitian/gitian-win.yml
new file mode 100644
index 00000000..8d5b62fa
--- /dev/null
+++ b/contrib/gitian/gitian-win.yml
@@ -0,0 +1,136 @@
+---
+name: "nerva-win-0.2"
+enable_cache: true
+suites:
+- "bionic"
+architectures:
+- "amd64"
+packages:
+- "curl"
+- "g++"
+- "git"
+- "pkg-config"
+- "autoconf"
+- "libtool"
+- "automake"
+- "faketime"
+- "bsdmainutils"
+- "mingw-w64"
+- "g++-mingw-w64"
+- "zip"
+- "ca-certificates"
+- "python"
+- "cmake"
+alternatives:
+-
+  package: "i686-w64-mingw32-g++"
+  path: "/usr/bin/i686-w64-mingw32-g++-posix"
+-
+  package: "i686-w64-mingw32-gcc"
+  path: "/usr/bin/i686-w64-mingw32-gcc-posix"
+-
+  package: "x86_64-w64-mingw32-g++"
+  path: "/usr/bin/x86_64-w64-mingw32-g++-posix"
+-
+  package: "x86_64-w64-mingw32-gcc"
+  path: "/usr/bin/x86_64-w64-mingw32-gcc-posix"
+remotes:
+- "url": "https://github.com/nerva-project/nerva.git"
+  "dir": "nerva"
+files: []
+script: |
+  WRAP_DIR=$HOME/wrapped
+  HOSTS="i686-w64-mingw32 x86_64-w64-mingw32"
+  FAKETIME_HOST_PROGS="windres objcopy"
+  FAKETIME_PROGS="date zip"
+  HOST_CFLAGS="-O2 -g"
+  HOST_CXXFLAGS="-O2 -g"
+
+  export GZIP="-9n"
+  export TZ="UTC"
+  export BUILD_DIR=`pwd`
+  mkdir -p ${WRAP_DIR}
+  if test -n "$GBUILD_CACHE_ENABLED"; then
+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}
+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}
+    export GITIAN=1
+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}
+  fi
+
+  function create_global_faketime_wrappers {
+  for prog in ${FAKETIME_PROGS}; do
+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}
+    echo "REAL=\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\`" >> ${WRAP_DIR}/${prog}
+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}
+    echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${prog}
+    echo "\$REAL \$@" >> $WRAP_DIR/${prog}
+    chmod +x ${WRAP_DIR}/${prog}
+  done
+  }
+
+  function create_per-host_faketime_wrappers {
+  for i in $HOSTS; do
+    for prog in ${FAKETIME_HOST_PROGS}; do
+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}
+        echo "REAL=\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\`" >> ${WRAP_DIR}/${i}-${prog}
+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}
+        echo "export FAKETIME=\"$1\"" >> ${WRAP_DIR}/${i}-${prog}
+        echo "\$REAL \$@" >> $WRAP_DIR/${i}-${prog}
+        chmod +x ${WRAP_DIR}/${i}-${prog}
+    done
+  done
+  }
+
+  # Faketime for depends so intermediate results are comparable
+  export PATH_orig=${PATH}
+  create_global_faketime_wrappers "2000-01-01 12:00:00"
+  create_per-host_faketime_wrappers "2000-01-01 12:00:00"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  # gcc 7+ honors SOURCE_DATE_EPOCH, no faketime needed
+  export SOURCE_DATE_EPOCH=`date -d 2000-01-01T12:00:00 +%s`
+
+  git config --global core.abbrev 9
+  cd nerva
+  # Set the version string that gets added to the tar archive name
+  version="`git describe`"
+  if [[ $version == *"-"*"-"* ]]; then
+    version="`git rev-parse --short=9 HEAD`"
+    version="`echo $version | head -c 9`"
+  fi
+
+  BASEPREFIX=`pwd`/contrib/depends
+  # Build dependencies for each host
+  export TAR_OPTIONS=--mtime=2000-01-01T12:00:00
+  for i in $HOSTS; do
+    EXTRA_INCLUDES="$EXTRA_INCLUDES_BASE/$i"
+    if [ -d "$EXTRA_INCLUDES" ]; then
+      export HOST_ID_SALT="$EXTRA_INCLUDES"
+    fi
+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST="${i}" V=1
+    unset HOST_ID_SALT
+  done
+
+  # Faketime for binaries
+  export PATH=${PATH_orig}
+  create_global_faketime_wrappers "${REFERENCE_DATETIME}"
+  create_per-host_faketime_wrappers "${REFERENCE_DATETIME}"
+  export PATH=${WRAP_DIR}:${PATH}
+
+  ORIGPATH="$PATH"
+  # Run cmake and make, for each create a new build/ directory, 
+  # compile from there, archive, export and delete the archive again
+  export SOURCE_DATE_EPOCH=`date -d ${REFERENCE_DATE}T${REFERENCE_TIME} +%s`
+  export TAR_OPTIONS=--mtime=${REFERENCE_DATE}T${REFERENCE_TIME}
+  for i in ${HOSTS}; do
+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}
+    mkdir build && cd build
+    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake
+    make ${MAKEOPTS}
+    cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
+    DISTNAME=nerva-${i}-${version}
+    mv bin ${DISTNAME}
+    find ${DISTNAME}/ | sort | zip -X@ ${OUTDIR}/${DISTNAME}.zip
+    cd .. && rm -rf build
+  done
+

From c7ba31df461e83abad0ac361da43bfb6951bff0a Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 00:49:07 +0530
Subject: [PATCH 03/27] ci(gitian): update repo url

---
 .github/workflows/gitian.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.github/workflows/gitian.yml b/.github/workflows/gitian.yml
index 426460a4..d049ee4e 100644
--- a/.github/workflows/gitian.yml
+++ b/.github/workflows/gitian.yml
@@ -29,7 +29,7 @@ jobs:
             -   name: Prepare
                 run: |
                     sudo apt update
-                    curl -O https://raw.githubusercontent.com/nerva-project/nerva/${{ github.ref_name }}/contrib/gitian/gitian-build.py
+                    curl -O https://raw.githubusercontent.com/Sn1F3rt/nerva/${{ github.ref_name }}/contrib/gitian/gitian-build.py
                     chmod +x gitian-build.py
             -   name: Setup
                 run: |

From 5c344be0c0341745f733e85580eb41b3cfafb6b2 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 00:53:33 +0530
Subject: [PATCH 04/27] ci(gitian): add `contrib/depends`

---
 contrib/depends/.gitignore                    |   11 +
 contrib/depends/Makefile                      |  191 +
 contrib/depends/README.md                     |   76 +
 contrib/depends/builders/darwin.mk            |   22 +
 contrib/depends/builders/default.mk           |   20 +
 contrib/depends/builders/linux.mk             |    2 +
 contrib/depends/config.guess                  | 1807 +++++
 contrib/depends/config.sub                    | 1960 +++++
 contrib/depends/description.md                |   53 +
 contrib/depends/funcs.mk                      |  270 +
 contrib/depends/hosts/android.mk              |   23 +
 contrib/depends/hosts/darwin.mk               |   23 +
 contrib/depends/hosts/default.mk              |   26 +
 contrib/depends/hosts/freebsd.mk              |   19 +
 contrib/depends/hosts/linux.mk                |   34 +
 contrib/depends/hosts/mingw32.mk              |   13 +
 contrib/depends/packages.md                   |  165 +
 contrib/depends/packages/android_ndk.mk       |   28 +
 contrib/depends/packages/boost.mk             |   47 +
 contrib/depends/packages/darwin_sdk.mk        |   10 +
 contrib/depends/packages/eudev.mk             |   29 +
 contrib/depends/packages/expat.mk             |   28 +
 contrib/depends/packages/freebsd_base.mk      |   23 +
 contrib/depends/packages/gtest.mk             |   39 +
 contrib/depends/packages/hidapi.mk            |   38 +
 contrib/depends/packages/libusb.mk            |   34 +
 contrib/depends/packages/native_cctools.mk    |   33 +
 contrib/depends/packages/native_clang.mk      |   28 +
 contrib/depends/packages/native_libtapi.mk    |   33 +
 contrib/depends/packages/native_protobuf.mk   |   28 +
 contrib/depends/packages/ncurses.mk           |   63 +
 contrib/depends/packages/openssl.mk           |   72 +
 contrib/depends/packages/packages.mk          |   28 +
 contrib/depends/packages/protobuf.mk          |   27 +
 contrib/depends/packages/readline.mk          |   29 +
 contrib/depends/packages/sodium.mk            |   34 +
 contrib/depends/packages/unbound.mk           |   36 +
 contrib/depends/packages/zeromq.mk            |   30 +
 .../patches/android_ndk/api_definition.patch  |   15 +
 .../depends/patches/boost/fix_arm_arch.patch  |   11 +
 .../depends/patches/boost/fix_aroptions.patch |   28 +
 .../patches/hidapi/missing_win_include.patch  |   21 +
 .../native_cctools/no-build-date.patch        |   12 +
 .../native_libtapi/no_embed_git_rev.patch     |   31 +
 contrib/depends/patches/ncurses/fallback.c    | 6621 +++++++++++++++++
 .../disable-glibc-getrandom-getentropy.patch  |   25 +
 .../patches/sodium/fix-whitespace.patch       |   13 +
 .../unbound/disable-glibc-reallocarray.patch  |   14 +
 contrib/depends/toolchain.cmake.in            |  177 +
 49 files changed, 12400 insertions(+)
 create mode 100644 contrib/depends/.gitignore
 create mode 100644 contrib/depends/Makefile
 create mode 100644 contrib/depends/README.md
 create mode 100644 contrib/depends/builders/darwin.mk
 create mode 100644 contrib/depends/builders/default.mk
 create mode 100644 contrib/depends/builders/linux.mk
 create mode 100644 contrib/depends/config.guess
 create mode 100644 contrib/depends/config.sub
 create mode 100644 contrib/depends/description.md
 create mode 100644 contrib/depends/funcs.mk
 create mode 100644 contrib/depends/hosts/android.mk
 create mode 100644 contrib/depends/hosts/darwin.mk
 create mode 100644 contrib/depends/hosts/default.mk
 create mode 100644 contrib/depends/hosts/freebsd.mk
 create mode 100644 contrib/depends/hosts/linux.mk
 create mode 100644 contrib/depends/hosts/mingw32.mk
 create mode 100644 contrib/depends/packages.md
 create mode 100644 contrib/depends/packages/android_ndk.mk
 create mode 100644 contrib/depends/packages/boost.mk
 create mode 100644 contrib/depends/packages/darwin_sdk.mk
 create mode 100644 contrib/depends/packages/eudev.mk
 create mode 100644 contrib/depends/packages/expat.mk
 create mode 100644 contrib/depends/packages/freebsd_base.mk
 create mode 100644 contrib/depends/packages/gtest.mk
 create mode 100644 contrib/depends/packages/hidapi.mk
 create mode 100644 contrib/depends/packages/libusb.mk
 create mode 100644 contrib/depends/packages/native_cctools.mk
 create mode 100644 contrib/depends/packages/native_clang.mk
 create mode 100644 contrib/depends/packages/native_libtapi.mk
 create mode 100644 contrib/depends/packages/native_protobuf.mk
 create mode 100644 contrib/depends/packages/ncurses.mk
 create mode 100644 contrib/depends/packages/openssl.mk
 create mode 100644 contrib/depends/packages/packages.mk
 create mode 100644 contrib/depends/packages/protobuf.mk
 create mode 100644 contrib/depends/packages/readline.mk
 create mode 100644 contrib/depends/packages/sodium.mk
 create mode 100644 contrib/depends/packages/unbound.mk
 create mode 100644 contrib/depends/packages/zeromq.mk
 create mode 100644 contrib/depends/patches/android_ndk/api_definition.patch
 create mode 100644 contrib/depends/patches/boost/fix_arm_arch.patch
 create mode 100644 contrib/depends/patches/boost/fix_aroptions.patch
 create mode 100644 contrib/depends/patches/hidapi/missing_win_include.patch
 create mode 100644 contrib/depends/patches/native_cctools/no-build-date.patch
 create mode 100644 contrib/depends/patches/native_libtapi/no_embed_git_rev.patch
 create mode 100644 contrib/depends/patches/ncurses/fallback.c
 create mode 100644 contrib/depends/patches/sodium/disable-glibc-getrandom-getentropy.patch
 create mode 100644 contrib/depends/patches/sodium/fix-whitespace.patch
 create mode 100644 contrib/depends/patches/unbound/disable-glibc-reallocarray.patch
 create mode 100644 contrib/depends/toolchain.cmake.in

diff --git a/contrib/depends/.gitignore b/contrib/depends/.gitignore
new file mode 100644
index 00000000..df595042
--- /dev/null
+++ b/contrib/depends/.gitignore
@@ -0,0 +1,11 @@
+SDKs/
+work/
+built/
+sources/
+config.site
+x86_64*
+i686*
+mips*
+arm*
+aarch64*
+riscv64*
diff --git a/contrib/depends/Makefile b/contrib/depends/Makefile
new file mode 100644
index 00000000..f612dbff
--- /dev/null
+++ b/contrib/depends/Makefile
@@ -0,0 +1,191 @@
+.NOTPARALLEL :
+
+# Pattern rule to print variables, e.g. make print-all_packages
+print-%: FORCE
+	@echo '$($*)'
+
+SOURCES_PATH ?= $(BASEDIR)/sources
+BASE_CACHE ?= $(BASEDIR)/built
+FALLBACK_DOWNLOAD_PATH ?= https://downloads.getmonero.org/depends-sources
+
+BUILD = $(shell ./config.guess)
+HOST ?= $(BUILD)
+PATCHES_PATH = $(BASEDIR)/patches
+BASEDIR = $(CURDIR)
+HASH_LENGTH:=11
+DOWNLOAD_CONNECT_TIMEOUT:=30
+DOWNLOAD_RETRIES:=5
+HOST_ID_SALT ?= salt
+BUILD_ID_SALT ?= salt
+
+host:=$(BUILD)
+ifneq ($(HOST),)
+host:=$(HOST)
+host_toolchain:=$(HOST)-
+endif
+
+ifneq ($(DEBUG),)
+release_type=Debug
+else
+release_type=Release
+endif
+
+ifneq ($(TESTS),)
+build_tests=ON
+release_type=Debug
+else
+build_tests=OFF
+endif
+
+base_build_dir=$(BASEDIR)/work/build
+base_staging_dir=$(BASEDIR)/work/staging
+base_download_dir=$(BASEDIR)/work/download
+canonical_host:=$(shell ./config.sub $(HOST))
+build:=$(shell ./config.sub $(BUILD))
+
+build_arch =$(firstword $(subst -, ,$(build)))
+build_vendor=$(word 2,$(subst -, ,$(build)))
+full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))
+build_os:=$(findstring linux,$(full_build_os))
+build_os+=$(findstring darwin,$(full_build_os))
+build_os:=$(strip $(build_os))
+ifeq ($(build_os),)
+build_os=$(full_build_os)
+endif
+
+host_arch=$(firstword $(subst -, ,$(canonical_host)))
+host_vendor=$(word 2,$(subst -, ,$(canonical_host)))
+full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))
+host_os:=$(findstring android,$(full_host_os))
+ifeq ($(host_os),)
+host_os:=$(findstring linux,$(full_host_os))
+endif
+host_os+=$(findstring darwin,$(full_host_os))
+host_os+=$(findstring freebsd,$(full_host_os))
+host_os+=$(findstring mingw32,$(full_host_os))
+host_os:=$(strip $(host_os))
+ifeq ($(host_os),)
+host_os=$(full_host_os)
+endif
+
+$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)
+$(host_arch)_$(host_os)_host=$(host)
+host_prefix=$($(host_arch)_$(host_os)_prefix)
+build_prefix=$(host_prefix)/native
+
+AT_$(V):=
+AT_:=@
+AT:=$(AT_$(V))
+
+all: install
+
+include hosts/$(host_os).mk
+include hosts/default.mk
+include builders/$(build_os).mk
+include builders/default.mk
+include packages/packages.mk
+
+build_id_string:=$(BUILD_ID_SALT)
+build_id_string+=$(shell $(build_CC) --version 2>/dev/null)
+build_id_string+=$(shell $(build_AR) --version 2>/dev/null)
+build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)
+build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)
+build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)
+
+$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)
+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)
+$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)
+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)
+$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)
+$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)
+
+packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages)
+native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)
+
+all_packages = $(packages) $(native_packages)
+
+meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk
+
+$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)
+
+include funcs.mk
+
+toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)
+final_build_id_long+=$(shell $(build_SHA256SUM) toolchain.cmake.in)
+final_build_id+=$(shell echo -n "$(final_build_id_long)" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))
+$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)
+	$(AT)rm -rf $(@D)
+	$(AT)mkdir -p $(@D)
+	$(AT)echo copying packages: $^
+	$(AT)echo to: $(@D)
+	$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )
+	$(AT)touch $@
+
+$(host_prefix)/share/toolchain.cmake : toolchain.cmake.in $(host_prefix)/.stamp_$(final_build_id)
+	$(AT)@mkdir -p $(@D)
+	$(AT)sed -e 's|@HOST@|$(host)|' \
+            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \
+            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \
+            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \
+            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \
+            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \
+            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \
+            -e 's|@build_os@|$(build_os)|' \
+            -e 's|@host_os@|$(host_os)|' \
+            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \
+            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \
+            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \
+            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \
+            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \
+            -e 's|@debug@|$(DEBUG)|' \
+            -e 's|@release_type@|$(release_type)|' \
+            -e 's|@build_tests@|$(build_tests)|' \
+            -e 's|@cmake_system_name@|$($(host_os)_cmake_system)|' \
+            -e 's|@prefix@|$($(host_arch)_$(host_os)_prefix)|'\
+            -e 's|@arch@|$(host_arch)|'\
+            $< > $@
+	$(AT)touch $@
+
+define check_or_remove_cached
+  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \
+  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \
+  ( rm -f $($(package)_cached_checksum); \
+    if test -f "$($(package)_cached)"; then echo "Checksum mismatch for $(package). Forcing rebuild.."; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )
+endef
+
+define check_or_remove_sources
+  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \
+  test -f $($(package)_fetched) && ( $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \
+    ( echo "Checksum missing or mismatched for $(package) source. Forcing re-download."; \
+      rm -f $($(package)_all_sources) $($(1)_fetched))) || true
+endef
+
+check-packages:
+	@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)
+check-sources:
+	@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)
+
+$(host_prefix)/share/toolchain.cmake: check-packages
+
+check-packages: check-sources
+
+install: check-packages $(host_prefix)/share/toolchain.cmake
+
+download-one: check-sources $(all_sources)
+
+download-osx:
+	@$(MAKE) -s HOST=x86_64-apple-darwin download-one
+download-linux:
+	@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one
+download-win:
+	@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one
+download-freebsd:
+	@$(MAKE) -s HOST=x86_64-unknown-freebsd download-one
+download-android:
+	@$(MAKE) -s HOST=aarch64-linux-android download-one
+download: download-osx download-linux download-win download-freebsd download-android
+
+ $(foreach package,$(all_packages),$(eval $(call ext_add_stages,$(package))))
+
+.PHONY: install cached download-one download-osx download-linux download-win download-freebsd download-android download check-packages check-sources
+.PHONY: FORCE
diff --git a/contrib/depends/README.md b/contrib/depends/README.md
new file mode 100644
index 00000000..d19baaf8
--- /dev/null
+++ b/contrib/depends/README.md
@@ -0,0 +1,76 @@
+### Usage
+
+To build dependencies for the current arch+OS, from this working directory:
+
+```bash
+make
+```
+
+To build for another arch/OS:
+
+```bash
+make HOST=host-platform-triplet
+```
+
+For example:
+
+```bash
+make HOST=x86_64-w64-mingw32 -j4
+```
+
+A toolchain will be generated that's suitable for plugging into Monero's
+cmake. In the above example, a dir named x86_64-w64-mingw32 will be
+created. To use it for Monero, from the top of the Monero source tree:
+
+```bash
+mkdir build
+cd build
+cmake -DCMAKE_TOOLCHAIN_FILE=$PWD/../contrib/depends/x86_64-w64-mingw32/share/toolchain.cmake ..
+```
+
+Common `host-platform-triplets` for cross compilation are:
+
+- `i686-w64-mingw32` for Win32
+- `x86_64-w64-mingw32` for Win64
+- `x86_64-apple-darwin` for MacOSX x86_64
+- `arm-linux-gnueabihf` for Linux ARM 32 bit
+- `aarch64-linux-gnu` for Linux ARM 64 bit
+- `riscv64-linux-gnu` for Linux RISCV 64 bit
+
+No other options are needed, the paths are automatically configured.
+
+Dependency Options:
+The following can be set when running make: make FOO=bar
+
+```
+SOURCES_PATH: downloaded sources will be placed here
+BASE_CACHE: built packages will be placed here
+FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up
+DEBUG: disable some optimizations and enable more runtime checking
+HOST_ID_SALT: Optional salt to use when generating host package ids
+BUILD_ID_SALT: Optional salt to use when generating build package ids
+```
+
+Additional targets:
+
+```
+download: run 'make download' to fetch all sources without building them
+download-osx: run 'make download-osx' to fetch all sources needed for osx builds
+download-win: run 'make download-win' to fetch all sources needed for win builds
+download-linux: run 'make download-linux' to fetch all sources needed for linux builds
+```
+
+#Mingw builds
+
+Building for 32/64bit mingw requires switching alternatives to a posix mode
+
+```bash
+update-alternatives --set x86_64-w64-mingw32-g++ x86_64-w64-mingw32-g++-posix
+update-alternatives --set x86_64-w64-mingw32-gcc x86_64-w64-mingw32-gcc-posix
+```
+
+### Other documentation
+
+- [description.md](description.md): General description of the depends system
+- [packages.md](packages.md): Steps for adding packages
+
diff --git a/contrib/depends/builders/darwin.mk b/contrib/depends/builders/darwin.mk
new file mode 100644
index 00000000..27f550ab
--- /dev/null
+++ b/contrib/depends/builders/darwin.mk
@@ -0,0 +1,22 @@
+build_darwin_CC: = $(shell xcrun -f clang)
+build_darwin_CXX: = $(shell xcrun -f clang++)
+build_darwin_AR: = $(shell xcrun -f ar)
+build_darwin_RANLIB: = $(shell xcrun -f ranlib)
+build_darwin_STRIP: = $(shell xcrun -f strip)
+build_darwin_OTOOL: = $(shell xcrun -f otool)
+build_darwin_NM: = $(shell xcrun -f nm)
+build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)
+build_darwin_SHA256SUM = shasum -a 256
+build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o
+
+#darwin host on darwin builder. overrides darwin host preferences.
+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)
+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++
+darwin_AR:=$(shell xcrun -f ar)
+darwin_RANLIB:=$(shell xcrun -f ranlib)
+darwin_STRIP:=$(shell xcrun -f strip)
+darwin_LIBTOOL:=$(shell xcrun -f libtool)
+darwin_OTOOL:=$(shell xcrun -f otool)
+darwin_NM:=$(shell xcrun -f nm)
+darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)
+darwin_native_toolchain=
diff --git a/contrib/depends/builders/default.mk b/contrib/depends/builders/default.mk
new file mode 100644
index 00000000..c4191435
--- /dev/null
+++ b/contrib/depends/builders/default.mk
@@ -0,0 +1,20 @@
+default_build_CC = gcc
+default_build_CXX = g++
+default_build_AR = ar
+default_build_RANLIB = ranlib
+default_build_STRIP = strip
+default_build_NM = nm
+default_build_OTOOL = otool
+default_build_INSTALL_NAME_TOOL = install_name_tool
+
+define add_build_tool_func
+build_$(build_os)_$1 ?= $$(default_build_$1)
+build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)
+build_$1=$$(build_$(build_arch)_$(build_os)_$1)
+endef
+$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))
+define add_build_flags_func
+build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)
+build_$1=$$(build_$(build_arch)_$(build_os)_$1)
+endef
+$(foreach flags, CFLAGS CXXFLAGS ARFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))
diff --git a/contrib/depends/builders/linux.mk b/contrib/depends/builders/linux.mk
new file mode 100644
index 00000000..b03f4240
--- /dev/null
+++ b/contrib/depends/builders/linux.mk
@@ -0,0 +1,2 @@
+build_linux_SHA256SUM = sha256sum
+build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o
diff --git a/contrib/depends/config.guess b/contrib/depends/config.guess
new file mode 100644
index 00000000..cdfc4392
--- /dev/null
+++ b/contrib/depends/config.guess
@@ -0,0 +1,1807 @@
+#! /bin/sh
+# Attempt to guess a canonical system name.
+#   Copyright 1992-2023 Free Software Foundation, Inc.
+
+# shellcheck disable=SC2006,SC2268 # see below for rationale
+
+timestamp='2023-08-22'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, see <https://www.gnu.org/licenses/>.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that
+# program.  This Exception is an additional permission under section 7
+# of the GNU General Public License, version 3 ("GPLv3").
+#
+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.
+#
+# You can get the latest version of this script from:
+# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess
+#
+# Please send patches to <config-patches@gnu.org>.
+
+
+# The "shellcheck disable" line above the timestamp inhibits complaints
+# about features and limitations of the classic Bourne shell that were
+# superseded or lifted in POSIX.  However, this script identifies a wide
+# variety of pre-POSIX systems that do not have POSIX shells at all, and
+# even some reasonably current systems (Solaris 10 as case-in-point) still
+# have a pre-POSIX /bin/sh.
+
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION]
+
+Output the configuration name of the system '$me' is run on.
+
+Options:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.guess ($timestamp)
+
+Originally written by Per Bothner.
+Copyright 1992-2023 Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try '$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+    * )
+       break ;;
+  esac
+done
+
+if test $# != 0; then
+  echo "$me: too many arguments$help" >&2
+  exit 1
+fi
+
+# Just in case it came from the environment.
+GUESS=
+
+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
+# compiler to aid in system detection is discouraged as it requires
+# temporary files to be created and, as you can see below, it is a
+# headache to deal with in a portable fashion.
+
+# Historically, 'CC_FOR_BUILD' used to be named 'HOST_CC'. We still
+# use 'HOST_CC' if defined, but it is deprecated.
+
+# Portable tmp directory creation inspired by the Autoconf team.
+
+tmp=
+# shellcheck disable=SC2172
+trap 'test -z "$tmp" || rm -fr "$tmp"' 0 1 2 13 15
+
+set_cc_for_build() {
+    # prevent multiple calls if $tmp is already set
+    test "$tmp" && return 0
+    : "${TMPDIR=/tmp}"
+    # shellcheck disable=SC2039,SC3028
+    { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+	{ test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir "$tmp" 2>/dev/null) ; } ||
+	{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir "$tmp" 2>/dev/null) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+	{ echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; }
+    dummy=$tmp/dummy
+    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in
+	,,)    echo "int x;" > "$dummy.c"
+	       for driver in cc gcc c89 c99 ; do
+		   if ($driver -c -o "$dummy.o" "$dummy.c") >/dev/null 2>&1 ; then
+		       CC_FOR_BUILD=$driver
+		       break
+		   fi
+	       done
+	       if test x"$CC_FOR_BUILD" = x ; then
+		   CC_FOR_BUILD=no_compiler_found
+	       fi
+	       ;;
+	,,*)   CC_FOR_BUILD=$CC ;;
+	,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+    esac
+}
+
+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.
+# (ghazi@noc.rutgers.edu 1994-08-24)
+if test -f /.attbin/uname ; then
+	PATH=$PATH:/.attbin ; export PATH
+fi
+
+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
+UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown
+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
+
+case $UNAME_SYSTEM in
+Linux|GNU|GNU/*)
+	LIBC=unknown
+
+	set_cc_for_build
+	cat <<-EOF > "$dummy.c"
+	#if defined(__ANDROID__)
+	LIBC=android
+	#else
+	#include <features.h>
+	#if defined(__UCLIBC__)
+	LIBC=uclibc
+	#elif defined(__dietlibc__)
+	LIBC=dietlibc
+	#elif defined(__GLIBC__)
+	LIBC=gnu
+	#else
+	#include <stdarg.h>
+	/* First heuristic to detect musl libc.  */
+	#ifdef __DEFINED_va_list
+	LIBC=musl
+	#endif
+	#endif
+	#endif
+	EOF
+	cc_set_libc=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`
+	eval "$cc_set_libc"
+
+	# Second heuristic to detect musl libc.
+	if [ "$LIBC" = unknown ] &&
+	   command -v ldd >/dev/null &&
+	   ldd --version 2>&1 | grep -q ^musl; then
+		LIBC=musl
+	fi
+
+	# If the system lacks a compiler, then just pick glibc.
+	# We could probably try harder.
+	if [ "$LIBC" = unknown ]; then
+		LIBC=gnu
+	fi
+	;;
+esac
+
+# Note: order is significant - the case branches are not exclusive.
+
+case $UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION in
+    *:NetBSD:*:*)
+	# NetBSD (nbsd) targets should (where applicable) match one or
+	# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,
+	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
+	# switched to ELF, *-*-netbsd* would select the old
+	# object file format.  This provides both forward
+	# compatibility and a consistent mechanism for selecting the
+	# object file format.
+	#
+	# Note: NetBSD doesn't particularly care about the vendor
+	# portion of the name.  We always set it to "unknown".
+	UNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \
+	    /sbin/sysctl -n hw.machine_arch 2>/dev/null || \
+	    /usr/sbin/sysctl -n hw.machine_arch 2>/dev/null || \
+	    echo unknown)`
+	case $UNAME_MACHINE_ARCH in
+	    aarch64eb) machine=aarch64_be-unknown ;;
+	    armeb) machine=armeb-unknown ;;
+	    arm*) machine=arm-unknown ;;
+	    sh3el) machine=shl-unknown ;;
+	    sh3eb) machine=sh-unknown ;;
+	    sh5el) machine=sh5le-unknown ;;
+	    earmv*)
+		arch=`echo "$UNAME_MACHINE_ARCH" | sed -e 's,^e\(armv[0-9]\).*$,\1,'`
+		endian=`echo "$UNAME_MACHINE_ARCH" | sed -ne 's,^.*\(eb\)$,\1,p'`
+		machine=${arch}${endian}-unknown
+		;;
+	    *) machine=$UNAME_MACHINE_ARCH-unknown ;;
+	esac
+	# The Operating System including object format, if it has switched
+	# to ELF recently (or will in the future) and ABI.
+	case $UNAME_MACHINE_ARCH in
+	    earm*)
+		os=netbsdelf
+		;;
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
+		set_cc_for_build
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
+			| grep -q __ELF__
+		then
+		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
+		    # Return netbsd for either.  FIX?
+		    os=netbsd
+		else
+		    os=netbsdelf
+		fi
+		;;
+	    *)
+		os=netbsd
+		;;
+	esac
+	# Determine ABI tags.
+	case $UNAME_MACHINE_ARCH in
+	    earm*)
+		expr='s/^earmv[0-9]/-eabi/;s/eb$//'
+		abi=`echo "$UNAME_MACHINE_ARCH" | sed -e "$expr"`
+		;;
+	esac
+	# The OS release
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case $UNAME_VERSION in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo "$UNAME_RELEASE" | sed -e 's/[-_].*//' | cut -d. -f1,2`
+		;;
+	esac
+	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
+	# contains redundant information, the shorter form:
+	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
+	GUESS=$machine-${os}${release}${abi-}
+	;;
+    *:Bitrig:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`
+	GUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE
+	;;
+    *:OpenBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
+	GUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE
+	;;
+    *:SecBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`
+	GUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE
+	;;
+    *:LibertyBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\.//'`
+	GUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE
+	;;
+    *:MidnightBSD:*:*)
+	GUESS=$UNAME_MACHINE-unknown-midnightbsd$UNAME_RELEASE
+	;;
+    *:ekkoBSD:*:*)
+	GUESS=$UNAME_MACHINE-unknown-ekkobsd$UNAME_RELEASE
+	;;
+    *:SolidBSD:*:*)
+	GUESS=$UNAME_MACHINE-unknown-solidbsd$UNAME_RELEASE
+	;;
+    *:OS108:*:*)
+	GUESS=$UNAME_MACHINE-unknown-os108_$UNAME_RELEASE
+	;;
+    macppc:MirBSD:*:*)
+	GUESS=powerpc-unknown-mirbsd$UNAME_RELEASE
+	;;
+    *:MirBSD:*:*)
+	GUESS=$UNAME_MACHINE-unknown-mirbsd$UNAME_RELEASE
+	;;
+    *:Sortix:*:*)
+	GUESS=$UNAME_MACHINE-unknown-sortix
+	;;
+    *:Twizzler:*:*)
+	GUESS=$UNAME_MACHINE-unknown-twizzler
+	;;
+    *:Redox:*:*)
+	GUESS=$UNAME_MACHINE-unknown-redox
+	;;
+    mips:OSF1:*.*)
+	GUESS=mips-dec-osf1
+	;;
+    alpha:OSF1:*:*)
+	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
+	trap '' 0
+	case $UNAME_RELEASE in
+	*4.0)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
+		;;
+	*5.*)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case $ALPHA_CPU_TYPE in
+	    "EV4 (21064)")
+		UNAME_MACHINE=alpha ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE=alpha ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE=alpha ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE=alphaev5 ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE=alphaev56 ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE=alphapca56 ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE=alphapca57 ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE=alphaev6 ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE=alphaev67 ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE=alphaev68 ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE=alphaev68 ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE=alphaev68 ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE=alphaev69 ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE=alphaev7 ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE=alphaev79 ;;
+	esac
+	# A Pn.n version is a patched version.
+	# A Vn.n version is a released version.
+	# A Tn.n version is a released field test version.
+	# A Xn.n version is an unreleased experimental baselevel.
+	# 1.2 uses "1.2" for uname -r.
+	OSF_REL=`echo "$UNAME_RELEASE" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
+	GUESS=$UNAME_MACHINE-dec-osf$OSF_REL
+	;;
+    Amiga*:UNIX_System_V:4.0:*)
+	GUESS=m68k-unknown-sysv4
+	;;
+    *:[Aa]miga[Oo][Ss]:*:*)
+	GUESS=$UNAME_MACHINE-unknown-amigaos
+	;;
+    *:[Mm]orph[Oo][Ss]:*:*)
+	GUESS=$UNAME_MACHINE-unknown-morphos
+	;;
+    *:OS/390:*:*)
+	GUESS=i370-ibm-openedition
+	;;
+    *:z/VM:*:*)
+	GUESS=s390-ibm-zvmoe
+	;;
+    *:OS400:*:*)
+	GUESS=powerpc-ibm-os400
+	;;
+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
+	GUESS=arm-acorn-riscix$UNAME_RELEASE
+	;;
+    arm*:riscos:*:*|arm*:RISCOS:*:*)
+	GUESS=arm-unknown-riscos
+	;;
+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
+	GUESS=hppa1.1-hitachi-hiuxmpp
+	;;
+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
+	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
+	case `(/bin/universe) 2>/dev/null` in
+	    att) GUESS=pyramid-pyramid-sysv3 ;;
+	    *)   GUESS=pyramid-pyramid-bsd   ;;
+	esac
+	;;
+    NILE*:*:*:dcosx)
+	GUESS=pyramid-pyramid-svr4
+	;;
+    DRS?6000:unix:4.0:6*)
+	GUESS=sparc-icl-nx6
+	;;
+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
+	case `/usr/bin/uname -p` in
+	    sparc) GUESS=sparc-icl-nx7 ;;
+	esac
+	;;
+    s390x:SunOS:*:*)
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
+	GUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL
+	;;
+    sun4H:SunOS:5.*:*)
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
+	GUESS=sparc-hal-solaris2$SUN_REL
+	;;
+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
+	GUESS=sparc-sun-solaris2$SUN_REL
+	;;
+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)
+	GUESS=i386-pc-auroraux$UNAME_RELEASE
+	;;
+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
+	set_cc_for_build
+	SUN_ARCH=i386
+	# If there is a compiler, see if it is configured for 64-bit objects.
+	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
+	# This test works for both compilers.
+	if test "$CC_FOR_BUILD" != no_compiler_found; then
+	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
+		(CCOPTS="" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \
+		grep IS_64BIT_ARCH >/dev/null
+	    then
+		SUN_ARCH=x86_64
+	    fi
+	fi
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
+	GUESS=$SUN_ARCH-pc-solaris2$SUN_REL
+	;;
+    sun4*:SunOS:6*:*)
+	# According to config.sub, this is the proper way to canonicalize
+	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
+	# it's likely to be more like Solaris than SunOS4.
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
+	GUESS=sparc-sun-solaris3$SUN_REL
+	;;
+    sun4*:SunOS:*:*)
+	case `/usr/bin/arch -k` in
+	    Series*|S4*)
+		UNAME_RELEASE=`uname -v`
+		;;
+	esac
+	# Japanese Language versions have a version number like '4.1.3-JL'.
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/-/_/'`
+	GUESS=sparc-sun-sunos$SUN_REL
+	;;
+    sun3*:SunOS:*:*)
+	GUESS=m68k-sun-sunos$UNAME_RELEASE
+	;;
+    sun*:*:4.2BSD:*)
+	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	test "x$UNAME_RELEASE" = x && UNAME_RELEASE=3
+	case `/bin/arch` in
+	    sun3)
+		GUESS=m68k-sun-sunos$UNAME_RELEASE
+		;;
+	    sun4)
+		GUESS=sparc-sun-sunos$UNAME_RELEASE
+		;;
+	esac
+	;;
+    aushp:SunOS:*:*)
+	GUESS=sparc-auspex-sunos$UNAME_RELEASE
+	;;
+    # The situation for MiNT is a little confusing.  The machine name
+    # can be virtually everything (everything which is not
+    # "atarist" or "atariste" at least should have a processor
+    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
+    # to the lowercase version "mint" (or "freemint").  Finally
+    # the system name "TOS" denotes a system which is actually not
+    # MiNT.  But MiNT is downward compatible to TOS, so this should
+    # be no problem.
+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
+	GUESS=m68k-atari-mint$UNAME_RELEASE
+	;;
+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
+	GUESS=m68k-atari-mint$UNAME_RELEASE
+	;;
+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
+	GUESS=m68k-atari-mint$UNAME_RELEASE
+	;;
+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
+	GUESS=m68k-milan-mint$UNAME_RELEASE
+	;;
+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
+	GUESS=m68k-hades-mint$UNAME_RELEASE
+	;;
+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
+	GUESS=m68k-unknown-mint$UNAME_RELEASE
+	;;
+    m68k:machten:*:*)
+	GUESS=m68k-apple-machten$UNAME_RELEASE
+	;;
+    powerpc:machten:*:*)
+	GUESS=powerpc-apple-machten$UNAME_RELEASE
+	;;
+    RISC*:Mach:*:*)
+	GUESS=mips-dec-mach_bsd4.3
+	;;
+    RISC*:ULTRIX:*:*)
+	GUESS=mips-dec-ultrix$UNAME_RELEASE
+	;;
+    VAX*:ULTRIX*:*:*)
+	GUESS=vax-dec-ultrix$UNAME_RELEASE
+	;;
+    2020:CLIX:*:* | 2430:CLIX:*:*)
+	GUESS=clipper-intergraph-clix$UNAME_RELEASE
+	;;
+    mips:*:*:UMIPS | mips:*:*:RISCos)
+	set_cc_for_build
+	sed 's/^	//' << EOF > "$dummy.c"
+#ifdef __cplusplus
+#include <stdio.h>  /* for printf() prototype */
+	int main (int argc, char *argv[]) {
+#else
+	int main (argc, argv) int argc; char *argv[]; {
+#endif
+	#if defined (host_mips) && defined (MIPSEB)
+	#if defined (SYSTYPE_SYSV)
+	  printf ("mips-mips-riscos%ssysv\\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_SVR4)
+	  printf ("mips-mips-riscos%ssvr4\\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
+	  printf ("mips-mips-riscos%sbsd\\n", argv[1]); exit (0);
+	#endif
+	#endif
+	  exit (-1);
+	}
+EOF
+	$CC_FOR_BUILD -o "$dummy" "$dummy.c" &&
+	  dummyarg=`echo "$UNAME_RELEASE" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`"$dummy" "$dummyarg"` &&
+	    { echo "$SYSTEM_NAME"; exit; }
+	GUESS=mips-mips-riscos$UNAME_RELEASE
+	;;
+    Motorola:PowerMAX_OS:*:*)
+	GUESS=powerpc-motorola-powermax
+	;;
+    Motorola:*:4.3:PL8-*)
+	GUESS=powerpc-harris-powermax
+	;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
+	GUESS=powerpc-harris-powermax
+	;;
+    Night_Hawk:Power_UNIX:*:*)
+	GUESS=powerpc-harris-powerunix
+	;;
+    m88k:CX/UX:7*:*)
+	GUESS=m88k-harris-cxux7
+	;;
+    m88k:*:4*:R4*)
+	GUESS=m88k-motorola-sysv4
+	;;
+    m88k:*:3*:R3*)
+	GUESS=m88k-motorola-sysv3
+	;;
+    AViiON:dgux:*:*)
+	# DG/UX returns AViiON for all architectures
+	UNAME_PROCESSOR=`/usr/bin/uname -p`
+	if test "$UNAME_PROCESSOR" = mc88100 || test "$UNAME_PROCESSOR" = mc88110
+	then
+	    if test "$TARGET_BINARY_INTERFACE"x = m88kdguxelfx || \
+	       test "$TARGET_BINARY_INTERFACE"x = x
+	    then
+		GUESS=m88k-dg-dgux$UNAME_RELEASE
+	    else
+		GUESS=m88k-dg-dguxbcs$UNAME_RELEASE
+	    fi
+	else
+	    GUESS=i586-dg-dgux$UNAME_RELEASE
+	fi
+	;;
+    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
+	GUESS=m88k-dolphin-sysv3
+	;;
+    M88*:*:R3*:*)
+	# Delta 88k system running SVR3
+	GUESS=m88k-motorola-sysv3
+	;;
+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
+	GUESS=m88k-tektronix-sysv3
+	;;
+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
+	GUESS=m68k-tektronix-bsd
+	;;
+    *:IRIX*:*:*)
+	IRIX_REL=`echo "$UNAME_RELEASE" | sed -e 's/-/_/g'`
+	GUESS=mips-sgi-irix$IRIX_REL
+	;;
+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
+	GUESS=romp-ibm-aix    # uname -m gives an 8 hex-code CPU id
+	;;                    # Note that: echo "'`uname -s`'" gives 'AIX '
+    i*86:AIX:*:*)
+	GUESS=i386-ibm-aix
+	;;
+    ia64:AIX:*:*)
+	if test -x /usr/bin/oslevel ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=$UNAME_VERSION.$UNAME_RELEASE
+	fi
+	GUESS=$UNAME_MACHINE-ibm-aix$IBM_REV
+	;;
+    *:AIX:2:3)
+	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
+		set_cc_for_build
+		sed 's/^		//' << EOF > "$dummy.c"
+		#include <sys/systemcfg.h>
+
+		main()
+			{
+			if (!__power_pc())
+				exit(1);
+			puts("powerpc-ibm-aix3.2.5");
+			exit(0);
+			}
+EOF
+		if $CC_FOR_BUILD -o "$dummy" "$dummy.c" && SYSTEM_NAME=`"$dummy"`
+		then
+			GUESS=$SYSTEM_NAME
+		else
+			GUESS=rs6000-ibm-aix3.2.5
+		fi
+	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
+		GUESS=rs6000-ibm-aix3.2.4
+	else
+		GUESS=rs6000-ibm-aix3.2
+	fi
+	;;
+    *:AIX:*:[4567])
+	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/sbin/lsattr -El "$IBM_CPU_ID" | grep ' POWER' >/dev/null 2>&1; then
+		IBM_ARCH=rs6000
+	else
+		IBM_ARCH=powerpc
+	fi
+	if test -x /usr/bin/lslpp ; then
+		IBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \
+			   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`
+	else
+		IBM_REV=$UNAME_VERSION.$UNAME_RELEASE
+	fi
+	GUESS=$IBM_ARCH-ibm-aix$IBM_REV
+	;;
+    *:AIX:*:*)
+	GUESS=rs6000-ibm-aix
+	;;
+    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)
+	GUESS=romp-ibm-bsd4.4
+	;;
+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
+	GUESS=romp-ibm-bsd$UNAME_RELEASE    # 4.3 with uname added to
+	;;                                  # report: romp-ibm BSD 4.3
+    *:BOSX:*:*)
+	GUESS=rs6000-bull-bosx
+	;;
+    DPX/2?00:B.O.S.:*:*)
+	GUESS=m68k-bull-sysv3
+	;;
+    9000/[34]??:4.3bsd:1.*:*)
+	GUESS=m68k-hp-bsd
+	;;
+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
+	GUESS=m68k-hp-bsd4.4
+	;;
+    9000/[34678]??:HP-UX:*:*)
+	HPUX_REV=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*.[0B]*//'`
+	case $UNAME_MACHINE in
+	    9000/31?)            HP_ARCH=m68000 ;;
+	    9000/[34]??)         HP_ARCH=m68k ;;
+	    9000/[678][0-9][0-9])
+		if test -x /usr/bin/getconf; then
+		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+		    case $sc_cpu_version in
+		      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0
+		      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1
+		      532)                      # CPU_PA_RISC2_0
+			case $sc_kernel_bits in
+			  32) HP_ARCH=hppa2.0n ;;
+			  64) HP_ARCH=hppa2.0w ;;
+			  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20
+			esac ;;
+		    esac
+		fi
+		if test "$HP_ARCH" = ""; then
+		    set_cc_for_build
+		    sed 's/^		//' << EOF > "$dummy.c"
+
+		#define _HPUX_SOURCE
+		#include <stdlib.h>
+		#include <unistd.h>
+
+		int main ()
+		{
+		#if defined(_SC_KERNEL_BITS)
+		    long bits = sysconf(_SC_KERNEL_BITS);
+		#endif
+		    long cpu  = sysconf (_SC_CPU_VERSION);
+
+		    switch (cpu)
+			{
+			case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
+			case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
+			case CPU_PA_RISC2_0:
+		#if defined(_SC_KERNEL_BITS)
+			    switch (bits)
+				{
+				case 64: puts ("hppa2.0w"); break;
+				case 32: puts ("hppa2.0n"); break;
+				default: puts ("hppa2.0"); break;
+				} break;
+		#else  /* !defined(_SC_KERNEL_BITS) */
+			    puts ("hppa2.0"); break;
+		#endif
+			default: puts ("hppa1.0"); break;
+			}
+		    exit (0);
+		}
+EOF
+		    (CCOPTS="" $CC_FOR_BUILD -o "$dummy" "$dummy.c" 2>/dev/null) && HP_ARCH=`"$dummy"`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
+		fi ;;
+	esac
+	if test "$HP_ARCH" = hppa2.0w
+	then
+	    set_cc_for_build
+
+	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
+	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
+	    # generating 64-bit code.  GNU and HP use different nomenclature:
+	    #
+	    # $ CC_FOR_BUILD=cc ./config.guess
+	    # => hppa2.0w-hp-hpux11.23
+	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
+	    # => hppa64-hp-hpux11.23
+
+	    if echo __LP64__ | (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) |
+		grep -q __LP64__
+	    then
+		HP_ARCH=hppa2.0w
+	    else
+		HP_ARCH=hppa64
+	    fi
+	fi
+	GUESS=$HP_ARCH-hp-hpux$HPUX_REV
+	;;
+    ia64:HP-UX:*:*)
+	HPUX_REV=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*.[0B]*//'`
+	GUESS=ia64-hp-hpux$HPUX_REV
+	;;
+    3050*:HI-UX:*:*)
+	set_cc_for_build
+	sed 's/^	//' << EOF > "$dummy.c"
+	#include <unistd.h>
+	int
+	main ()
+	{
+	  long cpu = sysconf (_SC_CPU_VERSION);
+	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
+	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
+	     results, however.  */
+	  if (CPU_IS_PA_RISC (cpu))
+	    {
+	      switch (cpu)
+		{
+		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
+		  default: puts ("hppa-hitachi-hiuxwe2"); break;
+		}
+	    }
+	  else if (CPU_IS_HP_MC68K (cpu))
+	    puts ("m68k-hitachi-hiuxwe2");
+	  else puts ("unknown-hitachi-hiuxwe2");
+	  exit (0);
+	}
+EOF
+	$CC_FOR_BUILD -o "$dummy" "$dummy.c" && SYSTEM_NAME=`"$dummy"` &&
+		{ echo "$SYSTEM_NAME"; exit; }
+	GUESS=unknown-hitachi-hiuxwe2
+	;;
+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)
+	GUESS=hppa1.1-hp-bsd
+	;;
+    9000/8??:4.3bsd:*:*)
+	GUESS=hppa1.0-hp-bsd
+	;;
+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
+	GUESS=hppa1.0-hp-mpeix
+	;;
+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)
+	GUESS=hppa1.1-hp-osf
+	;;
+    hp8??:OSF1:*:*)
+	GUESS=hppa1.0-hp-osf
+	;;
+    i*86:OSF1:*:*)
+	if test -x /usr/sbin/sysversion ; then
+	    GUESS=$UNAME_MACHINE-unknown-osf1mk
+	else
+	    GUESS=$UNAME_MACHINE-unknown-osf1
+	fi
+	;;
+    parisc*:Lites*:*:*)
+	GUESS=hppa1.1-hp-lites
+	;;
+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
+	GUESS=c1-convex-bsd
+	;;
+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+	exit ;;
+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
+	GUESS=c34-convex-bsd
+	;;
+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
+	GUESS=c38-convex-bsd
+	;;
+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
+	GUESS=c4-convex-bsd
+	;;
+    CRAY*Y-MP:*:*:*)
+	CRAY_REL=`echo "$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'`
+	GUESS=ymp-cray-unicos$CRAY_REL
+	;;
+    CRAY*[A-Z]90:*:*:*)
+	echo "$UNAME_MACHINE"-cray-unicos"$UNAME_RELEASE" \
+	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
+	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
+	      -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*TS:*:*:*)
+	CRAY_REL=`echo "$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'`
+	GUESS=t90-cray-unicos$CRAY_REL
+	;;
+    CRAY*T3E:*:*:*)
+	CRAY_REL=`echo "$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'`
+	GUESS=alphaev5-cray-unicosmk$CRAY_REL
+	;;
+    CRAY*SV1:*:*:*)
+	CRAY_REL=`echo "$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'`
+	GUESS=sv1-cray-unicos$CRAY_REL
+	;;
+    *:UNICOS/mp:*:*)
+	CRAY_REL=`echo "$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'`
+	GUESS=craynv-cray-unicosmp$CRAY_REL
+	;;
+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
+	FUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo "$UNAME_RELEASE" | sed -e 's/ /_/'`
+	GUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}
+	;;
+    5000:UNIX_System_V:4.*:*)
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo "$UNAME_RELEASE" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`
+	GUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}
+	;;
+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
+	GUESS=$UNAME_MACHINE-pc-bsdi$UNAME_RELEASE
+	;;
+    sparc*:BSD/OS:*:*)
+	GUESS=sparc-unknown-bsdi$UNAME_RELEASE
+	;;
+    *:BSD/OS:*:*)
+	GUESS=$UNAME_MACHINE-unknown-bsdi$UNAME_RELEASE
+	;;
+    arm:FreeBSD:*:*)
+	UNAME_PROCESSOR=`uname -p`
+	set_cc_for_build
+	if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \
+	    | grep -q __ARM_PCS_VFP
+	then
+	    FREEBSD_REL=`echo "$UNAME_RELEASE" | sed -e 's/[-(].*//'`
+	    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi
+	else
+	    FREEBSD_REL=`echo "$UNAME_RELEASE" | sed -e 's/[-(].*//'`
+	    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabihf
+	fi
+	;;
+    *:FreeBSD:*:*)
+	UNAME_PROCESSOR=`uname -p`
+	case $UNAME_PROCESSOR in
+	    amd64)
+		UNAME_PROCESSOR=x86_64 ;;
+	    i386)
+		UNAME_PROCESSOR=i586 ;;
+	esac
+	FREEBSD_REL=`echo "$UNAME_RELEASE" | sed -e 's/[-(].*//'`
+	GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL
+	;;
+    i*:CYGWIN*:*)
+	GUESS=$UNAME_MACHINE-pc-cygwin
+	;;
+    *:MINGW64*:*)
+	GUESS=$UNAME_MACHINE-pc-mingw64
+	;;
+    *:MINGW*:*)
+	GUESS=$UNAME_MACHINE-pc-mingw32
+	;;
+    *:MSYS*:*)
+	GUESS=$UNAME_MACHINE-pc-msys
+	;;
+    i*:PW*:*)
+	GUESS=$UNAME_MACHINE-pc-pw32
+	;;
+    *:SerenityOS:*:*)
+        GUESS=$UNAME_MACHINE-pc-serenity
+        ;;
+    *:Interix*:*)
+	case $UNAME_MACHINE in
+	    x86)
+		GUESS=i586-pc-interix$UNAME_RELEASE
+		;;
+	    authenticamd | genuineintel | EM64T)
+		GUESS=x86_64-unknown-interix$UNAME_RELEASE
+		;;
+	    IA64)
+		GUESS=ia64-unknown-interix$UNAME_RELEASE
+		;;
+	esac ;;
+    i*:UWIN*:*)
+	GUESS=$UNAME_MACHINE-pc-uwin
+	;;
+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
+	GUESS=x86_64-pc-cygwin
+	;;
+    prep*:SunOS:5.*:*)
+	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
+	GUESS=powerpcle-unknown-solaris2$SUN_REL
+	;;
+    *:GNU:*:*)
+	# the GNU system
+	GNU_ARCH=`echo "$UNAME_MACHINE" | sed -e 's,[-/].*$,,'`
+	GNU_REL=`echo "$UNAME_RELEASE" | sed -e 's,/.*$,,'`
+	GUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL
+	;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	GNU_SYS=`echo "$UNAME_SYSTEM" | sed 's,^[^/]*/,,' | tr "[:upper:]" "[:lower:]"`
+	GNU_REL=`echo "$UNAME_RELEASE" | sed -e 's/[-(].*//'`
+	GUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC
+	;;
+    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)
+	GUESS="$UNAME_MACHINE-pc-managarm-mlibc"
+	;;
+    *:[Mm]anagarm:*:*)
+	GUESS="$UNAME_MACHINE-unknown-managarm-mlibc"
+	;;
+    *:Minix:*:*)
+	GUESS=$UNAME_MACHINE-unknown-minix
+	;;
+    aarch64:Linux:*:*)
+	set_cc_for_build
+	CPU=$UNAME_MACHINE
+	LIBCABI=$LIBC
+	if test "$CC_FOR_BUILD" != no_compiler_found; then
+	    ABI=64
+	    sed 's/^	    //' << EOF > "$dummy.c"
+	    #ifdef __ARM_EABI__
+	    #ifdef __ARM_PCS_VFP
+	    ABI=eabihf
+	    #else
+	    ABI=eabi
+	    #endif
+	    #endif
+EOF
+	    cc_set_abi=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`
+	    eval "$cc_set_abi"
+	    case $ABI in
+		eabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;
+	    esac
+	fi
+	GUESS=$CPU-unknown-linux-$LIBCABI
+	;;
+    aarch64_be:Linux:*:*)
+	UNAME_MACHINE=aarch64_be
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    alpha:Linux:*:*)
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' /proc/cpuinfo 2>/dev/null` in
+	  EV5)   UNAME_MACHINE=alphaev5 ;;
+	  EV56)  UNAME_MACHINE=alphaev56 ;;
+	  PCA56) UNAME_MACHINE=alphapca56 ;;
+	  PCA57) UNAME_MACHINE=alphapca56 ;;
+	  EV6)   UNAME_MACHINE=alphaev6 ;;
+	  EV67)  UNAME_MACHINE=alphaev67 ;;
+	  EV68*) UNAME_MACHINE=alphaev68 ;;
+	esac
+	objdump --private-headers /bin/sh | grep -q ld.so.1
+	if test "$?" = 0 ; then LIBC=gnulibc1 ; fi
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    arc:Linux:*:* | arceb:Linux:*:* | arc32:Linux:*:* | arc64:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    arm*:Linux:*:*)
+	set_cc_for_build
+	if echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \
+	    | grep -q __ARM_EABI__
+	then
+	    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	else
+	    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \
+		| grep -q __ARM_PCS_VFP
+	    then
+		GUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabi
+	    else
+		GUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabihf
+	    fi
+	fi
+	;;
+    avr32*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    cris:Linux:*:*)
+	GUESS=$UNAME_MACHINE-axis-linux-$LIBC
+	;;
+    crisv32:Linux:*:*)
+	GUESS=$UNAME_MACHINE-axis-linux-$LIBC
+	;;
+    e2k:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    frv:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    hexagon:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    i*86:Linux:*:*)
+	GUESS=$UNAME_MACHINE-pc-linux-$LIBC
+	;;
+    ia64:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    k1om:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    kvx:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    kvx:cos:*:*)
+	GUESS=$UNAME_MACHINE-unknown-cos
+	;;
+    kvx:mbr:*:*)
+	GUESS=$UNAME_MACHINE-unknown-mbr
+	;;
+    loongarch32:Linux:*:* | loongarch64:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    m32r*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    m68*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    mips:Linux:*:* | mips64:Linux:*:*)
+	set_cc_for_build
+	IS_GLIBC=0
+	test x"${LIBC}" = xgnu && IS_GLIBC=1
+	sed 's/^	//' << EOF > "$dummy.c"
+	#undef CPU
+	#undef mips
+	#undef mipsel
+	#undef mips64
+	#undef mips64el
+	#if ${IS_GLIBC} && defined(_ABI64)
+	LIBCABI=gnuabi64
+	#else
+	#if ${IS_GLIBC} && defined(_ABIN32)
+	LIBCABI=gnuabin32
+	#else
+	LIBCABI=${LIBC}
+	#endif
+	#endif
+
+	#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6
+	CPU=mipsisa64r6
+	#else
+	#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6
+	CPU=mipsisa32r6
+	#else
+	#if defined(__mips64)
+	CPU=mips64
+	#else
+	CPU=mips
+	#endif
+	#endif
+	#endif
+
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	MIPS_ENDIAN=el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	MIPS_ENDIAN=
+	#else
+	MIPS_ENDIAN=
+	#endif
+	#endif
+EOF
+	cc_set_vars=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^CPU\|^MIPS_ENDIAN\|^LIBCABI'`
+	eval "$cc_set_vars"
+	test "x$CPU" != x && { echo "$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI"; exit; }
+	;;
+    mips64el:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    openrisc*:Linux:*:*)
+	GUESS=or1k-unknown-linux-$LIBC
+	;;
+    or32:Linux:*:* | or1k*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    padre:Linux:*:*)
+	GUESS=sparc-unknown-linux-$LIBC
+	;;
+    parisc64:Linux:*:* | hppa64:Linux:*:*)
+	GUESS=hppa64-unknown-linux-$LIBC
+	;;
+    parisc:Linux:*:* | hppa:Linux:*:*)
+	# Look for CPU level
+	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	  PA7*) GUESS=hppa1.1-unknown-linux-$LIBC ;;
+	  PA8*) GUESS=hppa2.0-unknown-linux-$LIBC ;;
+	  *)    GUESS=hppa-unknown-linux-$LIBC ;;
+	esac
+	;;
+    ppc64:Linux:*:*)
+	GUESS=powerpc64-unknown-linux-$LIBC
+	;;
+    ppc:Linux:*:*)
+	GUESS=powerpc-unknown-linux-$LIBC
+	;;
+    ppc64le:Linux:*:*)
+	GUESS=powerpc64le-unknown-linux-$LIBC
+	;;
+    ppcle:Linux:*:*)
+	GUESS=powerpcle-unknown-linux-$LIBC
+	;;
+    riscv32:Linux:*:* | riscv32be:Linux:*:* | riscv64:Linux:*:* | riscv64be:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    s390:Linux:*:* | s390x:Linux:*:*)
+	GUESS=$UNAME_MACHINE-ibm-linux-$LIBC
+	;;
+    sh64*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    sh*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    sparc:Linux:*:* | sparc64:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    tile*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    vax:Linux:*:*)
+	GUESS=$UNAME_MACHINE-dec-linux-$LIBC
+	;;
+    x86_64:Linux:*:*)
+	set_cc_for_build
+	CPU=$UNAME_MACHINE
+	LIBCABI=$LIBC
+	if test "$CC_FOR_BUILD" != no_compiler_found; then
+	    ABI=64
+	    sed 's/^	    //' << EOF > "$dummy.c"
+	    #ifdef __i386__
+	    ABI=x86
+	    #else
+	    #ifdef __ILP32__
+	    ABI=x32
+	    #endif
+	    #endif
+EOF
+	    cc_set_abi=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`
+	    eval "$cc_set_abi"
+	    case $ABI in
+		x86) CPU=i686 ;;
+		x32) LIBCABI=${LIBC}x32 ;;
+	    esac
+	fi
+	GUESS=$CPU-pc-linux-$LIBCABI
+	;;
+    xtensa*:Linux:*:*)
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
+	;;
+    i*86:DYNIX/ptx:4*:*)
+	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
+	# earlier versions are messed up and put the nodename in both
+	# sysname and nodename.
+	GUESS=i386-sequent-sysv4
+	;;
+    i*86:UNIX_SV:4.2MP:2.*)
+	# Unixware is an offshoot of SVR4, but it has its own version
+	# number series starting with 2...
+	# I am not positive that other SVR4 systems won't match this,
+	# I just have to hope.  -- rms.
+	# Use sysv4.2uw... so that sysv4* matches it.
+	GUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION
+	;;
+    i*86:OS/2:*:*)
+	# If we were able to find 'uname', then EMX Unix compatibility
+	# is probably installed.
+	GUESS=$UNAME_MACHINE-pc-os2-emx
+	;;
+    i*86:XTS-300:*:STOP)
+	GUESS=$UNAME_MACHINE-unknown-stop
+	;;
+    i*86:atheos:*:*)
+	GUESS=$UNAME_MACHINE-unknown-atheos
+	;;
+    i*86:syllable:*:*)
+	GUESS=$UNAME_MACHINE-pc-syllable
+	;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)
+	GUESS=i386-unknown-lynxos$UNAME_RELEASE
+	;;
+    i*86:*DOS:*:*)
+	GUESS=$UNAME_MACHINE-pc-msdosdjgpp
+	;;
+    i*86:*:4.*:*)
+	UNAME_REL=`echo "$UNAME_RELEASE" | sed 's/\/MP$//'`
+	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
+		GUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL
+	else
+		GUESS=$UNAME_MACHINE-pc-sysv$UNAME_REL
+	fi
+	;;
+    i*86:*:5:[678]*)
+	# UnixWare 7.x, OpenUNIX and OpenServer 6.
+	case `/bin/uname -X | grep "^Machine"` in
+	    *486*)	     UNAME_MACHINE=i486 ;;
+	    *Pentium)	     UNAME_MACHINE=i586 ;;
+	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
+	esac
+	GUESS=$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	;;
+    i*86:*:3.2:*)
+	if test -f /usr/options/cb.name; then
+		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
+		GUESS=$UNAME_MACHINE-pc-isc$UNAME_REL
+	elif /bin/uname -X 2>/dev/null >/dev/null ; then
+		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
+		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
+		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
+			&& UNAME_MACHINE=i586
+		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		GUESS=$UNAME_MACHINE-pc-sco$UNAME_REL
+	else
+		GUESS=$UNAME_MACHINE-pc-sysv32
+	fi
+	;;
+    pc:*:*:*)
+	# Left here for compatibility:
+	# uname -m prints for DJGPP always 'pc', but it prints nothing about
+	# the processor, so we play safe by assuming i586.
+	# Note: whatever this is, it MUST be the same as what config.sub
+	# prints for the "djgpp" host, or else GDB configure will decide that
+	# this is a cross-build.
+	GUESS=i586-pc-msdosdjgpp
+	;;
+    Intel:Mach:3*:*)
+	GUESS=i386-pc-mach3
+	;;
+    paragon:*:*:*)
+	GUESS=i860-intel-osf1
+	;;
+    i860:*:4.*:*) # i860-SVR4
+	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
+	  GUESS=i860-stardent-sysv$UNAME_RELEASE    # Stardent Vistra i860-SVR4
+	else # Add other i860-SVR4 vendors below as they are discovered.
+	  GUESS=i860-unknown-sysv$UNAME_RELEASE     # Unknown i860-SVR4
+	fi
+	;;
+    mini*:CTIX:SYS*5:*)
+	# "miniframe"
+	GUESS=m68010-convergent-sysv
+	;;
+    mc68k:UNIX:SYSTEM5:3.51m)
+	GUESS=m68k-convergent-sysv
+	;;
+    M680?0:D-NIX:5.3:*)
+	GUESS=m68k-diab-dnix
+	;;
+    M68*:*:R3V[5678]*:*)
+	test -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
+	OS_REL=''
+	test -r /etc/.relid \
+	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4.3"$OS_REL"; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	  && { echo i586-ncr-sysv4.3"$OS_REL"; exit; } ;;
+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4; exit; } ;;
+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)
+	OS_REL='.3'
+	test -r /etc/.relid \
+	    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	    && { echo i486-ncr-sysv4.3"$OS_REL"; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	    && { echo i586-ncr-sysv4.3"$OS_REL"; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \
+	    && { echo i586-ncr-sysv4.3"$OS_REL"; exit; } ;;
+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
+	GUESS=m68k-unknown-lynxos$UNAME_RELEASE
+	;;
+    mc68030:UNIX_System_V:4.*:*)
+	GUESS=m68k-atari-sysv4
+	;;
+    TSUNAMI:LynxOS:2.*:*)
+	GUESS=sparc-unknown-lynxos$UNAME_RELEASE
+	;;
+    rs6000:LynxOS:2.*:*)
+	GUESS=rs6000-unknown-lynxos$UNAME_RELEASE
+	;;
+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)
+	GUESS=powerpc-unknown-lynxos$UNAME_RELEASE
+	;;
+    SM[BE]S:UNIX_SV:*:*)
+	GUESS=mips-dde-sysv$UNAME_RELEASE
+	;;
+    RM*:ReliantUNIX-*:*:*)
+	GUESS=mips-sni-sysv4
+	;;
+    RM*:SINIX-*:*:*)
+	GUESS=mips-sni-sysv4
+	;;
+    *:SINIX-*:*:*)
+	if uname -p 2>/dev/null >/dev/null ; then
+		UNAME_MACHINE=`(uname -p) 2>/dev/null`
+		GUESS=$UNAME_MACHINE-sni-sysv4
+	else
+		GUESS=ns32k-sni-sysv
+	fi
+	;;
+    PENTIUM:*:4.0*:*)	# Unisys 'ClearPath HMP IX 4000' SVR4/MP effort
+			# says <Richard.M.Bartel@ccMail.Census.GOV>
+	GUESS=i586-unisys-sysv4
+	;;
+    *:UNIX_System_V:4*:FTX*)
+	# From Gerald Hewes <hewes@openmarket.com>.
+	# How about differentiating between stratus architectures? -djm
+	GUESS=hppa1.1-stratus-sysv4
+	;;
+    *:*:*:FTX*)
+	# From seanf@swdc.stratus.com.
+	GUESS=i860-stratus-sysv4
+	;;
+    i*86:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	GUESS=$UNAME_MACHINE-stratus-vos
+	;;
+    *:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	GUESS=hppa1.1-stratus-vos
+	;;
+    mc68*:A/UX:*:*)
+	GUESS=m68k-apple-aux$UNAME_RELEASE
+	;;
+    news*:NEWS-OS:6*:*)
+	GUESS=mips-sony-newsos6
+	;;
+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
+	if test -d /usr/nec; then
+		GUESS=mips-nec-sysv$UNAME_RELEASE
+	else
+		GUESS=mips-unknown-sysv$UNAME_RELEASE
+	fi
+	;;
+    BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
+	GUESS=powerpc-be-beos
+	;;
+    BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
+	GUESS=powerpc-apple-beos
+	;;
+    BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
+	GUESS=i586-pc-beos
+	;;
+    BePC:Haiku:*:*)	# Haiku running on Intel PC compatible.
+	GUESS=i586-pc-haiku
+	;;
+    ppc:Haiku:*:*)	# Haiku running on Apple PowerPC
+	GUESS=powerpc-apple-haiku
+	;;
+    *:Haiku:*:*)	# Haiku modern gcc (not bound by BeOS compat)
+	GUESS=$UNAME_MACHINE-unknown-haiku
+	;;
+    SX-4:SUPER-UX:*:*)
+	GUESS=sx4-nec-superux$UNAME_RELEASE
+	;;
+    SX-5:SUPER-UX:*:*)
+	GUESS=sx5-nec-superux$UNAME_RELEASE
+	;;
+    SX-6:SUPER-UX:*:*)
+	GUESS=sx6-nec-superux$UNAME_RELEASE
+	;;
+    SX-7:SUPER-UX:*:*)
+	GUESS=sx7-nec-superux$UNAME_RELEASE
+	;;
+    SX-8:SUPER-UX:*:*)
+	GUESS=sx8-nec-superux$UNAME_RELEASE
+	;;
+    SX-8R:SUPER-UX:*:*)
+	GUESS=sx8r-nec-superux$UNAME_RELEASE
+	;;
+    SX-ACE:SUPER-UX:*:*)
+	GUESS=sxace-nec-superux$UNAME_RELEASE
+	;;
+    Power*:Rhapsody:*:*)
+	GUESS=powerpc-apple-rhapsody$UNAME_RELEASE
+	;;
+    *:Rhapsody:*:*)
+	GUESS=$UNAME_MACHINE-apple-rhapsody$UNAME_RELEASE
+	;;
+    arm64:Darwin:*:*)
+	GUESS=aarch64-apple-darwin$UNAME_RELEASE
+	;;
+    *:Darwin:*:*)
+	UNAME_PROCESSOR=`uname -p`
+	case $UNAME_PROCESSOR in
+	    unknown) UNAME_PROCESSOR=powerpc ;;
+	esac
+	if command -v xcode-select > /dev/null 2> /dev/null && \
+		! xcode-select --print-path > /dev/null 2> /dev/null ; then
+	    # Avoid executing cc if there is no toolchain installed as
+	    # cc will be a stub that puts up a graphical alert
+	    # prompting the user to install developer tools.
+	    CC_FOR_BUILD=no_compiler_found
+	else
+	    set_cc_for_build
+	fi
+	if test "$CC_FOR_BUILD" != no_compiler_found; then
+	    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
+		   (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		   grep IS_64BIT_ARCH >/dev/null
+	    then
+		case $UNAME_PROCESSOR in
+		    i386) UNAME_PROCESSOR=x86_64 ;;
+		    powerpc) UNAME_PROCESSOR=powerpc64 ;;
+		esac
+	    fi
+	    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc
+	    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \
+		   (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		   grep IS_PPC >/dev/null
+	    then
+		UNAME_PROCESSOR=powerpc
+	    fi
+	elif test "$UNAME_PROCESSOR" = i386 ; then
+	    # uname -m returns i386 or x86_64
+	    UNAME_PROCESSOR=$UNAME_MACHINE
+	fi
+	GUESS=$UNAME_PROCESSOR-apple-darwin$UNAME_RELEASE
+	;;
+    *:procnto*:*:* | *:QNX:[0123456789]*:*)
+	UNAME_PROCESSOR=`uname -p`
+	if test "$UNAME_PROCESSOR" = x86; then
+		UNAME_PROCESSOR=i386
+		UNAME_MACHINE=pc
+	fi
+	GUESS=$UNAME_PROCESSOR-$UNAME_MACHINE-nto-qnx$UNAME_RELEASE
+	;;
+    *:QNX:*:4*)
+	GUESS=i386-pc-qnx
+	;;
+    NEO-*:NONSTOP_KERNEL:*:*)
+	GUESS=neo-tandem-nsk$UNAME_RELEASE
+	;;
+    NSE-*:NONSTOP_KERNEL:*:*)
+	GUESS=nse-tandem-nsk$UNAME_RELEASE
+	;;
+    NSR-*:NONSTOP_KERNEL:*:*)
+	GUESS=nsr-tandem-nsk$UNAME_RELEASE
+	;;
+    NSV-*:NONSTOP_KERNEL:*:*)
+	GUESS=nsv-tandem-nsk$UNAME_RELEASE
+	;;
+    NSX-*:NONSTOP_KERNEL:*:*)
+	GUESS=nsx-tandem-nsk$UNAME_RELEASE
+	;;
+    *:NonStop-UX:*:*)
+	GUESS=mips-compaq-nonstopux
+	;;
+    BS2000:POSIX*:*:*)
+	GUESS=bs2000-siemens-sysv
+	;;
+    DS/*:UNIX_System_V:*:*)
+	GUESS=$UNAME_MACHINE-$UNAME_SYSTEM-$UNAME_RELEASE
+	;;
+    *:Plan9:*:*)
+	# "uname -m" is not consistent, so use $cputype instead. 386
+	# is converted to i386 for consistency with other x86
+	# operating systems.
+	if test "${cputype-}" = 386; then
+	    UNAME_MACHINE=i386
+	elif test "x${cputype-}" != x; then
+	    UNAME_MACHINE=$cputype
+	fi
+	GUESS=$UNAME_MACHINE-unknown-plan9
+	;;
+    *:TOPS-10:*:*)
+	GUESS=pdp10-unknown-tops10
+	;;
+    *:TENEX:*:*)
+	GUESS=pdp10-unknown-tenex
+	;;
+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
+	GUESS=pdp10-dec-tops20
+	;;
+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
+	GUESS=pdp10-xkl-tops20
+	;;
+    *:TOPS-20:*:*)
+	GUESS=pdp10-unknown-tops20
+	;;
+    *:ITS:*:*)
+	GUESS=pdp10-unknown-its
+	;;
+    SEI:*:*:SEIUX)
+	GUESS=mips-sei-seiux$UNAME_RELEASE
+	;;
+    *:DragonFly:*:*)
+	DRAGONFLY_REL=`echo "$UNAME_RELEASE" | sed -e 's/[-(].*//'`
+	GUESS=$UNAME_MACHINE-unknown-dragonfly$DRAGONFLY_REL
+	;;
+    *:*VMS:*:*)
+	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	case $UNAME_MACHINE in
+	    A*) GUESS=alpha-dec-vms ;;
+	    I*) GUESS=ia64-dec-vms ;;
+	    V*) GUESS=vax-dec-vms ;;
+	esac ;;
+    *:XENIX:*:SysV)
+	GUESS=i386-pc-xenix
+	;;
+    i*86:skyos:*:*)
+	SKYOS_REL=`echo "$UNAME_RELEASE" | sed -e 's/ .*$//'`
+	GUESS=$UNAME_MACHINE-pc-skyos$SKYOS_REL
+	;;
+    i*86:rdos:*:*)
+	GUESS=$UNAME_MACHINE-pc-rdos
+	;;
+    i*86:Fiwix:*:*)
+	GUESS=$UNAME_MACHINE-pc-fiwix
+	;;
+    *:AROS:*:*)
+	GUESS=$UNAME_MACHINE-unknown-aros
+	;;
+    x86_64:VMkernel:*:*)
+	GUESS=$UNAME_MACHINE-unknown-esx
+	;;
+    amd64:Isilon\ OneFS:*:*)
+	GUESS=x86_64-unknown-onefs
+	;;
+    *:Unleashed:*:*)
+	GUESS=$UNAME_MACHINE-unknown-unleashed$UNAME_RELEASE
+	;;
+esac
+
+# Do we have a guess based on uname results?
+if test "x$GUESS" != x; then
+    echo "$GUESS"
+    exit
+fi
+
+# No uname command or uname output not recognized.
+set_cc_for_build
+cat > "$dummy.c" <<EOF
+#ifdef _SEQUENT_
+#include <sys/types.h>
+#include <sys/utsname.h>
+#endif
+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)
+#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)
+#include <signal.h>
+#if defined(_SIZE_T_) || defined(SIGLOST)
+#include <sys/utsname.h>
+#endif
+#endif
+#endif
+main ()
+{
+#if defined (sony)
+#if defined (MIPSEB)
+  /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
+     I don't know....  */
+  printf ("mips-sony-bsd\n"); exit (0);
+#else
+#include <sys/param.h>
+  printf ("m68k-sony-newsos%s\n",
+#ifdef NEWSOS4
+  "4"
+#else
+  ""
+#endif
+  ); exit (0);
+#endif
+#endif
+
+#if defined (NeXT)
+#if !defined (__ARCHITECTURE__)
+#define __ARCHITECTURE__ "m68k"
+#endif
+  int version;
+  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
+  if (version < 4)
+    printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
+  else
+    printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
+  exit (0);
+#endif
+
+#if defined (MULTIMAX) || defined (n16)
+#if defined (UMAXV)
+  printf ("ns32k-encore-sysv\n"); exit (0);
+#else
+#if defined (CMU)
+  printf ("ns32k-encore-mach\n"); exit (0);
+#else
+  printf ("ns32k-encore-bsd\n"); exit (0);
+#endif
+#endif
+#endif
+
+#if defined (__386BSD__)
+  printf ("i386-pc-bsd\n"); exit (0);
+#endif
+
+#if defined (sequent)
+#if defined (i386)
+  printf ("i386-sequent-dynix\n"); exit (0);
+#endif
+#if defined (ns32000)
+  printf ("ns32k-sequent-dynix\n"); exit (0);
+#endif
+#endif
+
+#if defined (_SEQUENT_)
+  struct utsname un;
+
+  uname(&un);
+  if (strncmp(un.version, "V2", 2) == 0) {
+    printf ("i386-sequent-ptx2\n"); exit (0);
+  }
+  if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
+    printf ("i386-sequent-ptx1\n"); exit (0);
+  }
+  printf ("i386-sequent-ptx\n"); exit (0);
+#endif
+
+#if defined (vax)
+#if !defined (ultrix)
+#include <sys/param.h>
+#if defined (BSD)
+#if BSD == 43
+  printf ("vax-dec-bsd4.3\n"); exit (0);
+#else
+#if BSD == 199006
+  printf ("vax-dec-bsd4.3reno\n"); exit (0);
+#else
+  printf ("vax-dec-bsd\n"); exit (0);
+#endif
+#endif
+#else
+  printf ("vax-dec-bsd\n"); exit (0);
+#endif
+#else
+#if defined(_SIZE_T_) || defined(SIGLOST)
+  struct utsname un;
+  uname (&un);
+  printf ("vax-dec-ultrix%s\n", un.release); exit (0);
+#else
+  printf ("vax-dec-ultrix\n"); exit (0);
+#endif
+#endif
+#endif
+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)
+#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)
+#if defined(_SIZE_T_) || defined(SIGLOST)
+  struct utsname *un;
+  uname (&un);
+  printf ("mips-dec-ultrix%s\n", un.release); exit (0);
+#else
+  printf ("mips-dec-ultrix\n"); exit (0);
+#endif
+#endif
+#endif
+
+#if defined (alliant) && defined (i860)
+  printf ("i860-alliant-bsd\n"); exit (0);
+#endif
+
+  exit (1);
+}
+EOF
+
+$CC_FOR_BUILD -o "$dummy" "$dummy.c" 2>/dev/null && SYSTEM_NAME=`"$dummy"` &&
+	{ echo "$SYSTEM_NAME"; exit; }
+
+# Apollos put the system type in the environment.
+test -d /usr/apollo && { echo "$ISP-apollo-$SYSTYPE"; exit; }
+
+echo "$0: unable to guess system type" >&2
+
+case $UNAME_MACHINE:$UNAME_SYSTEM in
+    mips:Linux | mips64:Linux)
+	# If we got here on MIPS GNU/Linux, output extra information.
+	cat >&2 <<EOF
+
+NOTE: MIPS GNU/Linux systems require a C compiler to fully recognize
+the system type. Please install a C compiler and try again.
+EOF
+	;;
+esac
+
+cat >&2 <<EOF
+
+This script (version $timestamp), has failed to recognize the
+operating system you are using. If your script is old, overwrite *all*
+copies of config.guess and config.sub with the latest versions from:
+
+  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess
+and
+  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub
+EOF
+
+our_year=`echo $timestamp | sed 's,-.*,,'`
+thisyear=`date +%Y`
+# shellcheck disable=SC2003
+script_age=`expr "$thisyear" - "$our_year"`
+if test "$script_age" -lt 3 ; then
+   cat >&2 <<EOF
+
+If $0 has already been updated, send the following data and any
+information you think might be pertinent to config-patches@gnu.org to
+provide the necessary information to handle your system.
+
+config.guess timestamp = $timestamp
+
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
+
+hostinfo               = `(hostinfo) 2>/dev/null`
+/bin/universe          = `(/bin/universe) 2>/dev/null`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
+/bin/arch              = `(/bin/arch) 2>/dev/null`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+
+UNAME_MACHINE = "$UNAME_MACHINE"
+UNAME_RELEASE = "$UNAME_RELEASE"
+UNAME_SYSTEM  = "$UNAME_SYSTEM"
+UNAME_VERSION = "$UNAME_VERSION"
+EOF
+fi
+
+exit 1
+
+# Local variables:
+# eval: (add-hook 'before-save-hook 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff --git a/contrib/depends/config.sub b/contrib/depends/config.sub
new file mode 100644
index 00000000..defe52c0
--- /dev/null
+++ b/contrib/depends/config.sub
@@ -0,0 +1,1960 @@
+#! /bin/sh
+# Configuration validation subroutine script.
+#   Copyright 1992-2023 Free Software Foundation, Inc.
+
+# shellcheck disable=SC2006,SC2268 # see below for rationale
+
+timestamp='2023-09-19'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, see <https://www.gnu.org/licenses/>.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that
+# program.  This Exception is an additional permission under section 7
+# of the GNU General Public License, version 3 ("GPLv3").
+
+
+# Please send patches to <config-patches@gnu.org>.
+#
+# Configuration subroutine to validate and canonicalize a configuration type.
+# Supply the specified configuration type as an argument.
+# If it is invalid, we print an error message on stderr and exit with code 1.
+# Otherwise, we print the canonical config type on stdout and succeed.
+
+# You can get the latest version of this script from:
+# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub
+
+# This file is supposed to be the same for all GNU packages
+# and recognize all the CPU types, system types and aliases
+# that are meaningful with *any* GNU software.
+# Each package is responsible for reporting which valid configurations
+# it does not support.  The user should be able to distinguish
+# a failure to support a valid configuration from a meaningless
+# configuration.
+
+# The goal of this file is to map all the various variations of a given
+# machine specification into a single specification in the form:
+#	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
+# or in some cases, the newer four-part form:
+#	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
+# It is wrong to echo any other type of specification.
+
+# The "shellcheck disable" line above the timestamp inhibits complaints
+# about features and limitations of the classic Bourne shell that were
+# superseded or lifted in POSIX.  However, this script identifies a wide
+# variety of pre-POSIX systems that do not have POSIX shells at all, and
+# even some reasonably current systems (Solaris 10 as case-in-point) still
+# have a pre-POSIX /bin/sh.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS
+
+Canonicalize a configuration name.
+
+Options:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright 1992-2023 Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try '$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo "$1"
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
+esac
+
+# Split fields of configuration type
+# shellcheck disable=SC2162
+saved_IFS=$IFS
+IFS="-" read field1 field2 field3 field4 <<EOF
+$1
+EOF
+IFS=$saved_IFS
+
+# Separate into logical components for further validation
+case $1 in
+	*-*-*-*-*)
+		echo "Invalid configuration '$1': more than four components" >&2
+		exit 1
+		;;
+	*-*-*-*)
+		basic_machine=$field1-$field2
+		basic_os=$field3-$field4
+		;;
+	*-*-*)
+		# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two
+		# parts
+		maybe_os=$field2-$field3
+		case $maybe_os in
+			nto-qnx* | linux-* | uclinux-uclibc* \
+			| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \
+			| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \
+			| storm-chaos* | os2-emx* | rtmk-nova* | managarm-* \
+			| windows-* )
+				basic_machine=$field1
+				basic_os=$maybe_os
+				;;
+			android-linux)
+				basic_machine=$field1-unknown
+				basic_os=linux-android
+				;;
+			*)
+				basic_machine=$field1-$field2
+				basic_os=$field3
+				;;
+		esac
+		;;
+	*-*)
+		# A lone config we happen to match not fitting any pattern
+		case $field1-$field2 in
+			decstation-3100)
+				basic_machine=mips-dec
+				basic_os=
+				;;
+			*-*)
+				# Second component is usually, but not always the OS
+				case $field2 in
+					# Prevent following clause from handling this valid os
+					sun*os*)
+						basic_machine=$field1
+						basic_os=$field2
+						;;
+					zephyr*)
+						basic_machine=$field1-unknown
+						basic_os=$field2
+						;;
+					# Manufacturers
+					dec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \
+					| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \
+					| unicom* | ibm* | next | hp | isi* | apollo | altos* \
+					| convergent* | ncr* | news | 32* | 3600* | 3100* \
+					| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \
+					| ultra | tti* | harris | dolphin | highlevel | gould \
+					| cbm | ns | masscomp | apple | axis | knuth | cray \
+					| microblaze* | sim | cisco \
+					| oki | wec | wrs | winbond)
+						basic_machine=$field1-$field2
+						basic_os=
+						;;
+					*)
+						basic_machine=$field1
+						basic_os=$field2
+						;;
+				esac
+			;;
+		esac
+		;;
+	*)
+		# Convert single-component short-hands not valid as part of
+		# multi-component configurations.
+		case $field1 in
+			386bsd)
+				basic_machine=i386-pc
+				basic_os=bsd
+				;;
+			a29khif)
+				basic_machine=a29k-amd
+				basic_os=udi
+				;;
+			adobe68k)
+				basic_machine=m68010-adobe
+				basic_os=scout
+				;;
+			alliant)
+				basic_machine=fx80-alliant
+				basic_os=
+				;;
+			altos | altos3068)
+				basic_machine=m68k-altos
+				basic_os=
+				;;
+			am29k)
+				basic_machine=a29k-none
+				basic_os=bsd
+				;;
+			amdahl)
+				basic_machine=580-amdahl
+				basic_os=sysv
+				;;
+			amiga)
+				basic_machine=m68k-unknown
+				basic_os=
+				;;
+			amigaos | amigados)
+				basic_machine=m68k-unknown
+				basic_os=amigaos
+				;;
+			amigaunix | amix)
+				basic_machine=m68k-unknown
+				basic_os=sysv4
+				;;
+			apollo68)
+				basic_machine=m68k-apollo
+				basic_os=sysv
+				;;
+			apollo68bsd)
+				basic_machine=m68k-apollo
+				basic_os=bsd
+				;;
+			aros)
+				basic_machine=i386-pc
+				basic_os=aros
+				;;
+			aux)
+				basic_machine=m68k-apple
+				basic_os=aux
+				;;
+			balance)
+				basic_machine=ns32k-sequent
+				basic_os=dynix
+				;;
+			blackfin)
+				basic_machine=bfin-unknown
+				basic_os=linux
+				;;
+			cegcc)
+				basic_machine=arm-unknown
+				basic_os=cegcc
+				;;
+			convex-c1)
+				basic_machine=c1-convex
+				basic_os=bsd
+				;;
+			convex-c2)
+				basic_machine=c2-convex
+				basic_os=bsd
+				;;
+			convex-c32)
+				basic_machine=c32-convex
+				basic_os=bsd
+				;;
+			convex-c34)
+				basic_machine=c34-convex
+				basic_os=bsd
+				;;
+			convex-c38)
+				basic_machine=c38-convex
+				basic_os=bsd
+				;;
+			cray)
+				basic_machine=j90-cray
+				basic_os=unicos
+				;;
+			crds | unos)
+				basic_machine=m68k-crds
+				basic_os=
+				;;
+			da30)
+				basic_machine=m68k-da30
+				basic_os=
+				;;
+			decstation | pmax | pmin | dec3100 | decstatn)
+				basic_machine=mips-dec
+				basic_os=
+				;;
+			delta88)
+				basic_machine=m88k-motorola
+				basic_os=sysv3
+				;;
+			dicos)
+				basic_machine=i686-pc
+				basic_os=dicos
+				;;
+			djgpp)
+				basic_machine=i586-pc
+				basic_os=msdosdjgpp
+				;;
+			ebmon29k)
+				basic_machine=a29k-amd
+				basic_os=ebmon
+				;;
+			es1800 | OSE68k | ose68k | ose | OSE)
+				basic_machine=m68k-ericsson
+				basic_os=ose
+				;;
+			gmicro)
+				basic_machine=tron-gmicro
+				basic_os=sysv
+				;;
+			go32)
+				basic_machine=i386-pc
+				basic_os=go32
+				;;
+			h8300hms)
+				basic_machine=h8300-hitachi
+				basic_os=hms
+				;;
+			h8300xray)
+				basic_machine=h8300-hitachi
+				basic_os=xray
+				;;
+			h8500hms)
+				basic_machine=h8500-hitachi
+				basic_os=hms
+				;;
+			harris)
+				basic_machine=m88k-harris
+				basic_os=sysv3
+				;;
+			hp300 | hp300hpux)
+				basic_machine=m68k-hp
+				basic_os=hpux
+				;;
+			hp300bsd)
+				basic_machine=m68k-hp
+				basic_os=bsd
+				;;
+			hppaosf)
+				basic_machine=hppa1.1-hp
+				basic_os=osf
+				;;
+			hppro)
+				basic_machine=hppa1.1-hp
+				basic_os=proelf
+				;;
+			i386mach)
+				basic_machine=i386-mach
+				basic_os=mach
+				;;
+			isi68 | isi)
+				basic_machine=m68k-isi
+				basic_os=sysv
+				;;
+			m68knommu)
+				basic_machine=m68k-unknown
+				basic_os=linux
+				;;
+			magnum | m3230)
+				basic_machine=mips-mips
+				basic_os=sysv
+				;;
+			merlin)
+				basic_machine=ns32k-utek
+				basic_os=sysv
+				;;
+			mingw64)
+				basic_machine=x86_64-pc
+				basic_os=mingw64
+				;;
+			mingw32)
+				basic_machine=i686-pc
+				basic_os=mingw32
+				;;
+			mingw32ce)
+				basic_machine=arm-unknown
+				basic_os=mingw32ce
+				;;
+			monitor)
+				basic_machine=m68k-rom68k
+				basic_os=coff
+				;;
+			morphos)
+				basic_machine=powerpc-unknown
+				basic_os=morphos
+				;;
+			moxiebox)
+				basic_machine=moxie-unknown
+				basic_os=moxiebox
+				;;
+			msdos)
+				basic_machine=i386-pc
+				basic_os=msdos
+				;;
+			msys)
+				basic_machine=i686-pc
+				basic_os=msys
+				;;
+			mvs)
+				basic_machine=i370-ibm
+				basic_os=mvs
+				;;
+			nacl)
+				basic_machine=le32-unknown
+				basic_os=nacl
+				;;
+			ncr3000)
+				basic_machine=i486-ncr
+				basic_os=sysv4
+				;;
+			netbsd386)
+				basic_machine=i386-pc
+				basic_os=netbsd
+				;;
+			netwinder)
+				basic_machine=armv4l-rebel
+				basic_os=linux
+				;;
+			news | news700 | news800 | news900)
+				basic_machine=m68k-sony
+				basic_os=newsos
+				;;
+			news1000)
+				basic_machine=m68030-sony
+				basic_os=newsos
+				;;
+			necv70)
+				basic_machine=v70-nec
+				basic_os=sysv
+				;;
+			nh3000)
+				basic_machine=m68k-harris
+				basic_os=cxux
+				;;
+			nh[45]000)
+				basic_machine=m88k-harris
+				basic_os=cxux
+				;;
+			nindy960)
+				basic_machine=i960-intel
+				basic_os=nindy
+				;;
+			mon960)
+				basic_machine=i960-intel
+				basic_os=mon960
+				;;
+			nonstopux)
+				basic_machine=mips-compaq
+				basic_os=nonstopux
+				;;
+			os400)
+				basic_machine=powerpc-ibm
+				basic_os=os400
+				;;
+			OSE68000 | ose68000)
+				basic_machine=m68000-ericsson
+				basic_os=ose
+				;;
+			os68k)
+				basic_machine=m68k-none
+				basic_os=os68k
+				;;
+			paragon)
+				basic_machine=i860-intel
+				basic_os=osf
+				;;
+			parisc)
+				basic_machine=hppa-unknown
+				basic_os=linux
+				;;
+			psp)
+				basic_machine=mipsallegrexel-sony
+				basic_os=psp
+				;;
+			pw32)
+				basic_machine=i586-unknown
+				basic_os=pw32
+				;;
+			rdos | rdos64)
+				basic_machine=x86_64-pc
+				basic_os=rdos
+				;;
+			rdos32)
+				basic_machine=i386-pc
+				basic_os=rdos
+				;;
+			rom68k)
+				basic_machine=m68k-rom68k
+				basic_os=coff
+				;;
+			sa29200)
+				basic_machine=a29k-amd
+				basic_os=udi
+				;;
+			sei)
+				basic_machine=mips-sei
+				basic_os=seiux
+				;;
+			sequent)
+				basic_machine=i386-sequent
+				basic_os=
+				;;
+			sps7)
+				basic_machine=m68k-bull
+				basic_os=sysv2
+				;;
+			st2000)
+				basic_machine=m68k-tandem
+				basic_os=
+				;;
+			stratus)
+				basic_machine=i860-stratus
+				basic_os=sysv4
+				;;
+			sun2)
+				basic_machine=m68000-sun
+				basic_os=
+				;;
+			sun2os3)
+				basic_machine=m68000-sun
+				basic_os=sunos3
+				;;
+			sun2os4)
+				basic_machine=m68000-sun
+				basic_os=sunos4
+				;;
+			sun3)
+				basic_machine=m68k-sun
+				basic_os=
+				;;
+			sun3os3)
+				basic_machine=m68k-sun
+				basic_os=sunos3
+				;;
+			sun3os4)
+				basic_machine=m68k-sun
+				basic_os=sunos4
+				;;
+			sun4)
+				basic_machine=sparc-sun
+				basic_os=
+				;;
+			sun4os3)
+				basic_machine=sparc-sun
+				basic_os=sunos3
+				;;
+			sun4os4)
+				basic_machine=sparc-sun
+				basic_os=sunos4
+				;;
+			sun4sol2)
+				basic_machine=sparc-sun
+				basic_os=solaris2
+				;;
+			sun386 | sun386i | roadrunner)
+				basic_machine=i386-sun
+				basic_os=
+				;;
+			sv1)
+				basic_machine=sv1-cray
+				basic_os=unicos
+				;;
+			symmetry)
+				basic_machine=i386-sequent
+				basic_os=dynix
+				;;
+			t3e)
+				basic_machine=alphaev5-cray
+				basic_os=unicos
+				;;
+			t90)
+				basic_machine=t90-cray
+				basic_os=unicos
+				;;
+			toad1)
+				basic_machine=pdp10-xkl
+				basic_os=tops20
+				;;
+			tpf)
+				basic_machine=s390x-ibm
+				basic_os=tpf
+				;;
+			udi29k)
+				basic_machine=a29k-amd
+				basic_os=udi
+				;;
+			ultra3)
+				basic_machine=a29k-nyu
+				basic_os=sym1
+				;;
+			v810 | necv810)
+				basic_machine=v810-nec
+				basic_os=none
+				;;
+			vaxv)
+				basic_machine=vax-dec
+				basic_os=sysv
+				;;
+			vms)
+				basic_machine=vax-dec
+				basic_os=vms
+				;;
+			vsta)
+				basic_machine=i386-pc
+				basic_os=vsta
+				;;
+			vxworks960)
+				basic_machine=i960-wrs
+				basic_os=vxworks
+				;;
+			vxworks68)
+				basic_machine=m68k-wrs
+				basic_os=vxworks
+				;;
+			vxworks29k)
+				basic_machine=a29k-wrs
+				basic_os=vxworks
+				;;
+			xbox)
+				basic_machine=i686-pc
+				basic_os=mingw32
+				;;
+			ymp)
+				basic_machine=ymp-cray
+				basic_os=unicos
+				;;
+			*)
+				basic_machine=$1
+				basic_os=
+				;;
+		esac
+		;;
+esac
+
+# Decode 1-component or ad-hoc basic machines
+case $basic_machine in
+	# Here we handle the default manufacturer of certain CPU types.  It is in
+	# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		cpu=hppa1.1
+		vendor=winbond
+		;;
+	op50n)
+		cpu=hppa1.1
+		vendor=oki
+		;;
+	op60c)
+		cpu=hppa1.1
+		vendor=oki
+		;;
+	ibm*)
+		cpu=i370
+		vendor=ibm
+		;;
+	orion105)
+		cpu=clipper
+		vendor=highlevel
+		;;
+	mac | mpw | mac-mpw)
+		cpu=m68k
+		vendor=apple
+		;;
+	pmac | pmac-mpw)
+		cpu=powerpc
+		vendor=apple
+		;;
+
+	# Recognize the various machine names and aliases which stand
+	# for a CPU type and a company and sometimes even an OS.
+	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
+		cpu=m68000
+		vendor=att
+		;;
+	3b*)
+		cpu=we32k
+		vendor=att
+		;;
+	bluegene*)
+		cpu=powerpc
+		vendor=ibm
+		basic_os=cnk
+		;;
+	decsystem10* | dec10*)
+		cpu=pdp10
+		vendor=dec
+		basic_os=tops10
+		;;
+	decsystem20* | dec20*)
+		cpu=pdp10
+		vendor=dec
+		basic_os=tops20
+		;;
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
+		cpu=m68k
+		vendor=motorola
+		;;
+	dpx2*)
+		cpu=m68k
+		vendor=bull
+		basic_os=sysv3
+		;;
+	encore | umax | mmax)
+		cpu=ns32k
+		vendor=encore
+		;;
+	elxsi)
+		cpu=elxsi
+		vendor=elxsi
+		basic_os=${basic_os:-bsd}
+		;;
+	fx2800)
+		cpu=i860
+		vendor=alliant
+		;;
+	genix)
+		cpu=ns32k
+		vendor=ns
+		;;
+	h3050r* | hiux*)
+		cpu=hppa1.1
+		vendor=hitachi
+		basic_os=hiuxwe2
+		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		cpu=hppa1.0
+		vendor=hp
+		;;
+	hp9k2[0-9][0-9] | hp9k31[0-9])
+		cpu=m68000
+		vendor=hp
+		;;
+	hp9k3[2-9][0-9])
+		cpu=m68k
+		vendor=hp
+		;;
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		cpu=hppa1.0
+		vendor=hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		cpu=hppa1.1
+		vendor=hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		cpu=hppa1.1
+		vendor=hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		cpu=hppa1.1
+		vendor=hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
+		cpu=hppa1.1
+		vendor=hp
+		;;
+	hp9k8[0-9][0-9] | hp8[0-9][0-9])
+		cpu=hppa1.0
+		vendor=hp
+		;;
+	i*86v32)
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		basic_os=sysv32
+		;;
+	i*86v4*)
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		basic_os=sysv4
+		;;
+	i*86v)
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		basic_os=sysv
+		;;
+	i*86sol2)
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		basic_os=solaris2
+		;;
+	j90 | j90-cray)
+		cpu=j90
+		vendor=cray
+		basic_os=${basic_os:-unicos}
+		;;
+	iris | iris4d)
+		cpu=mips
+		vendor=sgi
+		case $basic_os in
+		    irix*)
+			;;
+		    *)
+			basic_os=irix4
+			;;
+		esac
+		;;
+	miniframe)
+		cpu=m68000
+		vendor=convergent
+		;;
+	*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		cpu=m68k
+		vendor=atari
+		basic_os=mint
+		;;
+	news-3600 | risc-news)
+		cpu=mips
+		vendor=sony
+		basic_os=newsos
+		;;
+	next | m*-next)
+		cpu=m68k
+		vendor=next
+		case $basic_os in
+		    openstep*)
+		        ;;
+		    nextstep*)
+			;;
+		    ns2*)
+		      basic_os=nextstep2
+			;;
+		    *)
+		      basic_os=nextstep3
+			;;
+		esac
+		;;
+	np1)
+		cpu=np1
+		vendor=gould
+		;;
+	op50n-* | op60c-*)
+		cpu=hppa1.1
+		vendor=oki
+		basic_os=proelf
+		;;
+	pa-hitachi)
+		cpu=hppa1.1
+		vendor=hitachi
+		basic_os=hiuxwe2
+		;;
+	pbd)
+		cpu=sparc
+		vendor=tti
+		;;
+	pbb)
+		cpu=m68k
+		vendor=tti
+		;;
+	pc532)
+		cpu=ns32k
+		vendor=pc532
+		;;
+	pn)
+		cpu=pn
+		vendor=gould
+		;;
+	power)
+		cpu=power
+		vendor=ibm
+		;;
+	ps2)
+		cpu=i386
+		vendor=ibm
+		;;
+	rm[46]00)
+		cpu=mips
+		vendor=siemens
+		;;
+	rtpc | rtpc-*)
+		cpu=romp
+		vendor=ibm
+		;;
+	sde)
+		cpu=mipsisa32
+		vendor=sde
+		basic_os=${basic_os:-elf}
+		;;
+	simso-wrs)
+		cpu=sparclite
+		vendor=wrs
+		basic_os=vxworks
+		;;
+	tower | tower-32)
+		cpu=m68k
+		vendor=ncr
+		;;
+	vpp*|vx|vx-*)
+		cpu=f301
+		vendor=fujitsu
+		;;
+	w65)
+		cpu=w65
+		vendor=wdc
+		;;
+	w89k-*)
+		cpu=hppa1.1
+		vendor=winbond
+		basic_os=proelf
+		;;
+	none)
+		cpu=none
+		vendor=none
+		;;
+	leon|leon[3-9])
+		cpu=sparc
+		vendor=$basic_machine
+		;;
+	leon-*|leon[3-9]-*)
+		cpu=sparc
+		vendor=`echo "$basic_machine" | sed 's/-.*//'`
+		;;
+
+	*-*)
+		# shellcheck disable=SC2162
+		saved_IFS=$IFS
+		IFS="-" read cpu vendor <<EOF
+$basic_machine
+EOF
+		IFS=$saved_IFS
+		;;
+	# We use 'pc' rather than 'unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+		cpu=$basic_machine
+		vendor=pc
+		;;
+	# These rules are duplicated from below for sake of the special case above;
+	# i.e. things that normalized to x86 arches should also default to "pc"
+	pc98)
+		cpu=i386
+		vendor=pc
+		;;
+	x64 | amd64)
+		cpu=x86_64
+		vendor=pc
+		;;
+	# Recognize the basic CPU types without company name.
+	*)
+		cpu=$basic_machine
+		vendor=unknown
+		;;
+esac
+
+unset -v basic_machine
+
+# Decode basic machines in the full and proper CPU-Company form.
+case $cpu-$vendor in
+	# Here we handle the default manufacturer of certain CPU types in canonical form. It is in
+	# some cases the only manufacturer, in others, it is the most popular.
+	craynv-unknown)
+		vendor=cray
+		basic_os=${basic_os:-unicosmp}
+		;;
+	c90-unknown | c90-cray)
+		vendor=cray
+		basic_os=${Basic_os:-unicos}
+		;;
+	fx80-unknown)
+		vendor=alliant
+		;;
+	romp-unknown)
+		vendor=ibm
+		;;
+	mmix-unknown)
+		vendor=knuth
+		;;
+	microblaze-unknown | microblazeel-unknown)
+		vendor=xilinx
+		;;
+	rs6000-unknown)
+		vendor=ibm
+		;;
+	vax-unknown)
+		vendor=dec
+		;;
+	pdp11-unknown)
+		vendor=dec
+		;;
+	we32k-unknown)
+		vendor=att
+		;;
+	cydra-unknown)
+		vendor=cydrome
+		;;
+	i370-ibm*)
+		vendor=ibm
+		;;
+	orion-unknown)
+		vendor=highlevel
+		;;
+	xps-unknown | xps100-unknown)
+		cpu=xps100
+		vendor=honeywell
+		;;
+
+	# Here we normalize CPU types with a missing or matching vendor
+	armh-unknown | armh-alt)
+		cpu=armv7l
+		vendor=alt
+		basic_os=${basic_os:-linux-gnueabihf}
+		;;
+	dpx20-unknown | dpx20-bull)
+		cpu=rs6000
+		vendor=bull
+		basic_os=${basic_os:-bosx}
+		;;
+
+	# Here we normalize CPU types irrespective of the vendor
+	amd64-*)
+		cpu=x86_64
+		;;
+	blackfin-*)
+		cpu=bfin
+		basic_os=linux
+		;;
+	c54x-*)
+		cpu=tic54x
+		;;
+	c55x-*)
+		cpu=tic55x
+		;;
+	c6x-*)
+		cpu=tic6x
+		;;
+	e500v[12]-*)
+		cpu=powerpc
+		basic_os=${basic_os}"spe"
+		;;
+	mips3*-*)
+		cpu=mips64
+		;;
+	ms1-*)
+		cpu=mt
+		;;
+	m68knommu-*)
+		cpu=m68k
+		basic_os=linux
+		;;
+	m9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)
+		cpu=s12z
+		;;
+	openrisc-*)
+		cpu=or32
+		;;
+	parisc-*)
+		cpu=hppa
+		basic_os=linux
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		cpu=i586
+		;;
+	pentiumpro-* | p6-* | 6x86-* | athlon-* | athlon_*-*)
+		cpu=i686
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		cpu=i686
+		;;
+	pentium4-*)
+		cpu=i786
+		;;
+	pc98-*)
+		cpu=i386
+		;;
+	ppc-* | ppcbe-*)
+		cpu=powerpc
+		;;
+	ppcle-* | powerpclittle-*)
+		cpu=powerpcle
+		;;
+	ppc64-*)
+		cpu=powerpc64
+		;;
+	ppc64le-* | powerpc64little-*)
+		cpu=powerpc64le
+		;;
+	sb1-*)
+		cpu=mipsisa64sb1
+		;;
+	sb1el-*)
+		cpu=mipsisa64sb1el
+		;;
+	sh5e[lb]-*)
+		cpu=`echo "$cpu" | sed 's/^\(sh.\)e\(.\)$/\1\2e/'`
+		;;
+	spur-*)
+		cpu=spur
+		;;
+	strongarm-* | thumb-*)
+		cpu=arm
+		;;
+	tx39-*)
+		cpu=mipstx39
+		;;
+	tx39el-*)
+		cpu=mipstx39el
+		;;
+	x64-*)
+		cpu=x86_64
+		;;
+	xscale-* | xscalee[bl]-*)
+		cpu=`echo "$cpu" | sed 's/^xscale/arm/'`
+		;;
+	arm64-* | aarch64le-*)
+		cpu=aarch64
+		;;
+
+	# Recognize the canonical CPU Types that limit and/or modify the
+	# company names they are paired with.
+	cr16-*)
+		basic_os=${basic_os:-elf}
+		;;
+	crisv32-* | etraxfs*-*)
+		cpu=crisv32
+		vendor=axis
+		;;
+	cris-* | etrax*-*)
+		cpu=cris
+		vendor=axis
+		;;
+	crx-*)
+		basic_os=${basic_os:-elf}
+		;;
+	neo-tandem)
+		cpu=neo
+		vendor=tandem
+		;;
+	nse-tandem)
+		cpu=nse
+		vendor=tandem
+		;;
+	nsr-tandem)
+		cpu=nsr
+		vendor=tandem
+		;;
+	nsv-tandem)
+		cpu=nsv
+		vendor=tandem
+		;;
+	nsx-tandem)
+		cpu=nsx
+		vendor=tandem
+		;;
+	mipsallegrexel-sony)
+		cpu=mipsallegrexel
+		vendor=sony
+		;;
+	tile*-*)
+		basic_os=${basic_os:-linux-gnu}
+		;;
+
+	*)
+		# Recognize the canonical CPU types that are allowed with any
+		# company name.
+		case $cpu in
+			1750a | 580 \
+			| a29k \
+			| aarch64 | aarch64_be | aarch64c | arm64ec \
+			| abacus \
+			| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \
+			| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \
+			| alphapca5[67] | alpha64pca5[67] \
+			| am33_2.0 \
+			| amdgcn \
+			| arc | arceb | arc32 | arc64 \
+			| arm | arm[lb]e | arme[lb] | armv* \
+			| avr | avr32 \
+			| asmjs \
+			| ba \
+			| be32 | be64 \
+			| bfin | bpf | bs2000 \
+			| c[123]* | c30 | [cjt]90 | c4x \
+			| c8051 | clipper | craynv | csky | cydra \
+			| d10v | d30v | dlx | dsp16xx \
+			| e2k | elxsi | epiphany \
+			| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \
+			| javascript \
+			| h8300 | h8500 \
+			| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+			| hexagon \
+			| i370 | i*86 | i860 | i960 | ia16 | ia64 \
+			| ip2k | iq2000 \
+			| k1om \
+			| kvx \
+			| le32 | le64 \
+			| lm32 \
+			| loongarch32 | loongarch64 \
+			| m32c | m32r | m32rle \
+			| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \
+			| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \
+			| m88110 | m88k | maxq | mb | mcore | mep | metag \
+			| microblaze | microblazeel \
+			| mips* \
+			| mmix \
+			| mn10200 | mn10300 \
+			| moxie \
+			| mt \
+			| msp430 \
+			| nds32 | nds32le | nds32be \
+			| nfp \
+			| nios | nios2 | nios2eb | nios2el \
+			| none | np1 | ns16k | ns32k | nvptx \
+			| open8 \
+			| or1k* \
+			| or32 \
+			| orion \
+			| picochip \
+			| pdp10 | pdp11 | pj | pjl | pn | power \
+			| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \
+			| pru \
+			| pyramid \
+			| riscv | riscv32 | riscv32be | riscv64 | riscv64be \
+			| rl78 | romp | rs6000 | rx \
+			| s390 | s390x \
+			| score \
+			| sh | shl \
+			| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \
+			| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \
+			| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \
+			| sparclite \
+			| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \
+			| spu \
+			| tahoe \
+			| thumbv7* \
+			| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \
+			| tron \
+			| ubicom32 \
+			| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \
+			| vax \
+			| visium \
+			| w65 \
+			| wasm32 | wasm64 \
+			| we32k \
+			| x86 | x86_64 | xc16x | xgate | xps100 \
+			| xstormy16 | xtensa* \
+			| ymp \
+			| z8k | z80)
+				;;
+
+			*)
+				echo "Invalid configuration '$1': machine '$cpu-$vendor' not recognized" 1>&2
+				exit 1
+				;;
+		esac
+		;;
+esac
+
+# Here we canonicalize certain aliases for manufacturers.
+case $vendor in
+	digital*)
+		vendor=dec
+		;;
+	commodore*)
+		vendor=cbm
+		;;
+	*)
+		;;
+esac
+
+# Decode manufacturer-specific aliases for certain operating systems.
+
+if test x"$basic_os" != x
+then
+
+# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just
+# set os.
+obj=
+case $basic_os in
+	gnu/linux*)
+		kernel=linux
+		os=`echo "$basic_os" | sed -e 's|gnu/linux|gnu|'`
+		;;
+	os2-emx)
+		kernel=os2
+		os=`echo "$basic_os" | sed -e 's|os2-emx|emx|'`
+		;;
+	nto-qnx*)
+		kernel=nto
+		os=`echo "$basic_os" | sed -e 's|nto-qnx|qnx|'`
+		;;
+	*-*)
+		# shellcheck disable=SC2162
+		saved_IFS=$IFS
+		IFS="-" read kernel os <<EOF
+$basic_os
+EOF
+		IFS=$saved_IFS
+		;;
+	# Default OS when just kernel was specified
+	nto*)
+		kernel=nto
+		os=`echo "$basic_os" | sed -e 's|nto|qnx|'`
+		;;
+	linux*)
+		kernel=linux
+		os=`echo "$basic_os" | sed -e 's|linux|gnu|'`
+		;;
+	managarm*)
+		kernel=managarm
+		os=`echo "$basic_os" | sed -e 's|managarm|mlibc|'`
+		;;
+	*)
+		kernel=
+		os=$basic_os
+		;;
+esac
+
+# Now, normalize the OS (knowing we just have one component, it's not a kernel,
+# etc.)
+case $os in
+	# First match some system type aliases that might get confused
+	# with valid system types.
+	# solaris* is a basic system type, with this one exception.
+	auroraux)
+		os=auroraux
+		;;
+	bluegene*)
+		os=cnk
+		;;
+	solaris1 | solaris1.*)
+		os=`echo "$os" | sed -e 's|solaris1|sunos4|'`
+		;;
+	solaris)
+		os=solaris2
+		;;
+	unixware*)
+		os=sysv4.2uw
+		;;
+	# es1800 is here to avoid being matched by es* (a different OS)
+	es1800*)
+		os=ose
+		;;
+	# Some version numbers need modification
+	chorusos*)
+		os=chorusos
+		;;
+	isc)
+		os=isc2.2
+		;;
+	sco6)
+		os=sco5v6
+		;;
+	sco5)
+		os=sco3.2v5
+		;;
+	sco4)
+		os=sco3.2v4
+		;;
+	sco3.2.[4-9]*)
+		os=`echo "$os" | sed -e 's/sco3.2./sco3.2v/'`
+		;;
+	sco*v* | scout)
+		# Don't match below
+		;;
+	sco*)
+		os=sco3.2v2
+		;;
+	psos*)
+		os=psos
+		;;
+	qnx*)
+		os=qnx
+		;;
+	hiux*)
+		os=hiuxwe2
+		;;
+	lynx*178)
+		os=lynxos178
+		;;
+	lynx*5)
+		os=lynxos5
+		;;
+	lynxos*)
+		# don't get caught up in next wildcard
+		;;
+	lynx*)
+		os=lynxos
+		;;
+	mac[0-9]*)
+		os=`echo "$os" | sed -e 's|mac|macos|'`
+		;;
+	opened*)
+		os=openedition
+		;;
+	os400*)
+		os=os400
+		;;
+	sunos5*)
+		os=`echo "$os" | sed -e 's|sunos5|solaris2|'`
+		;;
+	sunos6*)
+		os=`echo "$os" | sed -e 's|sunos6|solaris3|'`
+		;;
+	wince*)
+		os=wince
+		;;
+	utek*)
+		os=bsd
+		;;
+	dynix*)
+		os=bsd
+		;;
+	acis*)
+		os=aos
+		;;
+	atheos*)
+		os=atheos
+		;;
+	syllable*)
+		os=syllable
+		;;
+	386bsd)
+		os=bsd
+		;;
+	ctix* | uts*)
+		os=sysv
+		;;
+	nova*)
+		os=rtmk-nova
+		;;
+	ns2)
+		os=nextstep2
+		;;
+	# Preserve the version number of sinix5.
+	sinix5.*)
+		os=`echo "$os" | sed -e 's|sinix|sysv|'`
+		;;
+	sinix*)
+		os=sysv4
+		;;
+	tpf*)
+		os=tpf
+		;;
+	triton*)
+		os=sysv3
+		;;
+	oss*)
+		os=sysv3
+		;;
+	svr4*)
+		os=sysv4
+		;;
+	svr3)
+		os=sysv3
+		;;
+	sysvr4)
+		os=sysv4
+		;;
+	ose*)
+		os=ose
+		;;
+	*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)
+		os=mint
+		;;
+	dicos*)
+		os=dicos
+		;;
+	pikeos*)
+		# Until real need of OS specific support for
+		# particular features comes up, bare metal
+		# configurations are quite functional.
+		case $cpu in
+		    arm*)
+			os=eabi
+			;;
+		    *)
+			os=
+			obj=elf
+			;;
+		esac
+		;;
+	aout* | coff* | elf* | pe*)
+		# These are machine code file formats, not OSes
+		obj=$os
+		os=
+		;;
+	*)
+		# No normalization, but not necessarily accepted, that comes below.
+		;;
+esac
+
+else
+
+# Here we handle the default operating systems that come with various machines.
+# The value should be what the vendor currently ships out the door with their
+# machine or put another way, the most popular os provided with the machine.
+
+# Note that if you're going to try to match "-MANUFACTURER" here (say,
+# "-sun"), then you have to tell the case statement up towards the top
+# that MANUFACTURER isn't an operating system.  Otherwise, code above
+# will signal an error saying that MANUFACTURER isn't an operating
+# system, and we'll never get to this point.
+
+kernel=
+obj=
+case $cpu-$vendor in
+	score-*)
+		os=
+		obj=elf
+		;;
+	spu-*)
+		os=
+		obj=elf
+		;;
+	*-acorn)
+		os=riscix1.2
+		;;
+	arm*-rebel)
+		kernel=linux
+		os=gnu
+		;;
+	arm*-semi)
+		os=
+		obj=aout
+		;;
+	c4x-* | tic4x-*)
+		os=
+		obj=coff
+		;;
+	c8051-*)
+		os=
+		obj=elf
+		;;
+	clipper-intergraph)
+		os=clix
+		;;
+	hexagon-*)
+		os=
+		obj=elf
+		;;
+	tic54x-*)
+		os=
+		obj=coff
+		;;
+	tic55x-*)
+		os=
+		obj=coff
+		;;
+	tic6x-*)
+		os=
+		obj=coff
+		;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=tops20
+		;;
+	pdp11-*)
+		os=none
+		;;
+	*-dec | vax-*)
+		os=ultrix4.2
+		;;
+	m68*-apollo)
+		os=domain
+		;;
+	i386-sun)
+		os=sunos4.0.2
+		;;
+	m68000-sun)
+		os=sunos3
+		;;
+	m68*-cisco)
+		os=
+		obj=aout
+		;;
+	mep-*)
+		os=
+		obj=elf
+		;;
+	mips*-cisco)
+		os=
+		obj=elf
+		;;
+	mips*-*)
+		os=
+		obj=elf
+		;;
+	or32-*)
+		os=
+		obj=coff
+		;;
+	*-tti)	# must be before sparc entry or we get the wrong os.
+		os=sysv3
+		;;
+	sparc-* | *-sun)
+		os=sunos4.1.1
+		;;
+	pru-*)
+		os=
+		obj=elf
+		;;
+	*-be)
+		os=beos
+		;;
+	*-ibm)
+		os=aix
+		;;
+	*-knuth)
+		os=mmixware
+		;;
+	*-wec)
+		os=proelf
+		;;
+	*-winbond)
+		os=proelf
+		;;
+	*-oki)
+		os=proelf
+		;;
+	*-hp)
+		os=hpux
+		;;
+	*-hitachi)
+		os=hiux
+		;;
+	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
+		os=sysv
+		;;
+	*-cbm)
+		os=amigaos
+		;;
+	*-dg)
+		os=dgux
+		;;
+	*-dolphin)
+		os=sysv3
+		;;
+	m68k-ccur)
+		os=rtu
+		;;
+	m88k-omron*)
+		os=luna
+		;;
+	*-next)
+		os=nextstep
+		;;
+	*-sequent)
+		os=ptx
+		;;
+	*-crds)
+		os=unos
+		;;
+	*-ns)
+		os=genix
+		;;
+	i370-*)
+		os=mvs
+		;;
+	*-gould)
+		os=sysv
+		;;
+	*-highlevel)
+		os=bsd
+		;;
+	*-encore)
+		os=bsd
+		;;
+	*-sgi)
+		os=irix
+		;;
+	*-siemens)
+		os=sysv4
+		;;
+	*-masscomp)
+		os=rtu
+		;;
+	f30[01]-fujitsu | f700-fujitsu)
+		os=uxpv
+		;;
+	*-rom68k)
+		os=
+		obj=coff
+		;;
+	*-*bug)
+		os=
+		obj=coff
+		;;
+	*-apple)
+		os=macos
+		;;
+	*-atari*)
+		os=mint
+		;;
+	*-wrs)
+		os=vxworks
+		;;
+	*)
+		os=none
+		;;
+esac
+
+fi
+
+# Now, validate our (potentially fixed-up) individual pieces (OS, OBJ).
+
+case $os in
+	# Sometimes we do "kernel-libc", so those need to count as OSes.
+	musl* | newlib* | relibc* | uclibc*)
+		;;
+	# Likewise for "kernel-abi"
+	eabi* | gnueabi*)
+		;;
+	# VxWorks passes extra cpu info in the 4th filed.
+	simlinux | simwindows | spe)
+		;;
+	# See `case $cpu-$os` validation below
+	ghcjs)
+		;;
+	# Now accept the basic system types.
+	# The portable systems comes first.
+	# Each alternative MUST end in a * to match a version number.
+	gnu* | android* | bsd* | mach* | minix* | genix* | ultrix* | irix* \
+	     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]* \
+	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
+	     | sym* |  plan9* | psp* | sim* | xray* | os68k* | v88r* \
+	     | hiux* | abug | nacl* | netware* | windows* \
+	     | os9* | macos* | osx* | ios* | tvos* | watchos* \
+	     | mpw* | magic* | mmixware* | mon960* | lnews* \
+	     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \
+	     | aos* | aros* | cloudabi* | sortix* | twizzler* \
+	     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \
+	     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \
+	     | mirbsd* | netbsd* | dicos* | openedition* | ose* \
+	     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \
+	     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \
+	     | bosx* | nextstep* | cxux* | oabi* \
+	     | ptx* | ecoff* | winnt* | domain* | vsta* \
+	     | udi* | lites* | ieee* | go32* | aux* | hcos* \
+	     | chorusrdb* | cegcc* | glidix* | serenity* \
+	     | cygwin* | msys* | moss* | proelf* | rtems* \
+	     | midipix* | mingw32* | mingw64* | mint* \
+	     | uxpv* | beos* | mpeix* | udk* | moxiebox* \
+	     | interix* | uwin* | mks* | rhapsody* | darwin* \
+	     | openstep* | oskit* | conix* | pw32* | nonstopux* \
+	     | storm-chaos* | tops10* | tenex* | tops20* | its* \
+	     | os2* | vos* | palmos* | uclinux* | nucleus* | morphos* \
+	     | scout* | superux* | sysv* | rtmk* | tpf* | windiss* \
+	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
+	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
+	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
+	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
+	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \
+	     | fiwix* | mlibc* | cos* | mbr* )
+		;;
+	# This one is extra strict with allowed versions
+	sco3.2v2 | sco3.2v[4-9]* | sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		;;
+	none)
+		;;
+	kernel* | msvc* )
+		# Restricted further below
+		;;
+	'')
+		if test x"$obj" = x
+		then
+			echo "Invalid configuration '$1': Blank OS only allowed with explicit machine code file format" 1>&2
+		fi
+		;;
+	*)
+		echo "Invalid configuration '$1': OS '$os' not recognized" 1>&2
+		exit 1
+		;;
+esac
+
+case $obj in
+	aout* | coff* | elf* | pe*)
+		;;
+	'')
+		# empty is fine
+		;;
+	*)
+		echo "Invalid configuration '$1': Machine code format '$obj' not recognized" 1>&2
+		exit 1
+		;;
+esac
+
+# Here we handle the constraint that a (synthetic) cpu and os are
+# valid only in combination with each other and nowhere else.
+case $cpu-$os in
+	# The "javascript-unknown-ghcjs" triple is used by GHC; we
+	# accept it here in order to tolerate that, but reject any
+	# variations.
+	javascript-ghcjs)
+		;;
+	javascript-* | *-ghcjs)
+		echo "Invalid configuration '$1': cpu '$cpu' is not valid with os '$os$obj'" 1>&2
+		exit 1
+		;;
+esac
+
+# As a final step for OS-related things, validate the OS-kernel combination
+# (given a valid OS), if there is a kernel.
+case $kernel-$os-$obj in
+	linux-gnu*- | linux-dietlibc*- | linux-android*- | linux-newlib*- \
+		   | linux-musl*- | linux-relibc*- | linux-uclibc*- | linux-mlibc*- )
+		;;
+	uclinux-uclibc*- )
+		;;
+	managarm-mlibc*- | managarm-kernel*- )
+		;;
+	windows*-msvc*-)
+		;;
+	-dietlibc*- | -newlib*- | -musl*- | -relibc*- | -uclibc*- | -mlibc*- )
+		# These are just libc implementations, not actual OSes, and thus
+		# require a kernel.
+		echo "Invalid configuration '$1': libc '$os' needs explicit kernel." 1>&2
+		exit 1
+		;;
+	-kernel*- )
+		echo "Invalid configuration '$1': '$os' needs explicit kernel." 1>&2
+		exit 1
+		;;
+	*-kernel*- )
+		echo "Invalid configuration '$1': '$kernel' does not support '$os'." 1>&2
+		exit 1
+		;;
+	*-msvc*- )
+		echo "Invalid configuration '$1': '$os' needs 'windows'." 1>&2
+		exit 1
+		;;
+	kfreebsd*-gnu*- | kopensolaris*-gnu*-)
+		;;
+	vxworks-simlinux- | vxworks-simwindows- | vxworks-spe-)
+		;;
+	nto-qnx*-)
+		;;
+	os2-emx-)
+		;;
+	*-eabi*- | *-gnueabi*-)
+		;;
+	none--*)
+		# None (no kernel, i.e. freestanding / bare metal),
+		# can be paired with an machine code file format
+		;;
+	-*-)
+		# Blank kernel with real OS is always fine.
+		;;
+	--*)
+		# Blank kernel and OS with real machine code file format is always fine.
+		;;
+	*-*-*)
+		echo "Invalid configuration '$1': Kernel '$kernel' not known to work with OS '$os'." 1>&2
+		exit 1
+		;;
+esac
+
+# Here we handle the case where we know the os, and the CPU type, but not the
+# manufacturer.  We pick the logical manufacturer.
+case $vendor in
+	unknown)
+		case $cpu-$os in
+			*-riscix*)
+				vendor=acorn
+				;;
+			*-sunos*)
+				vendor=sun
+				;;
+			*-cnk* | *-aix*)
+				vendor=ibm
+				;;
+			*-beos*)
+				vendor=be
+				;;
+			*-hpux*)
+				vendor=hp
+				;;
+			*-mpeix*)
+				vendor=hp
+				;;
+			*-hiux*)
+				vendor=hitachi
+				;;
+			*-unos*)
+				vendor=crds
+				;;
+			*-dgux*)
+				vendor=dg
+				;;
+			*-luna*)
+				vendor=omron
+				;;
+			*-genix*)
+				vendor=ns
+				;;
+			*-clix*)
+				vendor=intergraph
+				;;
+			*-mvs* | *-opened*)
+				vendor=ibm
+				;;
+			*-os400*)
+				vendor=ibm
+				;;
+			s390-* | s390x-*)
+				vendor=ibm
+				;;
+			*-ptx*)
+				vendor=sequent
+				;;
+			*-tpf*)
+				vendor=ibm
+				;;
+			*-vxsim* | *-vxworks* | *-windiss*)
+				vendor=wrs
+				;;
+			*-aux*)
+				vendor=apple
+				;;
+			*-hms*)
+				vendor=hitachi
+				;;
+			*-mpw* | *-macos*)
+				vendor=apple
+				;;
+			*-*mint | *-mint[0-9]* | *-*MiNT | *-MiNT[0-9]*)
+				vendor=atari
+				;;
+			*-vos*)
+				vendor=stratus
+				;;
+		esac
+		;;
+esac
+
+echo "$cpu-$vendor${kernel:+-$kernel}${os:+-$os}${obj:+-$obj}"
+exit
+
+# Local variables:
+# eval: (add-hook 'before-save-hook 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff --git a/contrib/depends/description.md b/contrib/depends/description.md
new file mode 100644
index 00000000..74f9ef3f
--- /dev/null
+++ b/contrib/depends/description.md
@@ -0,0 +1,53 @@
+This is a system of building and caching dependencies necessary for building Bitcoin. 
+There are several features that make it different from most similar systems:
+
+### It is designed to be builder and host agnostic
+
+In theory, binaries for any target OS/architecture can be created, from a
+builder running any OS/architecture. In practice, build-side tools must be
+specified when the defaults don't fit, and packages must be amended to work
+on new hosts. For now, a build architecture of x86_64 is assumed, either on
+Linux or OSX.
+
+### No reliance on timestamps
+
+File presence is used to determine what needs to be built. This makes the
+results distributable and easily digestable by automated builders.
+
+### Each build only has its specified dependencies available at build-time.
+
+For each build, the sysroot is wiped and the (recursive) dependencies are
+installed. This makes each build deterministic, since there will never be any
+unknown files available to cause side-effects.
+
+### Each package is cached and only rebuilt as needed.
+
+Before building, a unique build-id is generated for each package. This id
+consists of a hash of all files used to build the package (Makefiles, packages,
+etc), and as well as a hash of the same data for each recursive dependency. If
+any portion of a package's build recipe changes, it will be rebuilt as well as
+any other package that depends on it. If any of the main makefiles (Makefile, 
+funcs.mk, etc) are changed, all packages will be rebuilt. After building, the
+results are cached into a tarball that can be re-used and distributed.
+
+### Package build results are (relatively) deterministic.
+
+Each package is configured and patched so that it will yield the same
+build-results with each consequent build, within a reasonable set of
+constraints. Some things like timestamp insertion are unavoidable, and are
+beyond the scope of this system. Additionally, the toolchain itself must be
+capable of deterministic results. When revisions are properly bumped, a cached
+build should represent an exact single payload.
+
+### Sources are fetched and verified automatically
+
+Each package must define its source location and checksum. The build will fail
+if the fetched source does not match. Sources may be pre-seeded and/or cached
+as desired.
+
+### Self-cleaning
+
+Build and staging dirs are wiped after use, and any previous version of a
+cached result is removed following a successful build. Automated builders
+should be able to build each revision and store the results with no further
+intervention.
diff --git a/contrib/depends/funcs.mk b/contrib/depends/funcs.mk
new file mode 100644
index 00000000..e08669c9
--- /dev/null
+++ b/contrib/depends/funcs.mk
@@ -0,0 +1,270 @@
+define int_vars
+#Set defaults for vars which may be overridden per-package
+$(1)_cc=$($($(1)_type)_CC)
+$(1)_cxx=$($($(1)_type)_CXX)
+$(1)_objc=$($($(1)_type)_OBJC)
+$(1)_objcxx=$($($(1)_type)_OBJCXX)
+$(1)_ar=$($($(1)_type)_AR)
+$(1)_ranlib=$($($(1)_type)_RANLIB)
+$(1)_libtool=$($($(1)_type)_LIBTOOL)
+$(1)_nm=$($($(1)_type)_NM)
+$(1)_cflags=$($($(1)_type)_CFLAGS) $($($(1)_type)_$(release_type)_CFLAGS)
+$(1)_cxxflags=$($($(1)_type)_CXXFLAGS) $($($(1)_type)_$(release_type)_CXXFLAGS)
+$(1)_arflags=$($($(1)_type)_ARFLAGS) $($($(1)_type)_$(release_type)_ARFLAGS)
+$(1)_ldflags=$($($(1)_type)_LDFLAGS) $($($(1)_type)_$(release_type)_LDFLAGS) -L$($($(1)_type)_prefix)/lib
+$(1)_cppflags=$($($(1)_type)_CPPFLAGS) $($($(1)_type)_$(release_type)_CPPFLAGS) -I$($($(1)_type)_prefix)/include
+$(1)_recipe_hash:=
+endef
+
+define int_get_all_dependencies
+$(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))
+endef
+
+define fetch_file_inner
+    ( mkdir -p $$($(1)_download_dir) && echo Fetching $(3) from $(2) && \
+    $(build_DOWNLOAD) "$$($(1)_download_dir)/$(4).temp" "$(2)/$(3)" && \
+    echo "$(5)  $$($(1)_download_dir)/$(4).temp" > $$($(1)_download_dir)/.$(4).hash && \
+    $(build_SHA256SUM) -c $$($(1)_download_dir)/.$(4).hash && \
+    mv $$($(1)_download_dir)/$(4).temp $$($(1)_source_dir)/$(4) && \
+    rm -rf $$($(1)_download_dir) )
+endef
+
+define fetch_file
+    ( test -f $$($(1)_source_dir)/$(4) || \
+    ( $(call fetch_file_inner,$(1),$(2),$(3),$(4),$(5)) || \
+      $(call fetch_file_inner,$(1),$(FALLBACK_DOWNLOAD_PATH),$(4),$(4),$(5))))
+endef
+
+define int_get_build_recipe_hash
+$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches)) | cut -d" " -f1))
+$(eval $(1)_recipe_hash:=$(shell echo -n "$($(1)_all_file_checksums)" | $(build_SHA256SUM) | cut -d" " -f1))
+endef
+
+define int_get_build_id
+$(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))
+$(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))
+$(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))
+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps) $($($(1)_type)_id_string))
+$(eval $(1)_build_id:=$(shell echo -n "$($(1)_build_id_long)" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))
+final_build_id_long+=$($(package)_build_id_long)
+
+#compute package-specific paths
+$(1)_build_subdir?=.
+$(1)_download_file?=$($(1)_file_name)
+$(1)_source_dir:=$(SOURCES_PATH)
+$(1)_source:=$$($(1)_source_dir)/$($(1)_file_name)
+$(1)_staging_dir=$(base_staging_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)
+$(1)_staging_prefix_dir:=$$($(1)_staging_dir)$($($(1)_type)_prefix)
+$(1)_extract_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)
+$(1)_download_dir:=$(base_download_dir)/$(1)-$($(1)_version)
+$(1)_build_dir:=$$($(1)_extract_dir)/$$($(1)_build_subdir)
+$(1)_cached_checksum:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz.hash
+$(1)_patch_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)/.patches-$($(1)_build_id)
+$(1)_prefixbin:=$($($(1)_type)_prefix)/bin/
+$(1)_cached:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz
+$(1)_all_sources=$($(1)_file_name) $($(1)_extra_sources)
+
+#stamps
+$(1)_fetched=$(SOURCES_PATH)/download-stamps/.stamp_fetched-$(1)-$($(1)_file_name).hash
+$(1)_extracted=$$($(1)_extract_dir)/.stamp_extracted
+$(1)_preprocessed=$$($(1)_extract_dir)/.stamp_preprocessed
+$(1)_cleaned=$$($(1)_extract_dir)/.stamp_cleaned
+$(1)_built=$$($(1)_build_dir)/.stamp_built
+$(1)_configured=$$($(1)_build_dir)/.stamp_configured
+$(1)_staged=$$($(1)_staging_dir)/.stamp_staged
+$(1)_postprocessed=$$($(1)_staging_prefix_dir)/.stamp_postprocessed
+$(1)_download_path_fixed=$(subst :,\:,$$($(1)_download_path))
+
+
+#default commands
+$(1)_fetch_cmds ?= $(call fetch_file,$(1),$(subst \:,:,$$($(1)_download_path_fixed)),$$($(1)_download_file),$($(1)_file_name),$($(1)_sha256_hash))
+$(1)_extract_cmds ?= mkdir -p $$($(1)_extract_dir) && echo "$$($(1)_sha256_hash)  $$($(1)_source)" > $$($(1)_extract_dir)/.$$($(1)_file_name).hash &&  $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$$($(1)_file_name).hash && tar --strip-components=1 -xf $$($(1)_source)
+$(1)_preprocess_cmds ?=
+$(1)_build_cmds ?=
+$(1)_config_cmds ?=
+$(1)_stage_cmds ?=
+$(1)_set_vars ?=
+
+
+all_sources+=$$($(1)_fetched)
+endef
+#$(foreach dep_target,$($(1)_all_dependencies),$(eval $(1)_dependency_targets=$($(dep_target)_cached)))
+
+
+define int_config_attach_build_config
+$(eval $(call $(1)_set_vars,$(1)))
+$(1)_cflags+=$($(1)_cflags_$(release_type))
+$(1)_cflags+=$($(1)_cflags_$(host_arch)) $($(1)_cflags_$(host_arch)_$(release_type))
+$(1)_cflags+=$($(1)_cflags_$(host_os)) $($(1)_cflags_$(host_os)_$(release_type))
+$(1)_cflags+=$($(1)_cflags_$(host_arch)_$(host_os)) $($(1)_cflags_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_cxxflags+=$($(1)_cxxflags_$(release_type))
+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)) $($(1)_cxxflags_$(host_arch)_$(release_type))
+$(1)_cxxflags+=$($(1)_cxxflags_$(host_os)) $($(1)_cxxflags_$(host_os)_$(release_type))
+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)_$(host_os)) $($(1)_cxxflags_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_arflags+=$($(1)_arflags_$(release_type))
+$(1)_arflags+=$($(1)_arflags_$(host_arch)) $($(1)_arflags_$(host_arch)_$(release_type))
+$(1)_arflags+=$($(1)_arflags_$(host_os)) $($(1)_arflags_$(host_os)_$(release_type))
+$(1)_arflags+=$($(1)_arflags_$(host_arch)_$(host_os)) $($(1)_arflags_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_cppflags+=$($(1)_cppflags_$(release_type))
+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)) $($(1)_cppflags_$(host_arch)_$(release_type))
+$(1)_cppflags+=$($(1)_cppflags_$(host_os)) $($(1)_cppflags_$(host_os)_$(release_type))
+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)_$(host_os)) $($(1)_cppflags_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_ldflags+=$($(1)_ldflags_$(release_type))
+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)) $($(1)_ldflags_$(host_arch)_$(release_type))
+$(1)_ldflags+=$($(1)_ldflags_$(host_os)) $($(1)_ldflags_$(host_os)_$(release_type))
+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)_$(host_os)) $($(1)_ldflags_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_build_opts+=$$($(1)_build_opts_$(release_type))
+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)) $$($(1)_build_opts_$(host_arch)_$(release_type))
+$(1)_build_opts+=$$($(1)_build_opts_$(host_os)) $$($(1)_build_opts_$(host_os)_$(release_type))
+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)_$(host_os)) $$($(1)_build_opts_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_config_opts+=$$($(1)_config_opts_$(release_type))
+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)) $$($(1)_config_opts_$(host_arch)_$(release_type))
+$(1)_config_opts+=$$($(1)_config_opts_$(host_os)) $$($(1)_config_opts_$(host_os)_$(release_type))
+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)_$(host_os)) $$($(1)_config_opts_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_config_env+=$$($(1)_config_env_$(release_type))
+$(1)_config_env+=$($(1)_config_env_$(host_arch)) $($(1)_config_env_$(host_arch)_$(release_type))
+$(1)_config_env+=$($(1)_config_env_$(host_os)) $($(1)_config_env_$(host_os)_$(release_type))
+$(1)_config_env+=$($(1)_config_env_$(host_arch)_$(host_os)) $($(1)_config_env_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_build_env+=$$($(1)_build_env_$(release_type))
+$(1)_build_env+=$($(1)_build_env_$(host_arch)) $($(1)_build_env_$(host_arch)_$(release_type))
+$(1)_build_env+=$($(1)_build_env_$(host_os)) $($(1)_build_env_$(host_os)_$(release_type))
+$(1)_build_env+=$($(1)_build_env_$(host_arch)_$(host_os)) $($(1)_build_env_$(host_arch)_$(host_os)_$(release_type))
+
+$(1)_config_env+=PKG_CONFIG_LIBDIR=$($($(1)_type)_prefix)/lib/pkgconfig
+$(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig
+$(1)_config_env+=PATH="$(build_prefix)/bin:$(PATH)"
+$(1)_build_env+=PATH="$(build_prefix)/bin:$(PATH)"
+$(1)_stage_env+=PATH="$(build_prefix)/bin:$(PATH)"
+$(1)_autoconf=./configure --host=$($($(1)_type)_host) --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC="$$($(1)_cc)" CXX="$$($(1)_cxx)"
+
+ifeq ($(filter $(1),libusb unbound),)
+$(1)_autoconf += --disable-dependency-tracking
+endif
+ifneq ($($(1)_nm),)
+$(1)_autoconf += NM="$$($(1)_nm)"
+endif
+ifneq ($($(1)_ranlib),)
+$(1)_autoconf += RANLIB="$$($(1)_ranlib)"
+endif
+ifneq ($($(1)_ar),)
+$(1)_autoconf += AR="$$($(1)_ar)"
+endif
+ifneq ($($(1)_arflags),)
+$(1)_autoconf += ARFLAGS="$$($(1)_arflags)"
+endif
+ifneq ($($(1)_cflags),)
+$(1)_autoconf += CFLAGS="$$($(1)_cflags)"
+endif
+ifneq ($($(1)_cxxflags),)
+$(1)_autoconf += CXXFLAGS="$$($(1)_cxxflags)"
+endif
+ifneq ($($(1)_cppflags),)
+$(1)_autoconf += CPPFLAGS="$$($(1)_cppflags)"
+endif
+ifneq ($($(1)_ldflags),)
+$(1)_autoconf += LDFLAGS="$$($(1)_ldflags)"
+endif
+endef
+
+define int_add_cmds
+$($(1)_fetched):
+	$(AT)mkdir -p $$(@D) $(SOURCES_PATH)
+	$(AT)rm -f $$@
+	$(AT)touch $$@
+	$(AT)cd $$(@D); $(call $(1)_fetch_cmds,$(1))
+	$(AT)cd $($(1)_source_dir); $(foreach source,$($(1)_all_sources),$(build_SHA256SUM) $(source) >> $$(@);)
+	$(AT)touch $$@
+$($(1)_extracted): | $($(1)_fetched)
+	$(AT)echo Extracting $(1)...
+	$(AT)mkdir -p $$(@D)
+	$(AT)cd $$(@D); $(call $(1)_extract_cmds,$(1))
+	$(AT)touch $$@
+$($(1)_preprocessed): | $($(1)_dependencies) $($(1)_extracted)
+	$(AT)echo Preprocessing $(1)...
+	$(AT)mkdir -p $$(@D) $($(1)_patch_dir)
+	$(AT)$(foreach patch,$($(1)_patches),cd $(PATCHES_PATH)/$(1); cp $(patch) $($(1)_patch_dir) ;)
+	$(AT)cd $$(@D); $(call $(1)_preprocess_cmds, $(1))
+	$(AT)touch $$@
+$($(1)_configured): | $($(1)_preprocessed)
+	$(AT)echo Configuring $(1)...
+	$(AT)rm -rf $(host_prefix); mkdir -p $(host_prefix)/lib; cd $(host_prefix); $(foreach package,$($(1)_all_dependencies), tar xf $($(package)_cached); )
+	$(AT)mkdir -p $$(@D)
+	$(AT)+cd $$(@D); $($(1)_config_env) $(call $(1)_config_cmds, $(1))
+	$(AT)touch $$@
+$($(1)_built): | $($(1)_configured)
+	$(AT)echo Building $(1)...
+	$(AT)mkdir -p $$(@D)
+	$(AT)+cd $$(@D); $($(1)_build_env) $(call $(1)_build_cmds, $(1))
+	$(AT)touch $$@
+$($(1)_staged): | $($(1)_built)
+	$(AT)echo Staging $(1)...
+	$(AT)mkdir -p $($(1)_staging_dir)/$(host_prefix)
+	$(AT)cd $($(1)_build_dir); $($(1)_stage_env) $(call $(1)_stage_cmds, $(1))
+	$(AT)rm -rf $($(1)_extract_dir)
+	$(AT)touch $$@
+$($(1)_postprocessed): | $($(1)_staged)
+	$(AT)echo Postprocessing $(1)...
+	$(AT)cd $($(1)_staging_prefix_dir); $(call $(1)_postprocess_cmds)
+	$(AT)touch $$@
+$($(1)_cached): | $($(1)_dependencies) $($(1)_postprocessed)
+	$(AT)echo Caching $(1)...
+	$(AT)cd $$($(1)_staging_dir)/$(host_prefix); find . | sort | tar --no-recursion -czf $$($(1)_staging_dir)/$$(@F) -T -
+	$(AT)mkdir -p $$(@D)
+	$(AT)rm -rf $$(@D) && mkdir -p $$(@D)
+	$(AT)mv $$($(1)_staging_dir)/$$(@F) $$(@)
+	$(AT)rm -rf $($(1)_staging_dir)
+$($(1)_cached_checksum): $($(1)_cached)
+	$(AT)cd $$(@D); $(build_SHA256SUM) $$(<F) > $$(@)
+
+.PHONY: $(1)
+$(1): | $($(1)_cached_checksum)
+.SECONDARY: $($(1)_cached) $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)
+
+endef
+
+stages = fetched extracted preprocessed configured built staged postprocessed cached cached_checksum
+
+define ext_add_stages
+$(foreach stage,$(stages),
+          $(1)_$(stage): $($(1)_$(stage))
+          .PHONY: $(1)_$(stage))
+endef
+
+# These functions create the build targets for each package. They must be
+# broken down into small steps so that each part is done for all packages
+# before moving on to the next step. Otherwise, a package's info
+# (build-id for example) would only be available to another package if it
+# happened to be computed already.
+
+#set the type for host/build packages.
+$(foreach native_package,$(native_packages),$(eval $(native_package)_type=build))
+$(foreach package,$(packages),$(eval $(package)_type=$(host_arch)_$(host_os)))
+
+#set overridable defaults
+$(foreach package,$(all_packages),$(eval $(call int_vars,$(package))))
+
+#include package files
+$(foreach package,$(all_packages),$(eval include packages/$(package).mk))
+
+#compute a hash of all files that comprise this package's build recipe
+$(foreach package,$(all_packages),$(eval $(call int_get_build_recipe_hash,$(package))))
+
+#generate a unique id for this package, incorporating its dependencies as well
+$(foreach package,$(all_packages),$(eval $(call int_get_build_id,$(package))))
+
+#compute final vars after reading package vars
+$(foreach package,$(all_packages),$(eval $(call int_config_attach_build_config,$(package))))
+
+#create build targets
+$(foreach package,$(all_packages),$(eval $(call int_add_cmds,$(package))))
+
+#special exception: if a toolchain package exists, all non-native packages depend on it
+$(foreach package,$(packages),$(eval $($(package)_unpacked): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) ))
diff --git a/contrib/depends/hosts/android.mk b/contrib/depends/hosts/android.mk
new file mode 100644
index 00000000..b08126e8
--- /dev/null
+++ b/contrib/depends/hosts/android.mk
@@ -0,0 +1,23 @@
+ANDROID_API=21
+
+ifeq ($(host_arch),arm)
+host_toolchain=arm-linux-androideabi-
+endif
+
+android_CC=$(host_toolchain)clang
+android_CXX=$(host_toolchain)clang++
+android_RANLIB=:
+
+android_CFLAGS=-pipe
+android_CXXFLAGS=$(android_CFLAGS)
+android_ARFLAGS=crsD
+
+android_release_CFLAGS=-O2
+android_release_CXXFLAGS=$(android_release_CFLAGS)
+
+android_debug_CFLAGS=-g -O0
+android_debug_CXXFLAGS=$(android_debug_CFLAGS)
+
+android_native_toolchain=android_ndk
+
+android_cmake_system=Android
diff --git a/contrib/depends/hosts/darwin.mk b/contrib/depends/hosts/darwin.mk
new file mode 100644
index 00000000..9a96e260
--- /dev/null
+++ b/contrib/depends/hosts/darwin.mk
@@ -0,0 +1,23 @@
+OSX_MIN_VERSION=10.13
+LD64_VERSION=609
+ifeq (aarch64, $(host_arch))
+CC_target=arm64-apple-$(host_os)
+else
+CC_target=$(host)
+endif
+darwin_CC=clang -target $(CC_target) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(host_prefix)/native/SDK/ -iwithsysroot/usr/include -iframeworkwithsysroot/System/Library/Frameworks -mlinker-version=$(LD64_VERSION) -B$(host_prefix)/native/bin/$(host)-
+darwin_CXX=clang++ -target $(CC_target) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(host_prefix)/native/SDK/ -iwithsysroot/usr/include/c++/v1 -iwithsysroot/usr/include -iframeworkwithsysroot/System/Library/Frameworks -mlinker-version=$(LD64_VERSION) -stdlib=libc++ -B$(host_prefix)/native/bin/$(host)-
+
+darwin_CFLAGS=-pipe
+darwin_CXXFLAGS=$(darwin_CFLAGS)
+darwin_ARFLAGS=cr
+
+darwin_release_CFLAGS=-O1
+darwin_release_CXXFLAGS=$(darwin_release_CFLAGS)
+
+darwin_debug_CFLAGS=-O1
+darwin_debug_CXXFLAGS=$(darwin_debug_CFLAGS)
+
+darwin_native_toolchain=native_cctools darwin_sdk
+
+darwin_cmake_system=Darwin
diff --git a/contrib/depends/hosts/default.mk b/contrib/depends/hosts/default.mk
new file mode 100644
index 00000000..2e7f9fa2
--- /dev/null
+++ b/contrib/depends/hosts/default.mk
@@ -0,0 +1,26 @@
+default_host_CC = $(host_toolchain)gcc
+default_host_CXX = $(host_toolchain)g++
+default_host_AR = $(host_toolchain)ar
+default_host_RANLIB = $(host_toolchain)ranlib
+default_host_STRIP = $(host_toolchain)strip
+default_host_LIBTOOL = $(host_toolchain)libtool
+default_host_INSTALL_NAME_TOOL = $(host_toolchain)install_name_tool
+default_host_OTOOL = $(host_toolchain)otool
+default_host_NM = $(host_toolchain)nm
+
+define add_host_tool_func
+$(host_os)_$1?=$$(default_host_$1)
+$(host_arch)_$(host_os)_$1?=$$($(host_os)_$1)
+$(host_arch)_$(host_os)_$(release_type)_$1?=$$($(host_os)_$1)
+host_$1=$$($(host_arch)_$(host_os)_$1)
+endef
+
+define add_host_flags_func
+$(host_arch)_$(host_os)_$1 += $($(host_os)_$1)
+$(host_arch)_$(host_os)_$(release_type)_$1 += $($(host_os)_$(release_type)_$1)
+host_$1 = $$($(host_arch)_$(host_os)_$1)
+host_$(release_type)_$1 = $$($(host_arch)_$(host_os)_$(release_type)_$1)
+endef
+
+$(foreach tool,CC CXX AR RANLIB STRIP NM LIBTOOL OTOOL INSTALL_NAME_TOOL,$(eval $(call add_host_tool_func,$(tool))))
+$(foreach flags,CFLAGS CXXFLAGS ARFLAGS CPPFLAGS LDFLAGS, $(eval $(call add_host_flags_func,$(flags))))
diff --git a/contrib/depends/hosts/freebsd.mk b/contrib/depends/hosts/freebsd.mk
new file mode 100644
index 00000000..d3c6c614
--- /dev/null
+++ b/contrib/depends/hosts/freebsd.mk
@@ -0,0 +1,19 @@
+freebsd_CC=clang-8
+freebsd_CXX=clang++-8
+freebsd_AR=ar
+freebsd_RANLIB=ranlib
+freebsd_NM=nm
+
+freebsd_CFLAGS=-pipe
+freebsd_CXXFLAGS=$(freebsd_CFLAGS)
+freebsd_ARFLAGS=cr
+
+freebsd_release_CFLAGS=-O2
+freebsd_release_CXXFLAGS=$(freebsd_release_CFLAGS)
+
+freebsd_debug_CFLAGS=-g -O0
+freebsd_debug_CXXFLAGS=$(freebsd_debug_CFLAGS)
+
+freebsd_native_toolchain=freebsd_base
+
+freebsd_cmake_system=FreeBSD
diff --git a/contrib/depends/hosts/linux.mk b/contrib/depends/hosts/linux.mk
new file mode 100644
index 00000000..0f9379f4
--- /dev/null
+++ b/contrib/depends/hosts/linux.mk
@@ -0,0 +1,34 @@
+linux_CFLAGS=-pipe
+linux_CXXFLAGS=$(linux_CFLAGS)
+linux_ARFLAGS=cr
+
+linux_release_CFLAGS=-O2
+linux_release_CXXFLAGS=$(linux_release_CFLAGS)
+
+linux_debug_CFLAGS=-O1
+linux_debug_CXXFLAGS=$(linux_debug_CFLAGS)
+
+linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
+
+ifeq (86,$(findstring 86,$(build_arch)))
+i686_linux_CC=gcc -m32
+i686_linux_CXX=g++ -m32
+i686_linux_AR=ar
+i686_linux_RANLIB=ranlib
+i686_linux_NM=nm
+i686_linux_STRIP=strip
+
+x86_64_linux_CC=gcc -m64
+x86_64_linux_CXX=g++ -m64
+x86_64_linux_AR=ar
+x86_64_linux_RANLIB=ranlib
+x86_64_linux_NM=nm
+x86_64_linux_STRIP=strip
+else
+i686_linux_CC=$(default_host_CC) -m32
+i686_linux_CXX=$(default_host_CXX) -m32
+x86_64_linux_CC=$(default_host_CC) -m64
+x86_64_linux_CXX=$(default_host_CXX) -m64
+endif
+
+linux_cmake_system=Linux
diff --git a/contrib/depends/hosts/mingw32.mk b/contrib/depends/hosts/mingw32.mk
new file mode 100644
index 00000000..58a9a929
--- /dev/null
+++ b/contrib/depends/hosts/mingw32.mk
@@ -0,0 +1,13 @@
+mingw32_CFLAGS=-pipe
+mingw32_CXXFLAGS=$(mingw32_CFLAGS)
+mingw32_ARFLAGS=cr
+
+mingw32_release_CFLAGS=-O2
+mingw32_release_CXXFLAGS=$(mingw32_release_CFLAGS)
+
+mingw32_debug_CFLAGS=-O1
+mingw32_debug_CXXFLAGS=$(mingw32_debug_CFLAGS)
+
+mingw32_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
+
+mingw32_cmake_system=Windows
diff --git a/contrib/depends/packages.md b/contrib/depends/packages.md
new file mode 100644
index 00000000..ae5b4732
--- /dev/null
+++ b/contrib/depends/packages.md
@@ -0,0 +1,165 @@
+Each recipe consists of 3 main parts: defining identifiers, setting build
+variables, and defining build commands.
+
+The package "mylib" will be used here as an example
+
+General tips:
+- mylib_foo is written as $(package)_foo in order to make recipes more similar.
+
+## Identifiers
+Each package is required to define at least these variables:
+
+```
+$(package)_version:
+Version of the upstream library or program. If there is no version, a
+placeholder such as 1.0 can be used.
+
+$(package)_download_path:
+Location of the upstream source, without the file-name. Usually http or
+ftp.
+
+$(package)_file_name:
+The upstream source filename available at the download path.
+
+$(package)_sha256_hash:
+The sha256 hash of the upstream file
+```
+
+These variables are optional:
+
+```
+$(package)_build_subdir:
+cd to this dir before running configure/build/stage commands.
+
+$(package)_download_file:
+The file-name of the upstream source if it differs from how it should be
+stored locally. This can be used to avoid storing file-names with strange
+characters.
+
+$(package)_dependencies:
+Names of any other packages that this one depends on.
+
+$(package)_patches:
+Filenames of any patches needed to build the package
+
+$(package)_extra_sources:
+Any extra files that will be fetched via $(package)_fetch_cmds. These are
+specified so that they can be fetched and verified via 'make download'.
+```
+
+
+## Build Variables:
+After defining the main identifiers, build variables may be added or customized
+before running the build commands. They should be added to a function called
+$(package)_set_vars. For example:
+
+```
+define $(package)_set_vars
+...
+endef
+```
+
+Most variables can be prefixed with the host, architecture, or both, to make
+the modifications specific to that case. For example:
+
+```
+Universal:     $(package)_cc=gcc
+Linux only:    $(package)_linux_cc=gcc
+x86_64 only:       $(package)_x86_64_cc = gcc
+x86_64 linux only: $(package)_x86_64_linux_cc = gcc
+```
+
+These variables may be set to override or append their default values.
+
+```
+$(package)_cc
+$(package)_cxx
+$(package)_objc
+$(package)_objcxx
+$(package)_ar
+$(package)_ranlib
+$(package)_libtool
+$(package)_nm
+$(package)_cflags
+$(package)_cxxflags
+$(package)_ldflags
+$(package)_cppflags
+$(package)_config_env
+$(package)_build_env
+$(package)_stage_env
+$(package)_build_opts
+$(package)_config_opts
+```
+
+The `*_env` variables are used to add environment variables to the respective
+commands.
+
+Many variables respect a debug/release suffix as well, in order to use them for
+only the appropriate build config. For example:
+
+```
+$(package)_cflags_release = -O3
+$(package)_cflags_i686_debug = -g
+$(package)_config_opts_release = --disable-debug
+```
+
+These will be used in addition to the options that do not specify
+debug/release. All builds are considered to be release unless DEBUG=1 is set by
+the user. Other variables may be defined as needed.
+
+## Build commands:
+
+For each build, a unique build dir and staging dir are created. For example,
+`work/build/mylib/1.0-1adac830f6e` and `work/staging/mylib/1.0-1adac830f6e`.
+
+The following build commands are available for each recipe:
+
+```
+$(package)_fetch_cmds:
+Runs from: build dir
+Fetch the source file. If undefined, it will be fetched and verified
+against its hash.
+
+$(package)_extract_cmds:
+Runs from: build dir
+Verify the source file against its hash and extract it. If undefined, the
+source is assumed to be a tarball.
+
+$(package)_preprocess_cmds:
+Runs from: build dir/$(package)_build_subdir
+Preprocess the source as necessary. If undefined, does nothing.
+
+$(package)_config_cmds:
+Runs from: build dir/$(package)_build_subdir
+Configure the source. If undefined, does nothing.
+
+$(package)_build_cmds:
+Runs from: build dir/$(package)_build_subdir
+Build the source. If undefined, does nothing.
+
+$(package)_stage_cmds:
+Runs from: build dir/$(package)_build_subdir
+Stage the build results. If undefined, does nothing.
+```
+
+The following variables are available for each recipe:
+
+```    
+$(1)_staging_dir: package's destination sysroot path
+$(1)_staging_prefix_dir: prefix path inside of the package's staging dir
+$(1)_extract_dir: path to the package's extracted sources
+$(1)_build_dir: path where configure/build/stage commands will be run
+$(1)_patch_dir: path where the package's patches (if any) are found
+```
+
+Notes on build commands:
+
+For packages built with autotools, `$($(package)_autoconf)` can be used in the
+configure step to (usually) correctly configure automatically. Any
+`$($(package)_config_opts`) will be appended.
+
+Most autotools projects can be properly staged using:
+
+```bash
+$(MAKE) DESTDIR=$($(package)_staging_dir) install
+```
diff --git a/contrib/depends/packages/android_ndk.mk b/contrib/depends/packages/android_ndk.mk
new file mode 100644
index 00000000..65fa89de
--- /dev/null
+++ b/contrib/depends/packages/android_ndk.mk
@@ -0,0 +1,28 @@
+package=android_ndk
+$(package)_version=18b
+$(package)_download_path=https://dl.google.com/android/repository/
+$(package)_file_name=android-ndk-r$($(package)_version)-linux-x86_64.zip
+$(package)_sha256_hash=4f61cbe4bbf6406aa5ef2ae871def78010eed6271af72de83f8bd0b07a9fd3fd
+$(package)_patches=api_definition.patch
+
+define $(package)_set_vars
+$(package)_config_opts_arm=--arch arm
+$(package)_config_opts_aarch64=--arch arm64
+endef
+
+define $(package)_extract_cmds
+  echo $($(package)_sha256_hash) $($(1)_source_dir)/$($(package)_file_name) | sha256sum -c &&\
+  unzip -q $($(1)_source_dir)/$($(package)_file_name)
+endef
+
+define $(package)_preprocess_cmds
+  cd android-ndk-r$($(package)_version) && \
+  patch -p1 < $($(package)_patch_dir)/api_definition.patch
+endef
+
+define $(package)_stage_cmds
+  android-ndk-r$($(package)_version)/build/tools/make_standalone_toolchain.py --api 21 \
+    --install-dir $(build_prefix) --stl=libc++ $($(package)_config_opts) &&\
+  mv $(build_prefix) $($(package)_staging_dir)/$(host_prefix)
+endef
+
diff --git a/contrib/depends/packages/boost.mk b/contrib/depends/packages/boost.mk
new file mode 100644
index 00000000..d81bca97
--- /dev/null
+++ b/contrib/depends/packages/boost.mk
@@ -0,0 +1,47 @@
+package=boost                                                                                                                                                                                                                      
+$(package)_version=1_64_0
+$(package)_download_path=https://downloads.sourceforge.net/project/boost/boost/1.64.0/
+$(package)_file_name=$(package)_$($(package)_version).tar.bz2
+$(package)_sha256_hash=7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332
+$(package)_patches=fix_aroptions.patch fix_arm_arch.patch
+
+define $(package)_set_vars
+$(package)_config_opts_release=variant=release
+$(package)_config_opts_debug=variant=debug
+$(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam
+$(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1
+$(package)_config_opts_linux=threadapi=pthread runtime-link=shared
+$(package)_config_opts_android=threadapi=pthread runtime-link=static target-os=android
+$(package)_config_opts_darwin=--toolset=darwin runtime-link=shared
+$(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static
+$(package)_config_opts_x86_64_mingw32=address-model=64
+$(package)_config_opts_i686_mingw32=address-model=32
+$(package)_config_opts_i686_linux=address-model=32 architecture=x86
+$(package)_toolset_$(host_os)=gcc
+$(package)_archiver_$(host_os)=$($(package)_ar)
+$(package)_toolset_darwin=darwin
+$(package)_archiver_darwin=$($(package)_libtool)
+$(package)_config_libraries_$(host_os)="chrono,filesystem,program_options,system,thread,test,date_time,regex,serialization"
+$(package)_config_libraries_mingw32="chrono,filesystem,program_options,system,thread,test,date_time,regex,serialization,locale"
+$(package)_cxxflags=-std=c++11
+$(package)_cxxflags_linux=-fPIC
+$(package)_cxxflags_freebsd=-fPIC
+endef
+
+define $(package)_preprocess_cmds
+  patch -p1 < $($(package)_patch_dir)/fix_aroptions.patch &&\
+  patch -p1 < $($(package)_patch_dir)/fix_arm_arch.patch &&\
+  echo "using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\"$($(package)_cxxflags) $($(package)_cppflags)\" <linkflags>\"$($(package)_ldflags)\" <archiver>\"$(boost_archiver_$(host_os))\" <arflags>\"$($(package)_arflags)\" <striper>\"$(host_STRIP)\"  <ranlib>\"$(host_RANLIB)\" <rc>\"$(host_WINDRES)\" : ;" > user-config.jam
+endef
+
+define $(package)_config_cmds
+  ./bootstrap.sh --without-icu --with-libraries=$(boost_config_libraries_$(host_os))
+endef
+
+define $(package)_build_cmds
+  ./b2 -d2 -j2 -d1 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) stage
+endef
+
+define $(package)_stage_cmds
+  ./b2 -d0 -j4 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) install
+endef
diff --git a/contrib/depends/packages/darwin_sdk.mk b/contrib/depends/packages/darwin_sdk.mk
new file mode 100644
index 00000000..3355dcf3
--- /dev/null
+++ b/contrib/depends/packages/darwin_sdk.mk
@@ -0,0 +1,10 @@
+package=darwin_sdk
+$(package)_version=12.2
+$(package)_download_path=https://bitcoincore.org/depends-sources/sdks
+$(package)_file_name=Xcode-12.2-12B45b-extracted-SDK-with-libcxx-headers.tar.gz
+$(package)_sha256_hash=df75d30ecafc429e905134333aeae56ac65fac67cb4182622398fd717df77619
+
+define $(package)_stage_cmds
+  mkdir -p $($(package)_staging_dir)/$(host_prefix)/native/SDK &&\
+  mv * $($(package)_staging_dir)/$(host_prefix)/native/SDK
+endef
diff --git a/contrib/depends/packages/eudev.mk b/contrib/depends/packages/eudev.mk
new file mode 100644
index 00000000..a77b7f2f
--- /dev/null
+++ b/contrib/depends/packages/eudev.mk
@@ -0,0 +1,29 @@
+package=eudev
+$(package)_version=3.2.14
+$(package)_download_path=https://github.com/eudev-project/eudev/releases/download/v$($(package)_version)/
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=8da4319102f24abbf7fff5ce9c416af848df163b29590e666d334cc1927f006f
+
+define $(package)_set_vars
+  $(package)_config_opts=--disable-gudev --disable-introspection --disable-hwdb --disable-manpages --disable-shared
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmd
+  $(MAKE)
+endef
+
+define $(package)_preprocess_cmds
+  cd $($(package)_build_subdir); autoreconf -f -i
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install
+endef
+
+define $(package)_postprocess_cmds
+  rm lib/*.la
+endef
diff --git a/contrib/depends/packages/expat.mk b/contrib/depends/packages/expat.mk
new file mode 100644
index 00000000..59024517
--- /dev/null
+++ b/contrib/depends/packages/expat.mk
@@ -0,0 +1,28 @@
+package=expat
+$(package)_version=2.6.0
+$(package)_download_path=https://github.com/libexpat/libexpat/releases/download/R_$(subst .,_,$($(package)_version))/
+$(package)_file_name=$(package)-$($(package)_version).tar.bz2
+$(package)_sha256_hash=ff60e6a6b6ce570ae012dc7b73169c7fdf4b6bf08c12ed0ec6f55736b78d85ba
+
+define $(package)_set_vars
+$(package)_config_opts=--disable-shared --without-docbook --without-tests --without-examples
+$(package)_config_opts+=--enable-option-checking --without-xmlwf --with-pic
+$(package)_config_opts+=--prefix=$(host_prefix)
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf)
+endef
+
+define $(package)_build_cmds
+  $(MAKE)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install
+endef
+
+define $(package)_postprocess_cmds
+  rm -rf share lib/cmake lib/*.la
+endef
+
diff --git a/contrib/depends/packages/freebsd_base.mk b/contrib/depends/packages/freebsd_base.mk
new file mode 100644
index 00000000..ad9975f8
--- /dev/null
+++ b/contrib/depends/packages/freebsd_base.mk
@@ -0,0 +1,23 @@
+package=freebsd_base
+$(package)_version=11.3
+$(package)_download_path=https://download.freebsd.org/ftp/releases/amd64/$($(package)_version)-RELEASE/
+$(package)_download_file=base.txz
+$(package)_file_name=freebsd-base-$($(package)_version).txz
+$(package)_sha256_hash=4599023ac136325b86f2fddeec64c1624daa83657e40b00b2ef944c81463a4ff
+
+define $(package)_extract_cmds
+  echo $($(package)_sha256_hash) $($(1)_source_dir)/$($(package)_file_name) | sha256sum -c &&\
+  tar xf $($(1)_source_dir)/$($(package)_file_name) ./lib/ ./usr/lib/ ./usr/include/
+endef
+
+define $(package)_build_cmds
+  mkdir bin &&\
+  echo "#!/bin/sh\n\nexec /usr/bin/clang-8 -target x86_64-unknown-freebsd$($(package)_version) --sysroot=$(host_prefix)/native $$$$""@" > bin/clang-8 &&\
+  echo "#!/bin/sh\n\nexec /usr/bin/clang++-8 -target x86_64-unknown-freebsd$($(package)_version) --sysroot=$(host_prefix)/native $$$$""@" > bin/clang++-8 &&\
+  chmod 755 bin/*
+endef
+
+define $(package)_stage_cmds
+  mkdir $($(package)_staging_dir)/$(host_prefix)/native &&\
+  mv bin lib usr $($(package)_staging_dir)/$(host_prefix)/native
+endef
diff --git a/contrib/depends/packages/gtest.mk b/contrib/depends/packages/gtest.mk
new file mode 100644
index 00000000..1208d7c0
--- /dev/null
+++ b/contrib/depends/packages/gtest.mk
@@ -0,0 +1,39 @@
+package=gtest
+$(package)_version=1.8.1
+$(package)_download_path=https://github.com/google/googletest/archive/
+$(package)_download_file=release-$($(package)_version).tar.gz
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=9bf1fe5182a604b4135edc1a425ae356c9ad15e9b23f9f12a02e80184c3a249c
+$(package)_cxxflags=-std=c++11
+$(package)_cxxflags_linux=-fPIC
+
+define $(package)_config_cmds
+  cd googletest && \
+    CC="$(host_prefix)/native/bin/$($(package)_cc)" \
+    CXX="$(host_prefix)/native/bin/$($(package)_cxx)" \
+    AR="$(host_prefix)/native/bin/$($(package)_ar)" \
+    RANLIB="$(host_prefix)/native/bin/$($(package)_ranlib)" \
+    LIBTOOL="$(host_prefix)/native/bin/$($(package)_libtool)" \
+    CXXFLAGS="$($(package)_cxxflags)" \
+    CCFLAGS="$($(package)_ccflags)" \
+    CPPFLAGS="$($(package)_cppflags)" \
+    CFLAGS="$($(package)_cflags) $($(package)_cppflags)" \
+    LDLAGS="$($(package)_ldflags)" \
+  cmake -DCMAKE_INSTALL_PREFIX=$(build_prefix) \
+    -DTOOLCHAIN_PREFIX=$(host_toolchain) \
+    -DCMAKE_AR="$(host_prefix)/native/bin/$($(package)_ar)" \
+    -DCMAKE_RANLIB="$(host_prefix)/native/bin/$($(package)_ranlib)" \
+    -DCMAKE_CXX_FLAGS_DEBUG=ON
+endef
+# -DCMAKE_TOOLCHAIN_FILE=$(HOST)/share/toolchain.cmake
+
+define $(package)_build_cmds
+  cd googletest && CC="$(host_prefix)/native/bin/$($(package)_cc)" $(MAKE)
+endef
+
+define $(package)_stage_cmds
+  mkdir $($(package)_staging_prefix_dir)/lib $($(package)_staging_prefix_dir)/include &&\
+  cp googletest/libgtest.a $($(package)_staging_prefix_dir)/lib/ &&\
+  cp googletest/libgtest_main.a $($(package)_staging_prefix_dir)/lib/ &&\
+  cp -a googletest/include/* $($(package)_staging_prefix_dir)/include/
+endef
diff --git a/contrib/depends/packages/hidapi.mk b/contrib/depends/packages/hidapi.mk
new file mode 100644
index 00000000..64935a36
--- /dev/null
+++ b/contrib/depends/packages/hidapi.mk
@@ -0,0 +1,38 @@
+package=hidapi
+$(package)_version=0.13.1
+$(package)_download_path=https://github.com/libusb/hidapi/archive/refs/tags
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=476a2c9a4dc7d1fc97dd223b84338dbea3809a84caea2dcd887d9778725490e3
+$(package)_linux_dependencies=libusb eudev
+$(package)_patches=missing_win_include.patch
+
+define $(package)_set_vars
+$(package)_config_opts=--enable-static --disable-shared
+$(package)_config_opts+=--prefix=$(host_prefix)
+$(package)_config_opts_linux+=libudev_LIBS="-L$(host_prefix)/lib -ludev"
+$(package)_config_opts_linux+=libudev_CFLAGS=-I$(host_prefix)/include
+$(package)_config_opts_linux+=libusb_LIBS="-L$(host_prefix)/lib -lusb-1.0"
+$(package)_config_opts_linux+=libusb_CFLAGS=-I$(host_prefix)/include/libusb-1.0
+$(package)_config_opts_linux+=--with-pic
+endef
+
+define $(package)_preprocess_cmds
+  patch -p1 < $($(package)_patch_dir)/missing_win_include.patch && ./bootstrap
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmds
+  $(MAKE)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install
+endef
+
+define $(package)_postprocess_cmds
+  rm lib/*.la
+endef
+
diff --git a/contrib/depends/packages/libusb.mk b/contrib/depends/packages/libusb.mk
new file mode 100644
index 00000000..53c91134
--- /dev/null
+++ b/contrib/depends/packages/libusb.mk
@@ -0,0 +1,34 @@
+package=libusb
+$(package)_version=1.0.27
+$(package)_download_path=https://github.com/libusb/libusb/releases/download/v$($(package)_version)
+$(package)_file_name=$(package)-$($(package)_version).tar.bz2
+$(package)_sha256_hash=ffaa41d741a8a3bee244ac8e54a72ea05bf2879663c098c82fc5757853441575
+
+define $(package)_preprocess_cmds
+  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub . && \
+  autoreconf -i
+endef
+
+define $(package)_set_vars
+  $(package)_config_opts=--disable-shared
+  $(package)_config_opts_linux=--with-pic --disable-udev
+  $(package)_config_opts_mingw32=--disable-udev
+  $(package)_config_opts_darwin=--disable-udev
+  $(package)_config_opts_freebsd=--with-pic --disable-udev
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmd
+  $(MAKE)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install
+endef
+
+define $(package)_postprocess_cmds
+  cp -f lib/libusb-1.0.a lib/libusb.a
+endef
diff --git a/contrib/depends/packages/native_cctools.mk b/contrib/depends/packages/native_cctools.mk
new file mode 100644
index 00000000..8c1ea4c6
--- /dev/null
+++ b/contrib/depends/packages/native_cctools.mk
@@ -0,0 +1,33 @@
+package=native_cctools
+$(package)_version=04663295d0425abfac90a42440a7ec02d7155fea
+$(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive
+$(package)_download_file=$($(package)_version).tar.gz
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=70a7189418c2086d20c299c5d59250cf5940782c778892ccc899c66516ed240e
+$(package)_build_subdir=cctools
+$(package)_dependencies=native_clang native_libtapi
+$(package)_patches=no-build-date.patch
+
+define $(package)_set_vars
+$(package)_config_opts=--target=$(host) --disable-lto-support --with-libtapi=$(host_prefix)
+$(package)_ldflags+=-Wl,-rpath=\\$$$$$$$$\$$$$$$$$ORIGIN/../lib
+$(package)_cc=$(host_prefix)/native/bin/clang
+$(package)_cxx=$(host_prefix)/native/bin/clang++
+endef
+
+define $(package)_preprocess_cmds
+  patch -p1 < $($(package)_patch_dir)/no-build-date.patch
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf)
+endef
+
+define $(package)_build_cmds
+  $(MAKE)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \
+  cp $($(package)_extract_dir)/cctools/misc/install_name_tool $($(package)_staging_prefix_dir)/bin/
+endef
diff --git a/contrib/depends/packages/native_clang.mk b/contrib/depends/packages/native_clang.mk
new file mode 100644
index 00000000..4ff21ada
--- /dev/null
+++ b/contrib/depends/packages/native_clang.mk
@@ -0,0 +1,28 @@
+package=native_clang
+$(package)_version=9.0.0
+$(package)_download_path=https://releases.llvm.org/$($(package)_version)
+$(package)_download_file=clang+llvm-$($(package)_version)-x86_64-linux-gnu-ubuntu-18.04.tar.xz
+$(package)_file_name=clang-llvm-$($(package)_version)-x86_64-linux-gnu-ubuntu-18.04.tar.xz
+$(package)_sha256_hash=a23b082b30c128c9831dbdd96edad26b43f56624d0ad0ea9edec506f5385038d
+
+define $(package)_extract_cmds
+  echo $($(package)_sha256_hash) $($(package)_source) | sha256sum -c &&\
+  mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \
+  tar --strip-components=1 -C toolchain -xf $($(package)_source) && \
+  rm -f toolchain/lib/libc++abi.so* && \
+  echo "#!/bin/sh" > toolchain/bin/$(host)-dsymutil && \
+  echo "exit 0" >> toolchain/bin/$(host)-dsymutil && \
+  chmod +x toolchain/bin/$(host)-dsymutil
+endef
+
+define $(package)_stage_cmds
+  cd $($(package)_extract_dir)/toolchain && \
+  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_version)/include && \
+  mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \
+  cp bin/clang $($(package)_staging_prefix_dir)/bin/ &&\
+  cp -P bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\
+  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \
+  cp -rf lib/clang/$($(package)_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_version)/include/ && \
+  cp bin/dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \
+  if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi
+endef
diff --git a/contrib/depends/packages/native_libtapi.mk b/contrib/depends/packages/native_libtapi.mk
new file mode 100644
index 00000000..c5625501
--- /dev/null
+++ b/contrib/depends/packages/native_libtapi.mk
@@ -0,0 +1,33 @@
+package=native_libtapi
+$(package)_version=664b8414f89612f2dfd35a9b679c345aa5389026
+$(package)_download_path=https://github.com/tpoechtrager/apple-libtapi/archive
+$(package)_download_file=$($(package)_version).tar.gz
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=62e419c12d1c9fad67cc1cd523132bc00db050998337c734c15bc8d73cc02b61
+$(package)_build_subdir=build
+$(package)_dependencies=native_clang
+$(package)_patches=no_embed_git_rev.patch
+
+define $(package)_preprocess_cmds
+  patch -p1 -i $($(package)_patch_dir)/no_embed_git_rev.patch
+endef
+
+define $(package)_config_cmds
+  echo -n $(build_prefix) > INSTALLPREFIX; \
+  CC=$(host_prefix)/native/bin/clang CXX=$(host_prefix)/native/bin/clang++ \
+  cmake -DCMAKE_INSTALL_PREFIX=$(build_prefix) \
+    -DLLVM_INCLUDE_TESTS=OFF \
+	-DCMAKE_BUILD_TYPE=RELEASE \
+	-DTAPI_REPOSITORY_STRING="1100.0.11" \
+	-DTAPI_FULL_VERSION="11.0.0" \
+	-DCMAKE_CXX_FLAGS="-I $($(package)_extract_dir)/src/llvm/projects/clang/include -I $($(package)_build_dir)/projects/clang/include" \
+	$($(package)_extract_dir)/src/llvm
+endef
+
+define $(package)_build_cmds
+  $(MAKE) clangBasic && $(MAKE) libtapi
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-libtapi install-tapi-headers
+endef
diff --git a/contrib/depends/packages/native_protobuf.mk b/contrib/depends/packages/native_protobuf.mk
new file mode 100644
index 00000000..8d7649b6
--- /dev/null
+++ b/contrib/depends/packages/native_protobuf.mk
@@ -0,0 +1,28 @@
+package=native_protobuf
+$(package)_version=21.12
+$(package)_version_protobuf_cpp=3.21.12
+$(package)_download_path=https://github.com/protocolbuffers/protobuf/releases/download/v$($(package)_version)/
+$(package)_file_name=protobuf-cpp-$($(package)_version_protobuf_cpp).tar.gz
+$(package)_sha256_hash=4eab9b524aa5913c6fffb20b2a8abf5ef7f95a80bc0701f3a6dbb4c607f73460
+$(package)_cxxflags=-std=c++11
+
+define $(package)_set_vars
+  $(package)_config_opts=--disable-shared --prefix=$(build_prefix)
+  $(package)_config_opts_linux=--with-pic
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) -C src protoc
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-binPROGRAMS install-nobase_dist_protoDATA
+endef
+
+define $(package)_postprocess_cmds
+  rm -rf lib/
+endef
diff --git a/contrib/depends/packages/ncurses.mk b/contrib/depends/packages/ncurses.mk
new file mode 100644
index 00000000..fb1d92c6
--- /dev/null
+++ b/contrib/depends/packages/ncurses.mk
@@ -0,0 +1,63 @@
+package=ncurses
+$(package)_version=6.1
+$(package)_download_path=https://ftp.gnu.org/gnu/ncurses
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=aa057eeeb4a14d470101eff4597d5833dcef5965331be3528c08d99cebaa0d17
+$(package)_patches=fallback.c
+
+define $(package)_set_vars
+  $(package)_build_opts=CC="$($(package)_cc)"
+  $(package)_config_env=cf_cv_ar_flags=""
+  $(package)_config_opts=--prefix=$(host_prefix)
+  $(package)_config_opts+=--disable-shared
+  $(package)_config_opts+=--with-build-cc=gcc
+  $(package)_config_opts+=--without-debug
+  $(package)_config_opts+=--without-ada
+  $(package)_config_opts+=--without-cxx-binding
+  $(package)_config_opts+=--without-cxx
+  $(package)_config_opts+=--without-ticlib
+  $(package)_config_opts+=--without-tic
+  $(package)_config_opts+=--without-progs
+  $(package)_config_opts+=--without-tests
+  $(package)_config_opts+=--without-tack
+  $(package)_config_opts+=--without-manpages
+  $(package)_config_opts+=--with-termlib=tinfo
+  $(package)_config_opts+=--disable-tic-depends
+  $(package)_config_opts+=--disable-big-strings
+  $(package)_config_opts+=--disable-ext-colors
+  $(package)_config_opts+=--enable-pc-files
+  $(package)_config_opts+=--host=$(HOST)
+  $(pacakge)_config_opts+=--without-shared
+  $(pacakge)_config_opts+=--without-pthread
+  $(pacakge)_config_opts+=--disable-rpath
+  $(pacakge)_config_opts+=--disable-colorfgbg
+  $(pacakge)_config_opts+=--disable-ext-mouse
+  $(pacakge)_config_opts+=--disable-symlinks
+  $(pacakge)_config_opts+=--enable-warnings
+  $(pacakge)_config_opts+=--enable-assertions
+  $(package)_config_opts+=--with-default-terminfo-dir=/etc/_terminfo_
+  $(package)_config_opts+=--with-terminfo-dirs=/etc/_terminfo_
+  $(pacakge)_config_opts+=--enable-database
+  $(pacakge)_config_opts+=--enable-sp-funcs
+  $(pacakge)_config_opts+=--disable-term-driver
+  $(pacakge)_config_opts+=--enable-interop
+  $(pacakge)_config_opts+=--enable-widec
+  $(package)_build_opts=CFLAGS="$($(package)_cflags) $($(package)_cppflags) -fPIC"
+endef
+
+define $(package)_preprocess_cmds
+  cp $($(package)_patch_dir)/fallback.c ncurses
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) $($(package)_build_opts) V=1
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) install.libs DESTDIR=$($(package)_staging_dir)
+endef
+
diff --git a/contrib/depends/packages/openssl.mk b/contrib/depends/packages/openssl.mk
new file mode 100644
index 00000000..8c9727fa
--- /dev/null
+++ b/contrib/depends/packages/openssl.mk
@@ -0,0 +1,72 @@
+package=openssl
+$(package)_version=3.0.13
+$(package)_download_path=https://www.openssl.org/source
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=88525753f79d3bec27d2fa7c66aa0b92b3aa9498dafd93d7cfa4b3780cdae313
+
+# The bundled ranlib in Android NDK 18b inserts timestamps by default.
+# To prevent reproducibility issues, we must enable [D]eterministic mode.
+
+define $(package)_set_vars
+$(package)_config_env=AR="$($(package)_ar)" RANLIB="$($(package)_ranlib)" CC="$($(package)_cc)"
+$(package)_config_env_android=ANDROID_NDK_ROOT="$(host_prefix)/native" PATH="$(host_prefix)/native/bin" CC=clang AR=ar RANLIB="ranlib -D"
+$(package)_build_env_android=ANDROID_NDK_ROOT="$(host_prefix)/native"
+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl --libdir=$(host_prefix)/lib
+$(package)_config_opts+=no-capieng
+$(package)_config_opts+=no-dso
+$(package)_config_opts+=no-dtls1
+$(package)_config_opts+=no-ec_nistp_64_gcc_128
+$(package)_config_opts+=no-gost
+$(package)_config_opts+=no-md2
+$(package)_config_opts+=no-rc5
+$(package)_config_opts+=no-rdrand
+$(package)_config_opts+=no-rfc3779
+$(package)_config_opts+=no-sctp
+$(package)_config_opts+=no-shared
+$(package)_config_opts+=no-ssl-trace
+$(package)_config_opts+=no-ssl3
+$(package)_config_opts+=no-tests
+$(package)_config_opts+=no-unit-test
+$(package)_config_opts+=no-weak-ssl-ciphers
+$(package)_config_opts+=no-zlib
+$(package)_config_opts+=no-zlib-dynamic
+$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)
+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack
+$(package)_config_opts_freebsd=-fPIC -Wa,--noexecstack
+$(package)_config_opts_x86_64_linux=linux-x86_64
+$(package)_config_opts_i686_linux=linux-generic32
+$(package)_config_opts_arm_linux=linux-generic32
+$(package)_config_opts_aarch64_linux=linux-generic64
+$(package)_config_opts_arm_android=--static android-arm
+$(package)_config_opts_aarch64_android=--static android-arm64
+$(package)_config_opts_aarch64_darwin=darwin64-arm64-cc
+$(package)_config_opts_riscv64_linux=linux-generic64
+$(package)_config_opts_loongarch64_linux=linux-generic64
+$(package)_config_opts_mipsel_linux=linux-generic32
+$(package)_config_opts_mips_linux=linux-generic32
+$(package)_config_opts_powerpc_linux=linux-generic32
+$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc
+$(package)_config_opts_x86_64_mingw32=mingw64
+$(package)_config_opts_i686_mingw32=mingw
+$(package)_config_opts_x86_64_freebsd=BSD-x86_64
+endef
+
+define $(package)_preprocess_cmds
+  sed -i.old 's|crypto ssl apps util tools fuzz providers doc|crypto ssl util tools providers|' build.info
+endef
+
+define $(package)_config_cmds
+  ./Configure $($(package)_config_opts) ARFLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) build_libs
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install_sw
+endef
+
+define $(package)_postprocess_cmds
+  rm -rf share bin etc
+endef
diff --git a/contrib/depends/packages/packages.mk b/contrib/depends/packages/packages.mk
new file mode 100644
index 00000000..14561964
--- /dev/null
+++ b/contrib/depends/packages/packages.mk
@@ -0,0 +1,28 @@
+packages:=boost openssl zeromq expat unbound sodium
+
+hardware_packages := hidapi protobuf libusb
+hardware_native_packages := native_protobuf
+
+android_native_packages = android_ndk $(hardware_native_packages)
+android_packages = ncurses readline protobuf
+
+darwin_native_packages = $(hardware_native_packages)
+darwin_packages = ncurses readline $(hardware_packages)
+
+# not really native...
+freebsd_native_packages = freebsd_base $(hardware_native_packages)
+freebsd_packages = ncurses readline protobuf libusb
+
+linux_packages = eudev ncurses readline $(hardware_packages)
+linux_native_packages = $(hardware_native_packages)
+
+ifeq ($(build_tests),ON)
+packages += gtest
+endif
+
+mingw32_packages = $(hardware_packages)
+mingw32_native_packages = $(hardware_native_packages)
+
+ifneq ($(build_os),darwin)
+darwin_native_packages += darwin_sdk native_clang native_cctools native_libtapi
+endif
diff --git a/contrib/depends/packages/protobuf.mk b/contrib/depends/packages/protobuf.mk
new file mode 100644
index 00000000..9702506d
--- /dev/null
+++ b/contrib/depends/packages/protobuf.mk
@@ -0,0 +1,27 @@
+package=protobuf
+$(package)_version=$(native_$(package)_version)
+$(package)_version_protobuf_cpp=$(native_$(package)_version_protobuf_cpp)
+$(package)_download_path=$(native_$(package)_download_path)
+$(package)_file_name=$(native_$(package)_file_name)
+$(package)_sha256_hash=$(native_$(package)_sha256_hash)
+$(package)_dependencies=native_$(package)
+$(package)_cxxflags=-std=c++11
+
+define $(package)_set_vars
+  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc
+  $(package)_config_opts_linux=--with-pic
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) -C src libprotobuf.la
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-nobase_includeHEADERS &&\
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA &&\
+  cp src/.libs/libprotobuf.a $($(package)_staging_prefix_dir)/lib/
+endef
diff --git a/contrib/depends/packages/readline.mk b/contrib/depends/packages/readline.mk
new file mode 100644
index 00000000..957b6454
--- /dev/null
+++ b/contrib/depends/packages/readline.mk
@@ -0,0 +1,29 @@
+package=readline
+$(package)_version=8.0
+$(package)_download_path=https://ftp.gnu.org/gnu/readline
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=e339f51971478d369f8a053a330a190781acb9864cf4c541060f12078948e461
+$(package)_dependencies=ncurses
+
+define $(package)_set_vars
+  $(package)_build_opts=CC="$($(package)_cc)"
+  $(package)_config_opts+=--prefix=$(host_prefix)
+  $(package)_config_opts+=--exec-prefix=$(host_prefix)
+  $(package)_config_opts+=--host=$(HOST)
+  $(package)_config_opts+=--disable-shared --with-curses
+  $(package)_config_opts_release=--disable-debug-mode
+  $(package)_build_opts=CFLAGS="$($(package)_cflags) $($(package)_cppflags) -fPIC"
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) $($(package)_build_opts)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) install DESTDIR=$($(package)_staging_dir) prefix=$(host_prefix) exec-prefix=$(host_prefix)
+endef
+
diff --git a/contrib/depends/packages/sodium.mk b/contrib/depends/packages/sodium.mk
new file mode 100644
index 00000000..87b34599
--- /dev/null
+++ b/contrib/depends/packages/sodium.mk
@@ -0,0 +1,34 @@
+package=sodium
+$(package)_version=1.0.18
+$(package)_download_path=https://download.libsodium.org/libsodium/releases/
+$(package)_file_name=libsodium-$($(package)_version).tar.gz
+$(package)_sha256_hash=6f504490b342a4f8a4c4a02fc9b866cbef8622d5df4e5452b46be121e46636c1
+$(package)_patches=disable-glibc-getrandom-getentropy.patch fix-whitespace.patch
+
+define $(package)_set_vars
+$(package)_config_opts=--enable-static --disable-shared
+$(package)_config_opts+=--prefix=$(host_prefix)
+endef
+
+define $(package)_preprocess_cmds
+  patch -p1 < $($(package)_patch_dir)/disable-glibc-getrandom-getentropy.patch &&\
+  autoconf &&\
+  patch -p1 < $($(package)_patch_dir)/fix-whitespace.patch
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmds
+  $(MAKE)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install
+endef
+
+define $(package)_postprocess_cmds
+  rm lib/*.la
+endef
+
diff --git a/contrib/depends/packages/unbound.mk b/contrib/depends/packages/unbound.mk
new file mode 100644
index 00000000..254636bc
--- /dev/null
+++ b/contrib/depends/packages/unbound.mk
@@ -0,0 +1,36 @@
+package=unbound
+$(package)_version=1.19.1
+$(package)_download_path=https://www.nlnetlabs.nl/downloads/$(package)/
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=bc1d576f3dd846a0739adc41ffaa702404c6767d2b6082deb9f2f97cbb24a3a9
+$(package)_dependencies=openssl expat
+$(package)_patches=disable-glibc-reallocarray.patch
+
+
+define $(package)_set_vars
+  $(package)_config_opts=--disable-shared --enable-static --without-pyunbound --prefix=$(host_prefix)
+  $(package)_config_opts+=--with-libexpat=$(host_prefix) --with-ssl=$(host_prefix) --with-libevent=no
+  $(package)_config_opts+=--without-pythonmodule --disable-flto --with-pthreads --with-libunbound-only
+  $(package)_config_opts_linux=--with-pic
+  $(package)_config_opts_w64=--enable-static-exe --sysconfdir=/etc --prefix=$(host_prefix) --target=$(host_prefix)
+  $(package)_config_opts_x86_64_darwin=ac_cv_func_SHA384_Init=yes
+  $(package)_build_opts_mingw32=LDFLAGS="$($(package)_ldflags) -lpthread"
+  $(package)_cflags_mingw32+="-D_WIN32_WINNT=0x600"
+endef
+
+define $(package)_preprocess_cmds
+  patch -p1 < $($(package)_patch_dir)/disable-glibc-reallocarray.patch &&\
+  autoconf
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) ac_cv_func_getentropy=no AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) $($(package)_build_opts)
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install
+endef
diff --git a/contrib/depends/packages/zeromq.mk b/contrib/depends/packages/zeromq.mk
new file mode 100644
index 00000000..669d06d8
--- /dev/null
+++ b/contrib/depends/packages/zeromq.mk
@@ -0,0 +1,30 @@
+package=zeromq
+$(package)_version=4.3.5
+$(package)_download_path=https://github.com/zeromq/libzmq/releases/download/v$($(package)_version)/
+$(package)_file_name=$(package)-$($(package)_version).tar.gz
+$(package)_sha256_hash=6653ef5910f17954861fe72332e68b03ca6e4d9c7160eb3a8de5a5a913bfab43
+
+define $(package)_set_vars
+  $(package)_config_opts=--without-documentation --disable-shared --without-libsodium --disable-curve
+  $(package)_config_opts_linux=--with-pic
+  $(package)_config_opts_freebsd=--with-pic
+  $(package)_cxxflags=-std=c++11
+endef
+
+define $(package)_config_cmds
+  $($(package)_autoconf) AR_FLAGS=$($(package)_arflags)
+endef
+
+define $(package)_build_cmds
+  $(MAKE) src/libzmq.la
+endef
+
+define $(package)_stage_cmds
+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-includeHEADERS install-pkgconfigDATA
+endef
+
+define $(package)_postprocess_cmds
+  rm -rf bin share &&\
+  rm lib/*.la
+endef
+
diff --git a/contrib/depends/patches/android_ndk/api_definition.patch b/contrib/depends/patches/android_ndk/api_definition.patch
new file mode 100644
index 00000000..82ef9bad
--- /dev/null
+++ b/contrib/depends/patches/android_ndk/api_definition.patch
@@ -0,0 +1,15 @@
+CMake 3.10.2 compatibility, see:
+https://github.com/Kitware/CMake/blob/c1e087a9d3af74299d7681c9f9de59e5977a1539/Modules/Platform/Android-Determine.cmake#L105
+
+diff --git a/build/tools/make_standalone_toolchain.py b/build/tools/make_standalone_toolchain.py
+index b8172b2..1984595 100755
+--- a/build/tools/make_standalone_toolchain.py
++++ b/build/tools/make_standalone_toolchain.py
+@@ -208,6 +208,7 @@ def make_clang_scripts(install_dir, triple, api, windows):
+ 
+     target = '-'.join([arch, 'none', os_name, env])
+     common_flags = '-target {}{}'.format(target, api)
++    common_flags += ' -D__ANDROID_API__={}'.format(api)
+ 
+     # We only need mstackrealign to fix issues on 32-bit x86 pre-24. After 24,
+     # this consumes an extra register unnecessarily, which can cause issues for
diff --git a/contrib/depends/patches/boost/fix_arm_arch.patch b/contrib/depends/patches/boost/fix_arm_arch.patch
new file mode 100644
index 00000000..3cf6b6f4
--- /dev/null
+++ b/contrib/depends/patches/boost/fix_arm_arch.patch
@@ -0,0 +1,11 @@
+--- boost_1_64_0/tools/build/src/tools/darwin.jam.O	2017-04-17 03:22:26.000000000 +0100
++++ boost_1_64_0/tools/build/src/tools/darwin.jam	2022-05-04 17:26:29.984464447 +0000
+@@ -505,7 +505,7 @@
+             if $(instruction-set) {
+                 options = -arch$(_)$(instruction-set) ;
+             } else {
+-                options = -arch arm ;
++#                options = -arch arm ;
+             }
+         }
+     }
diff --git a/contrib/depends/patches/boost/fix_aroptions.patch b/contrib/depends/patches/boost/fix_aroptions.patch
new file mode 100644
index 00000000..5b2ec100
--- /dev/null
+++ b/contrib/depends/patches/boost/fix_aroptions.patch
@@ -0,0 +1,28 @@
+--- boost_1_64_0/tools/build/src/tools/gcc.jam.O	2017-04-17 03:22:26.000000000 +0100
++++ boost_1_64_0/tools/build/src/tools/gcc.jam	2019-11-15 15:46:16.957937137 +0000
+@@ -243,6 +243,8 @@
+     {
+         ECHO notice: using gcc archiver :: $(condition) :: $(archiver[1]) ;
+     }
++    local arflags = [ feature.get-values <arflags> : $(options) ] ;
++    toolset.flags gcc.archive .ARFLAGS $(condition) : $(arflags) ;
+ 
+     # - Ranlib.
+     local ranlib = [ common.get-invocation-command gcc
+@@ -970,6 +972,7 @@
+ # logic in intel-linux, but that is hardly worth the trouble as on Linux, 'ar'
+ # is always available.
+ .AR = ar ;
++.ARFLAGS = rc ;
+ .RANLIB = ranlib ;
+ 
+ toolset.flags gcc.archive AROPTIONS <archiveflags> ;
+@@ -1011,7 +1014,7 @@
+ #
+ actions piecemeal archive
+ {
+-    "$(.AR)" $(AROPTIONS) rc "$(<)" "$(>)"
++    "$(.AR)" $(AROPTIONS) $(.ARFLAGS) "$(<)" "$(>)"
+     "$(.RANLIB)" "$(<)"
+ }
+ 
diff --git a/contrib/depends/patches/hidapi/missing_win_include.patch b/contrib/depends/patches/hidapi/missing_win_include.patch
new file mode 100644
index 00000000..5bbe82de
--- /dev/null
+++ b/contrib/depends/patches/hidapi/missing_win_include.patch
@@ -0,0 +1,21 @@
+From a77b066311da42ed7654e39c0356a3b951b2e296 Mon Sep 17 00:00:00 2001
+From: selsta <selsta@sent.at>
+Date: Wed, 10 Nov 2021 02:28:54 +0100
+Subject: [PATCH] windows: add missing include for mingw32
+
+---
+ windows/hid.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/windows/hid.c b/windows/hid.c
+index 24756a4..6d8394c 100644
+--- a/windows/hid.c
++++ b/windows/hid.c
+@@ -33,6 +33,7 @@ typedef LONG NTSTATUS;
+ #endif
+ 
+ #ifdef __MINGW32__
++#include <devpropdef.h>
+ #include <ntdef.h>
+ #include <winbase.h>
+ #endif
diff --git a/contrib/depends/patches/native_cctools/no-build-date.patch b/contrib/depends/patches/native_cctools/no-build-date.patch
new file mode 100644
index 00000000..8b7d1e1f
--- /dev/null
+++ b/contrib/depends/patches/native_cctools/no-build-date.patch
@@ -0,0 +1,12 @@
+diff --git a/cctools/ld64/src/ld/Options.cpp b/cctools/ld64/src/ld/Options.cpp
+index 3bb8324..033760d 100644
+--- a/cctools/ld64/src/ld/Options.cpp
++++ b/cctools/ld64/src/ld/Options.cpp
+@@ -4279,7 +4279,6 @@ void Options::buildSearchPaths(int argc, const char* argv[])
+ 			fVerbose = true;
+ 			extern const char ldVersionString[];
+ 			fprintf(stderr, "%s", ldVersionString);
+-			fprintf(stderr, "BUILD "  __TIME__ " "  __DATE__"\n");
+ 			fprintf(stderr, "configured to support archs: %s\n", ALL_SUPPORTED_ARCHS);
+ 			 // if only -v specified, exit cleanly
+ 			 if ( argc == 2 ) {
diff --git a/contrib/depends/patches/native_libtapi/no_embed_git_rev.patch b/contrib/depends/patches/native_libtapi/no_embed_git_rev.patch
new file mode 100644
index 00000000..b898ccb4
--- /dev/null
+++ b/contrib/depends/patches/native_libtapi/no_embed_git_rev.patch
@@ -0,0 +1,31 @@
+diff --git a/src/llvm/CMakeLists.txt b/src/llvm/CMakeLists.txt
+index ab92717c8..4ad621ea3 100644
+--- a/src/llvm/CMakeLists.txt
++++ b/src/llvm/CMakeLists.txt
+@@ -752,9 +752,10 @@ set(LLVM_SRPM_USER_BINARY_SPECFILE ${CMAKE_CURRENT_SOURCE_DIR}/llvm.spec.in
+ set(LLVM_SRPM_BINARY_SPECFILE ${CMAKE_CURRENT_BINARY_DIR}/llvm.spec)
+ set(LLVM_SRPM_DIR "${CMAKE_CURRENT_BINARY_DIR}/srpm")
+ 
+-# SVN_REVISION and GIT_COMMIT get set by the call to add_version_info_from_vcs.
+-# DUMMY_VAR contains a version string which we don't care about.
+-add_version_info_from_vcs(DUMMY_VAR)
++# A call to add_version_info_from_vcs() was removed, leaving SVN_REVISION
++# and GIT_COMMIT unset. Accordingly, LLVM_RPM_SPEC_REVISION is left empty.
++# This variable appears to be unused. Since it may be used in a future
++# update of native_libtapi this change serves as a precautionairy measure.
+ if ( SVN_REVISION )
+   set(LLVM_RPM_SPEC_REVISION "r${SVN_REVISION}")
+ elseif ( GIT_COMMIT )
+diff --git a/src/llvm/cmake/modules/GenerateVersionFromCVS.cmake b/src/llvm/cmake/modules/GenerateVersionFromCVS.cmake
+index 6b1c71983..e16326ed6 100644
+--- a/src/llvm/cmake/modules/GenerateVersionFromCVS.cmake
++++ b/src/llvm/cmake/modules/GenerateVersionFromCVS.cmake
+@@ -24,7 +24,7 @@ include(VersionFromVCS)
+ set(ENV{TERM} "dumb")
+ 
+ function(append_info name path)
+-  add_version_info_from_vcs(REVISION ${path})
++  set(REVISION "git-0000000")
+   string(STRIP "${REVISION}" REVISION)
+   file(APPEND "${HEADER_FILE}.txt"
+     "#define ${name} \"${REVISION}\"\n")
diff --git a/contrib/depends/patches/ncurses/fallback.c b/contrib/depends/patches/ncurses/fallback.c
new file mode 100644
index 00000000..fab108c3
--- /dev/null
+++ b/contrib/depends/patches/ncurses/fallback.c
@@ -0,0 +1,6621 @@
+/* This file was generated by tinfo/MKfallback.sh */
+
+/*
+ * DO NOT EDIT THIS FILE BY HAND!
+ */
+
+#include <curses.priv.h>
+
+#include <tic.h>
+
+/* fallback entries for: linux rxvt vt100 xterm xterm-256color screen screen.linux screen.rxvt screen.xterm-new screen.xterm-256color */
+/* linux */
+
+static char linux_alias_data[] = "linux|linux console";
+
+static char linux_s_bel         [] = "\007";
+static char linux_s_cr          [] = "\015";
+static char linux_s_csr         [] = "\033[%i%p1%d;%p2%dr";
+static char linux_s_tbc         [] = "\033[3g";
+static char linux_s_clear       [] = "\033[H\033[J";
+static char linux_s_el          [] = "\033[K";
+static char linux_s_ed          [] = "\033[J";
+static char linux_s_hpa         [] = "\033[%i%p1%dG";
+static char linux_s_cup         [] = "\033[%i%p1%d;%p2%dH";
+static char linux_s_cud1        [] = "\012";
+static char linux_s_home        [] = "\033[H";
+static char linux_s_civis       [] = "\033[?25l\033[?1c";
+static char linux_s_cub1        [] = "\010";
+static char linux_s_cnorm       [] = "\033[?25h\033[?0c";
+static char linux_s_cuf1        [] = "\033[C";
+static char linux_s_cuu1        [] = "\033[A";
+static char linux_s_cvvis       [] = "\033[?25h\033[?8c";
+static char linux_s_dch1        [] = "\033[P";
+static char linux_s_dl1         [] = "\033[M";
+static char linux_s_smacs       [] = "\016";
+static char linux_s_blink       [] = "\033[5m";
+static char linux_s_bold        [] = "\033[1m";
+static char linux_s_dim         [] = "\033[2m";
+static char linux_s_smir        [] = "\033[4h";
+static char linux_s_rev         [] = "\033[7m";
+static char linux_s_smso        [] = "\033[7m";
+static char linux_s_smul        [] = "\033[4m";
+static char linux_s_ech         [] = "\033[%p1%dX";
+static char linux_s_rmacs       [] = "\017";
+static char linux_s_sgr0        [] = "\033[m\017";
+static char linux_s_rmir        [] = "\033[4l";
+static char linux_s_rmso        [] = "\033[27m";
+static char linux_s_rmul        [] = "\033[24m";
+static char linux_s_flash       [] = "\033[?5h$<200/>\033[?5l";
+static char linux_s_ich1        [] = "\033[@";
+static char linux_s_il1         [] = "\033[L";
+static char linux_s_kbs         [] = "\177";
+static char linux_s_kdch1       [] = "\033[3~";
+static char linux_s_kcud1       [] = "\033[B";
+static char linux_s_kf1         [] = "\033[[A";
+static char linux_s_kf10        [] = "\033[21~";
+static char linux_s_kf2         [] = "\033[[B";
+static char linux_s_kf3         [] = "\033[[C";
+static char linux_s_kf4         [] = "\033[[D";
+static char linux_s_kf5         [] = "\033[[E";
+static char linux_s_kf6         [] = "\033[17~";
+static char linux_s_kf7         [] = "\033[18~";
+static char linux_s_kf8         [] = "\033[19~";
+static char linux_s_kf9         [] = "\033[20~";
+static char linux_s_khome       [] = "\033[1~";
+static char linux_s_kich1       [] = "\033[2~";
+static char linux_s_kcub1       [] = "\033[D";
+static char linux_s_knp         [] = "\033[6~";
+static char linux_s_kpp         [] = "\033[5~";
+static char linux_s_kcuf1       [] = "\033[C";
+static char linux_s_kcuu1       [] = "\033[A";
+static char linux_s_nel         [] = "\015\012";
+static char linux_s_dch         [] = "\033[%p1%dP";
+static char linux_s_dl          [] = "\033[%p1%dM";
+static char linux_s_cud         [] = "\033[%p1%dB";
+static char linux_s_ich         [] = "\033[%p1%d@";
+static char linux_s_il          [] = "\033[%p1%dL";
+static char linux_s_cub         [] = "\033[%p1%dD";
+static char linux_s_cuf         [] = "\033[%p1%dC";
+static char linux_s_cuu         [] = "\033[%p1%dA";
+static char linux_s_rs1         [] = "\033c\033]R";
+static char linux_s_rc          [] = "\0338";
+static char linux_s_vpa         [] = "\033[%i%p1%dd";
+static char linux_s_sc          [] = "\0337";
+static char linux_s_ind         [] = "\012";
+static char linux_s_ri          [] = "\033M";
+static char linux_s_sgr         [] = "\033[0;10%?%p1%t;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p5%t;2%;%?%p6%t;1%;m%?%p9%t\016%e\017%;";
+static char linux_s_hts         [] = "\033H";
+static char linux_s_ht          [] = "\011";
+static char linux_s_kb2         [] = "\033[G";
+static char linux_s_acsc        [] = "++,,--..00__``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}c~~";
+static char linux_s_kcbt        [] = "\033[Z";
+static char linux_s_smam        [] = "\033[?7h";
+static char linux_s_rmam        [] = "\033[?7l";
+static char linux_s_enacs       [] = "\033)0";
+static char linux_s_kend        [] = "\033[4~";
+static char linux_s_kspd        [] = "\032";
+static char linux_s_kf11        [] = "\033[23~";
+static char linux_s_kf12        [] = "\033[24~";
+static char linux_s_kf13        [] = "\033[25~";
+static char linux_s_kf14        [] = "\033[26~";
+static char linux_s_kf15        [] = "\033[28~";
+static char linux_s_kf16        [] = "\033[29~";
+static char linux_s_kf17        [] = "\033[31~";
+static char linux_s_kf18        [] = "\033[32~";
+static char linux_s_kf19        [] = "\033[33~";
+static char linux_s_kf20        [] = "\033[34~";
+static char linux_s_el1         [] = "\033[1K";
+static char linux_s_u6          [] = "\033[%i%d;%dR";
+static char linux_s_u7          [] = "\033[6n";
+static char linux_s_u8          [] = "\033[?6c";
+static char linux_s_u9          [] = "\033[c";
+static char linux_s_op          [] = "\033[39;49m";
+static char linux_s_oc          [] = "\033]R";
+static char linux_s_initc       [] = "\033]P%p1%x%p2%{255}%*%{1000}%/%02x%p3%{255}%*%{1000}%/%02x%p4%{255}%*%{1000}%/%02x";
+static char linux_s_kmous       [] = "\033[M";
+static char linux_s_setaf       [] = "\033[3%p1%dm";
+static char linux_s_setab       [] = "\033[4%p1%dm";
+static char linux_s_smpch       [] = "\033[11m";
+static char linux_s_rmpch       [] = "\033[10m";
+
+static char linux_bool_data[] = {
+	/*   0: bw       */	FALSE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	TRUE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	FALSE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	TRUE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	FALSE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	FALSE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	TRUE,
+	/*  28: bce      */	TRUE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	FALSE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 linux_number_data[] = {
+	/*   0: cols     */	ABSENT_NUMERIC,
+	/*   1: it       */	8,
+	/*   2: lines    */	ABSENT_NUMERIC,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	18,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * linux_string_data[] = {
+	/*   0: cbt      */	ABSENT_STRING,
+	/*   1: bel      */	linux_s_bel,
+	/*   2: cr       */	linux_s_cr,
+	/*   3: csr      */	linux_s_csr,
+	/*   4: tbc      */	linux_s_tbc,
+	/*   5: clear    */	linux_s_clear,
+	/*   6: el       */	linux_s_el,
+	/*   7: ed       */	linux_s_ed,
+	/*   8: hpa      */	linux_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	linux_s_cup,
+	/*  11: cud1     */	linux_s_cud1,
+	/*  12: home     */	linux_s_home,
+	/*  13: civis    */	linux_s_civis,
+	/*  14: cub1     */	linux_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	linux_s_cnorm,
+	/*  17: cuf1     */	linux_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	linux_s_cuu1,
+	/*  20: cvvis    */	linux_s_cvvis,
+	/*  21: dch1     */	linux_s_dch1,
+	/*  22: dl1      */	linux_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	linux_s_smacs,
+	/*  26: blink    */	linux_s_blink,
+	/*  27: bold     */	linux_s_bold,
+	/*  28: smcup    */	ABSENT_STRING,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	linux_s_dim,
+	/*  31: smir     */	linux_s_smir,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	linux_s_rev,
+	/*  35: smso     */	linux_s_smso,
+	/*  36: smul     */	linux_s_smul,
+	/*  37: ech      */	linux_s_ech,
+	/*  38: rmacs    */	linux_s_rmacs,
+	/*  39: sgr0     */	linux_s_sgr0,
+	/*  40: rmcup    */	ABSENT_STRING,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	linux_s_rmir,
+	/*  43: rmso     */	linux_s_rmso,
+	/*  44: rmul     */	linux_s_rmul,
+	/*  45: flash    */	linux_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	ABSENT_STRING,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	linux_s_ich1,
+	/*  53: il1      */	linux_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	linux_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	linux_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	linux_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	linux_s_kf1,
+	/*  67: kf10     */	linux_s_kf10,
+	/*  68: kf2      */	linux_s_kf2,
+	/*  69: kf3      */	linux_s_kf3,
+	/*  70: kf4      */	linux_s_kf4,
+	/*  71: kf5      */	linux_s_kf5,
+	/*  72: kf6      */	linux_s_kf6,
+	/*  73: kf7      */	linux_s_kf7,
+	/*  74: kf8      */	linux_s_kf8,
+	/*  75: kf9      */	linux_s_kf9,
+	/*  76: khome    */	linux_s_khome,
+	/*  77: kich1    */	linux_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	linux_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	linux_s_knp,
+	/*  82: kpp      */	linux_s_kpp,
+	/*  83: kcuf1    */	linux_s_kcuf1,
+	/*  84: kind     */	ABSENT_STRING,
+	/*  85: kri      */	ABSENT_STRING,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	linux_s_kcuu1,
+	/*  88: rmkx     */	ABSENT_STRING,
+	/*  89: smkx     */	ABSENT_STRING,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	ABSENT_STRING,
+	/* 102: smm      */	ABSENT_STRING,
+	/* 103: nel      */	linux_s_nel,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	linux_s_dch,
+	/* 106: dl       */	linux_s_dl,
+	/* 107: cud      */	linux_s_cud,
+	/* 108: ich      */	linux_s_ich,
+	/* 109: indn     */	ABSENT_STRING,
+	/* 110: il       */	linux_s_il,
+	/* 111: cub      */	linux_s_cub,
+	/* 112: cuf      */	linux_s_cuf,
+	/* 113: rin      */	ABSENT_STRING,
+	/* 114: cuu      */	linux_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	ABSENT_STRING,
+	/* 119: mc4      */	ABSENT_STRING,
+	/* 120: mc5      */	ABSENT_STRING,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	linux_s_rs1,
+	/* 123: rs2      */	ABSENT_STRING,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	linux_s_rc,
+	/* 127: vpa      */	linux_s_vpa,
+	/* 128: sc       */	linux_s_sc,
+	/* 129: ind      */	linux_s_ind,
+	/* 130: ri       */	linux_s_ri,
+	/* 131: sgr      */	linux_s_sgr,
+	/* 132: hts      */	linux_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	linux_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	linux_s_kb2,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	linux_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	linux_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	linux_s_smam,
+	/* 152: rmam     */	linux_s_rmam,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	linux_s_enacs,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	linux_s_kend,
+	/* 165: kent     */	ABSENT_STRING,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	linux_s_kspd,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	ABSENT_STRING,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	ABSENT_STRING,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	ABSENT_STRING,
+	/* 200: kIC      */	ABSENT_STRING,
+	/* 201: kLFT     */	ABSENT_STRING,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	ABSENT_STRING,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	ABSENT_STRING,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	ABSENT_STRING,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	linux_s_kf11,
+	/* 217: kf12     */	linux_s_kf12,
+	/* 218: kf13     */	linux_s_kf13,
+	/* 219: kf14     */	linux_s_kf14,
+	/* 220: kf15     */	linux_s_kf15,
+	/* 221: kf16     */	linux_s_kf16,
+	/* 222: kf17     */	linux_s_kf17,
+	/* 223: kf18     */	linux_s_kf18,
+	/* 224: kf19     */	linux_s_kf19,
+	/* 225: kf20     */	linux_s_kf20,
+	/* 226: kf21     */	ABSENT_STRING,
+	/* 227: kf22     */	ABSENT_STRING,
+	/* 228: kf23     */	ABSENT_STRING,
+	/* 229: kf24     */	ABSENT_STRING,
+	/* 230: kf25     */	ABSENT_STRING,
+	/* 231: kf26     */	ABSENT_STRING,
+	/* 232: kf27     */	ABSENT_STRING,
+	/* 233: kf28     */	ABSENT_STRING,
+	/* 234: kf29     */	ABSENT_STRING,
+	/* 235: kf30     */	ABSENT_STRING,
+	/* 236: kf31     */	ABSENT_STRING,
+	/* 237: kf32     */	ABSENT_STRING,
+	/* 238: kf33     */	ABSENT_STRING,
+	/* 239: kf34     */	ABSENT_STRING,
+	/* 240: kf35     */	ABSENT_STRING,
+	/* 241: kf36     */	ABSENT_STRING,
+	/* 242: kf37     */	ABSENT_STRING,
+	/* 243: kf38     */	ABSENT_STRING,
+	/* 244: kf39     */	ABSENT_STRING,
+	/* 245: kf40     */	ABSENT_STRING,
+	/* 246: kf41     */	ABSENT_STRING,
+	/* 247: kf42     */	ABSENT_STRING,
+	/* 248: kf43     */	ABSENT_STRING,
+	/* 249: kf44     */	ABSENT_STRING,
+	/* 250: kf45     */	ABSENT_STRING,
+	/* 251: kf46     */	ABSENT_STRING,
+	/* 252: kf47     */	ABSENT_STRING,
+	/* 253: kf48     */	ABSENT_STRING,
+	/* 254: kf49     */	ABSENT_STRING,
+	/* 255: kf50     */	ABSENT_STRING,
+	/* 256: kf51     */	ABSENT_STRING,
+	/* 257: kf52     */	ABSENT_STRING,
+	/* 258: kf53     */	ABSENT_STRING,
+	/* 259: kf54     */	ABSENT_STRING,
+	/* 260: kf55     */	ABSENT_STRING,
+	/* 261: kf56     */	ABSENT_STRING,
+	/* 262: kf57     */	ABSENT_STRING,
+	/* 263: kf58     */	ABSENT_STRING,
+	/* 264: kf59     */	ABSENT_STRING,
+	/* 265: kf60     */	ABSENT_STRING,
+	/* 266: kf61     */	ABSENT_STRING,
+	/* 267: kf62     */	ABSENT_STRING,
+	/* 268: kf63     */	ABSENT_STRING,
+	/* 269: el1      */	linux_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	linux_s_u6,
+	/* 294: u7       */	linux_s_u7,
+	/* 295: u8       */	linux_s_u8,
+	/* 296: u9       */	linux_s_u9,
+	/* 297: op       */	linux_s_op,
+	/* 298: oc       */	linux_s_oc,
+	/* 299: initc    */	linux_s_initc,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	linux_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	linux_s_setaf,
+	/* 360: setab    */	linux_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	linux_s_smpch,
+	/* 380: rmpch    */	linux_s_rmpch,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* rxvt */
+
+static char rxvt_alias_data[] = "rxvt|rxvt terminal emulator (X Window System)";
+
+static char rxvt_s_bel          [] = "\007";
+static char rxvt_s_cr           [] = "\015";
+static char rxvt_s_csr          [] = "\033[%i%p1%d;%p2%dr";
+static char rxvt_s_tbc          [] = "\033[3g";
+static char rxvt_s_clear        [] = "\033[H\033[2J";
+static char rxvt_s_el           [] = "\033[K";
+static char rxvt_s_ed           [] = "\033[J";
+static char rxvt_s_hpa          [] = "\033[%i%p1%dG";
+static char rxvt_s_cup          [] = "\033[%i%p1%d;%p2%dH";
+static char rxvt_s_cud1         [] = "\012";
+static char rxvt_s_home         [] = "\033[H";
+static char rxvt_s_civis        [] = "\033[?25l";
+static char rxvt_s_cub1         [] = "\010";
+static char rxvt_s_cnorm        [] = "\033[?25h";
+static char rxvt_s_cuf1         [] = "\033[C";
+static char rxvt_s_cuu1         [] = "\033[A";
+static char rxvt_s_dl1          [] = "\033[M";
+static char rxvt_s_smacs        [] = "\016";
+static char rxvt_s_blink        [] = "\033[5m";
+static char rxvt_s_bold         [] = "\033[1m";
+static char rxvt_s_smcup        [] = "\0337\033[?47h";
+static char rxvt_s_smir         [] = "\033[4h";
+static char rxvt_s_rev          [] = "\033[7m";
+static char rxvt_s_smso         [] = "\033[7m";
+static char rxvt_s_smul         [] = "\033[4m";
+static char rxvt_s_rmacs        [] = "\017";
+static char rxvt_s_sgr0         [] = "\033[m\017";
+static char rxvt_s_rmcup        [] = "\033[2J\033[?47l\0338";
+static char rxvt_s_rmir         [] = "\033[4l";
+static char rxvt_s_rmso         [] = "\033[27m";
+static char rxvt_s_rmul         [] = "\033[24m";
+static char rxvt_s_flash        [] = "\033[?5h$<100/>\033[?5l";
+static char rxvt_s_is1          [] = "\033[?47l\033=\033[?1l";
+static char rxvt_s_is2          [] = "\033[r\033[m\033[2J\033[H\033[?7h\033[?1;3;4;6l\033[4l";
+static char rxvt_s_ich1         [] = "\033[@";
+static char rxvt_s_il1          [] = "\033[L";
+static char rxvt_s_kbs          [] = "\010";
+static char rxvt_s_kdch1        [] = "\033[3~";
+static char rxvt_s_kcud1        [] = "\033[B";
+static char rxvt_s_kel          [] = "\033[8^";
+static char rxvt_s_kf0          [] = "\033[21~";
+static char rxvt_s_kf1          [] = "\033[11~";
+static char rxvt_s_kf10         [] = "\033[21~";
+static char rxvt_s_kf2          [] = "\033[12~";
+static char rxvt_s_kf3          [] = "\033[13~";
+static char rxvt_s_kf4          [] = "\033[14~";
+static char rxvt_s_kf5          [] = "\033[15~";
+static char rxvt_s_kf6          [] = "\033[17~";
+static char rxvt_s_kf7          [] = "\033[18~";
+static char rxvt_s_kf8          [] = "\033[19~";
+static char rxvt_s_kf9          [] = "\033[20~";
+static char rxvt_s_khome        [] = "\033[7~";
+static char rxvt_s_kich1        [] = "\033[2~";
+static char rxvt_s_kcub1        [] = "\033[D";
+static char rxvt_s_knp          [] = "\033[6~";
+static char rxvt_s_kpp          [] = "\033[5~";
+static char rxvt_s_kcuf1        [] = "\033[C";
+static char rxvt_s_kind         [] = "\033[a";
+static char rxvt_s_kri          [] = "\033[b";
+static char rxvt_s_kcuu1        [] = "\033[A";
+static char rxvt_s_rmkx         [] = "\033>";
+static char rxvt_s_smkx         [] = "\033=";
+static char rxvt_s_dl           [] = "\033[%p1%dM";
+static char rxvt_s_cud          [] = "\033[%p1%dB";
+static char rxvt_s_ich          [] = "\033[%p1%d@";
+static char rxvt_s_il           [] = "\033[%p1%dL";
+static char rxvt_s_cub          [] = "\033[%p1%dD";
+static char rxvt_s_cuf          [] = "\033[%p1%dC";
+static char rxvt_s_cuu          [] = "\033[%p1%dA";
+static char rxvt_s_rs1          [] = "\033>\033[1;3;4;5;6l\033[?7h\033[m\033[r\033[2J\033[H";
+static char rxvt_s_rs2          [] = "\033[r\033[m\033[2J\033[H\033[?7h\033[?1;3;4;6l\033[4l\033>\033[?1000l\033[?25h";
+static char rxvt_s_rc           [] = "\0338";
+static char rxvt_s_vpa          [] = "\033[%i%p1%dd";
+static char rxvt_s_sc           [] = "\0337";
+static char rxvt_s_ind          [] = "\012";
+static char rxvt_s_ri           [] = "\033M";
+static char rxvt_s_sgr          [] = "\033[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t\016%e\017%;";
+static char rxvt_s_hts          [] = "\033H";
+static char rxvt_s_ht           [] = "\011";
+static char rxvt_s_ka1          [] = "\033Ow";
+static char rxvt_s_ka3          [] = "\033Oy";
+static char rxvt_s_kb2          [] = "\033Ou";
+static char rxvt_s_kc1          [] = "\033Oq";
+static char rxvt_s_kc3          [] = "\033Os";
+static char rxvt_s_acsc         [] = "``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char rxvt_s_kcbt         [] = "\033[Z";
+static char rxvt_s_enacs        [] = "\033(B\033)0";
+static char rxvt_s_kend         [] = "\033[8~";
+static char rxvt_s_kent         [] = "\033OM";
+static char rxvt_s_kfnd         [] = "\033[1~";
+static char rxvt_s_kDC          [] = "\033[3$";
+static char rxvt_s_kslt         [] = "\033[4~";
+static char rxvt_s_kEND         [] = "\033[8$";
+static char rxvt_s_kHOM         [] = "\033[7$";
+static char rxvt_s_kIC          [] = "\033[2$";
+static char rxvt_s_kLFT         [] = "\033[d";
+static char rxvt_s_kNXT         [] = "\033[6$";
+static char rxvt_s_kPRV         [] = "\033[5$";
+static char rxvt_s_kRIT         [] = "\033[c";
+static char rxvt_s_kf11         [] = "\033[23~";
+static char rxvt_s_kf12         [] = "\033[24~";
+static char rxvt_s_kf13         [] = "\033[25~";
+static char rxvt_s_kf14         [] = "\033[26~";
+static char rxvt_s_kf15         [] = "\033[28~";
+static char rxvt_s_kf16         [] = "\033[29~";
+static char rxvt_s_kf17         [] = "\033[31~";
+static char rxvt_s_kf18         [] = "\033[32~";
+static char rxvt_s_kf19         [] = "\033[33~";
+static char rxvt_s_kf20         [] = "\033[34~";
+static char rxvt_s_kf21         [] = "\033[23$";
+static char rxvt_s_kf22         [] = "\033[24$";
+static char rxvt_s_kf23         [] = "\033[11^";
+static char rxvt_s_kf24         [] = "\033[12^";
+static char rxvt_s_kf25         [] = "\033[13^";
+static char rxvt_s_kf26         [] = "\033[14^";
+static char rxvt_s_kf27         [] = "\033[15^";
+static char rxvt_s_kf28         [] = "\033[17^";
+static char rxvt_s_kf29         [] = "\033[18^";
+static char rxvt_s_kf30         [] = "\033[19^";
+static char rxvt_s_kf31         [] = "\033[20^";
+static char rxvt_s_kf32         [] = "\033[21^";
+static char rxvt_s_kf33         [] = "\033[23^";
+static char rxvt_s_kf34         [] = "\033[24^";
+static char rxvt_s_kf35         [] = "\033[25^";
+static char rxvt_s_kf36         [] = "\033[26^";
+static char rxvt_s_kf37         [] = "\033[28^";
+static char rxvt_s_kf38         [] = "\033[29^";
+static char rxvt_s_kf39         [] = "\033[31^";
+static char rxvt_s_kf40         [] = "\033[32^";
+static char rxvt_s_kf41         [] = "\033[33^";
+static char rxvt_s_kf42         [] = "\033[34^";
+static char rxvt_s_kf43         [] = "\033[23@";
+static char rxvt_s_kf44         [] = "\033[24@";
+static char rxvt_s_el1          [] = "\033[1K";
+static char rxvt_s_u6           [] = "\033[%i%d;%dR";
+static char rxvt_s_u7           [] = "\033[6n";
+static char rxvt_s_u8           [] = "\033[?1;2c";
+static char rxvt_s_u9           [] = "\033[c";
+static char rxvt_s_op           [] = "\033[39;49m";
+static char rxvt_s_kmous        [] = "\033[M";
+static char rxvt_s_setaf        [] = "\033[3%p1%dm";
+static char rxvt_s_setab        [] = "\033[4%p1%dm";
+static char rxvt_s_s0ds         [] = "\033(B";
+static char rxvt_s_s1ds         [] = "\033(0";
+
+static char rxvt_bool_data[] = {
+	/*   0: bw       */	FALSE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	TRUE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	FALSE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	TRUE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	FALSE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	FALSE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	TRUE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 rxvt_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	CANCELLED_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * rxvt_string_data[] = {
+	/*   0: cbt      */	ABSENT_STRING,
+	/*   1: bel      */	rxvt_s_bel,
+	/*   2: cr       */	rxvt_s_cr,
+	/*   3: csr      */	rxvt_s_csr,
+	/*   4: tbc      */	rxvt_s_tbc,
+	/*   5: clear    */	rxvt_s_clear,
+	/*   6: el       */	rxvt_s_el,
+	/*   7: ed       */	rxvt_s_ed,
+	/*   8: hpa      */	rxvt_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	rxvt_s_cup,
+	/*  11: cud1     */	rxvt_s_cud1,
+	/*  12: home     */	rxvt_s_home,
+	/*  13: civis    */	rxvt_s_civis,
+	/*  14: cub1     */	rxvt_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	rxvt_s_cnorm,
+	/*  17: cuf1     */	rxvt_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	rxvt_s_cuu1,
+	/*  20: cvvis    */	ABSENT_STRING,
+	/*  21: dch1     */	ABSENT_STRING,
+	/*  22: dl1      */	rxvt_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	rxvt_s_smacs,
+	/*  26: blink    */	rxvt_s_blink,
+	/*  27: bold     */	rxvt_s_bold,
+	/*  28: smcup    */	rxvt_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	ABSENT_STRING,
+	/*  31: smir     */	rxvt_s_smir,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	rxvt_s_rev,
+	/*  35: smso     */	rxvt_s_smso,
+	/*  36: smul     */	rxvt_s_smul,
+	/*  37: ech      */	ABSENT_STRING,
+	/*  38: rmacs    */	rxvt_s_rmacs,
+	/*  39: sgr0     */	rxvt_s_sgr0,
+	/*  40: rmcup    */	rxvt_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	rxvt_s_rmir,
+	/*  43: rmso     */	rxvt_s_rmso,
+	/*  44: rmul     */	rxvt_s_rmul,
+	/*  45: flash    */	rxvt_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	rxvt_s_is1,
+	/*  49: is2      */	rxvt_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	rxvt_s_ich1,
+	/*  53: il1      */	rxvt_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	rxvt_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	rxvt_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	rxvt_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	rxvt_s_kel,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	rxvt_s_kf0,
+	/*  66: kf1      */	rxvt_s_kf1,
+	/*  67: kf10     */	rxvt_s_kf10,
+	/*  68: kf2      */	rxvt_s_kf2,
+	/*  69: kf3      */	rxvt_s_kf3,
+	/*  70: kf4      */	rxvt_s_kf4,
+	/*  71: kf5      */	rxvt_s_kf5,
+	/*  72: kf6      */	rxvt_s_kf6,
+	/*  73: kf7      */	rxvt_s_kf7,
+	/*  74: kf8      */	rxvt_s_kf8,
+	/*  75: kf9      */	rxvt_s_kf9,
+	/*  76: khome    */	rxvt_s_khome,
+	/*  77: kich1    */	rxvt_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	rxvt_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	rxvt_s_knp,
+	/*  82: kpp      */	rxvt_s_kpp,
+	/*  83: kcuf1    */	rxvt_s_kcuf1,
+	/*  84: kind     */	rxvt_s_kind,
+	/*  85: kri      */	rxvt_s_kri,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	rxvt_s_kcuu1,
+	/*  88: rmkx     */	rxvt_s_rmkx,
+	/*  89: smkx     */	rxvt_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	ABSENT_STRING,
+	/* 102: smm      */	ABSENT_STRING,
+	/* 103: nel      */	ABSENT_STRING,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	ABSENT_STRING,
+	/* 106: dl       */	rxvt_s_dl,
+	/* 107: cud      */	rxvt_s_cud,
+	/* 108: ich      */	rxvt_s_ich,
+	/* 109: indn     */	ABSENT_STRING,
+	/* 110: il       */	rxvt_s_il,
+	/* 111: cub      */	rxvt_s_cub,
+	/* 112: cuf      */	rxvt_s_cuf,
+	/* 113: rin      */	ABSENT_STRING,
+	/* 114: cuu      */	rxvt_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	ABSENT_STRING,
+	/* 119: mc4      */	ABSENT_STRING,
+	/* 120: mc5      */	ABSENT_STRING,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	rxvt_s_rs1,
+	/* 123: rs2      */	rxvt_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	rxvt_s_rc,
+	/* 127: vpa      */	rxvt_s_vpa,
+	/* 128: sc       */	rxvt_s_sc,
+	/* 129: ind      */	rxvt_s_ind,
+	/* 130: ri       */	rxvt_s_ri,
+	/* 131: sgr      */	rxvt_s_sgr,
+	/* 132: hts      */	rxvt_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	rxvt_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	rxvt_s_ka1,
+	/* 140: ka3      */	rxvt_s_ka3,
+	/* 141: kb2      */	rxvt_s_kb2,
+	/* 142: kc1      */	rxvt_s_kc1,
+	/* 143: kc3      */	rxvt_s_kc3,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	rxvt_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	rxvt_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	ABSENT_STRING,
+	/* 152: rmam     */	ABSENT_STRING,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	rxvt_s_enacs,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	rxvt_s_kend,
+	/* 165: kent     */	rxvt_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	rxvt_s_kfnd,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	rxvt_s_kDC,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	rxvt_s_kslt,
+	/* 194: kEND     */	rxvt_s_kEND,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	rxvt_s_kHOM,
+	/* 200: kIC      */	rxvt_s_kIC,
+	/* 201: kLFT     */	rxvt_s_kLFT,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	rxvt_s_kNXT,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	rxvt_s_kPRV,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	rxvt_s_kRIT,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	rxvt_s_kf11,
+	/* 217: kf12     */	rxvt_s_kf12,
+	/* 218: kf13     */	rxvt_s_kf13,
+	/* 219: kf14     */	rxvt_s_kf14,
+	/* 220: kf15     */	rxvt_s_kf15,
+	/* 221: kf16     */	rxvt_s_kf16,
+	/* 222: kf17     */	rxvt_s_kf17,
+	/* 223: kf18     */	rxvt_s_kf18,
+	/* 224: kf19     */	rxvt_s_kf19,
+	/* 225: kf20     */	rxvt_s_kf20,
+	/* 226: kf21     */	rxvt_s_kf21,
+	/* 227: kf22     */	rxvt_s_kf22,
+	/* 228: kf23     */	rxvt_s_kf23,
+	/* 229: kf24     */	rxvt_s_kf24,
+	/* 230: kf25     */	rxvt_s_kf25,
+	/* 231: kf26     */	rxvt_s_kf26,
+	/* 232: kf27     */	rxvt_s_kf27,
+	/* 233: kf28     */	rxvt_s_kf28,
+	/* 234: kf29     */	rxvt_s_kf29,
+	/* 235: kf30     */	rxvt_s_kf30,
+	/* 236: kf31     */	rxvt_s_kf31,
+	/* 237: kf32     */	rxvt_s_kf32,
+	/* 238: kf33     */	rxvt_s_kf33,
+	/* 239: kf34     */	rxvt_s_kf34,
+	/* 240: kf35     */	rxvt_s_kf35,
+	/* 241: kf36     */	rxvt_s_kf36,
+	/* 242: kf37     */	rxvt_s_kf37,
+	/* 243: kf38     */	rxvt_s_kf38,
+	/* 244: kf39     */	rxvt_s_kf39,
+	/* 245: kf40     */	rxvt_s_kf40,
+	/* 246: kf41     */	rxvt_s_kf41,
+	/* 247: kf42     */	rxvt_s_kf42,
+	/* 248: kf43     */	rxvt_s_kf43,
+	/* 249: kf44     */	rxvt_s_kf44,
+	/* 250: kf45     */	ABSENT_STRING,
+	/* 251: kf46     */	ABSENT_STRING,
+	/* 252: kf47     */	ABSENT_STRING,
+	/* 253: kf48     */	ABSENT_STRING,
+	/* 254: kf49     */	ABSENT_STRING,
+	/* 255: kf50     */	ABSENT_STRING,
+	/* 256: kf51     */	ABSENT_STRING,
+	/* 257: kf52     */	ABSENT_STRING,
+	/* 258: kf53     */	ABSENT_STRING,
+	/* 259: kf54     */	ABSENT_STRING,
+	/* 260: kf55     */	ABSENT_STRING,
+	/* 261: kf56     */	ABSENT_STRING,
+	/* 262: kf57     */	ABSENT_STRING,
+	/* 263: kf58     */	ABSENT_STRING,
+	/* 264: kf59     */	ABSENT_STRING,
+	/* 265: kf60     */	ABSENT_STRING,
+	/* 266: kf61     */	ABSENT_STRING,
+	/* 267: kf62     */	ABSENT_STRING,
+	/* 268: kf63     */	ABSENT_STRING,
+	/* 269: el1      */	rxvt_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	rxvt_s_u6,
+	/* 294: u7       */	rxvt_s_u7,
+	/* 295: u8       */	rxvt_s_u8,
+	/* 296: u9       */	rxvt_s_u9,
+	/* 297: op       */	rxvt_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	rxvt_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	rxvt_s_setaf,
+	/* 360: setab    */	rxvt_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	rxvt_s_s0ds,
+	/* 365: s1ds     */	rxvt_s_s1ds,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* vt100 */
+
+static char vt100_alias_data[] = "vt100|vt100-am|dec vt100 (w/advanced video)";
+
+static char vt100_s_bel         [] = "\007";
+static char vt100_s_cr          [] = "\015";
+static char vt100_s_csr         [] = "\033[%i%p1%d;%p2%dr";
+static char vt100_s_tbc         [] = "\033[3g";
+static char vt100_s_clear       [] = "\033[H\033[J$<50>";
+static char vt100_s_el          [] = "\033[K$<3>";
+static char vt100_s_ed          [] = "\033[J$<50>";
+static char vt100_s_cup         [] = "\033[%i%p1%d;%p2%dH$<5>";
+static char vt100_s_cud1        [] = "\012";
+static char vt100_s_home        [] = "\033[H";
+static char vt100_s_cub1        [] = "\010";
+static char vt100_s_cuf1        [] = "\033[C$<2>";
+static char vt100_s_cuu1        [] = "\033[A$<2>";
+static char vt100_s_smacs       [] = "\016";
+static char vt100_s_blink       [] = "\033[5m$<2>";
+static char vt100_s_bold        [] = "\033[1m$<2>";
+static char vt100_s_rev         [] = "\033[7m$<2>";
+static char vt100_s_smso        [] = "\033[7m$<2>";
+static char vt100_s_smul        [] = "\033[4m$<2>";
+static char vt100_s_rmacs       [] = "\017";
+static char vt100_s_sgr0        [] = "\033[m\017$<2>";
+static char vt100_s_rmso        [] = "\033[m$<2>";
+static char vt100_s_rmul        [] = "\033[m$<2>";
+static char vt100_s_kbs         [] = "\010";
+static char vt100_s_kcud1       [] = "\033OB";
+static char vt100_s_kf0         [] = "\033Oy";
+static char vt100_s_kf1         [] = "\033OP";
+static char vt100_s_kf10        [] = "\033Ox";
+static char vt100_s_kf2         [] = "\033OQ";
+static char vt100_s_kf3         [] = "\033OR";
+static char vt100_s_kf4         [] = "\033OS";
+static char vt100_s_kf5         [] = "\033Ot";
+static char vt100_s_kf6         [] = "\033Ou";
+static char vt100_s_kf7         [] = "\033Ov";
+static char vt100_s_kf8         [] = "\033Ol";
+static char vt100_s_kf9         [] = "\033Ow";
+static char vt100_s_kcub1       [] = "\033OD";
+static char vt100_s_kcuf1       [] = "\033OC";
+static char vt100_s_kcuu1       [] = "\033OA";
+static char vt100_s_rmkx        [] = "\033[?1l\033>";
+static char vt100_s_smkx        [] = "\033[?1h\033=";
+static char vt100_s_lf1         [] = "pf1";
+static char vt100_s_lf2         [] = "pf2";
+static char vt100_s_lf3         [] = "pf3";
+static char vt100_s_lf4         [] = "pf4";
+static char vt100_s_cud         [] = "\033[%p1%dB";
+static char vt100_s_cub         [] = "\033[%p1%dD";
+static char vt100_s_cuf         [] = "\033[%p1%dC";
+static char vt100_s_cuu         [] = "\033[%p1%dA";
+static char vt100_s_mc0         [] = "\033[0i";
+static char vt100_s_mc4         [] = "\033[4i";
+static char vt100_s_mc5         [] = "\033[5i";
+static char vt100_s_rs2         [] = "\033<\033>\033[?3;4;5l\033[?7;8h\033[r";
+static char vt100_s_rc          [] = "\0338";
+static char vt100_s_sc          [] = "\0337";
+static char vt100_s_ind         [] = "\012";
+static char vt100_s_ri          [] = "\033M$<5>";
+static char vt100_s_sgr         [] = "\033[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t\016%e\017%;$<2>";
+static char vt100_s_hts         [] = "\033H";
+static char vt100_s_ht          [] = "\011";
+static char vt100_s_ka1         [] = "\033Oq";
+static char vt100_s_ka3         [] = "\033Os";
+static char vt100_s_kb2         [] = "\033Or";
+static char vt100_s_kc1         [] = "\033Op";
+static char vt100_s_kc3         [] = "\033On";
+static char vt100_s_acsc        [] = "``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char vt100_s_smam        [] = "\033[?7h";
+static char vt100_s_rmam        [] = "\033[?7l";
+static char vt100_s_enacs       [] = "\033(B\033)0";
+static char vt100_s_kent        [] = "\033OM";
+static char vt100_s_el1         [] = "\033[1K$<3>";
+
+static char vt100_bool_data[] = {
+	/*   0: bw       */	FALSE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	FALSE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	FALSE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	TRUE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	TRUE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	FALSE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	FALSE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 vt100_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	3,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	ABSENT_NUMERIC,
+	/*  14: pairs    */	ABSENT_NUMERIC,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * vt100_string_data[] = {
+	/*   0: cbt      */	ABSENT_STRING,
+	/*   1: bel      */	vt100_s_bel,
+	/*   2: cr       */	vt100_s_cr,
+	/*   3: csr      */	vt100_s_csr,
+	/*   4: tbc      */	vt100_s_tbc,
+	/*   5: clear    */	vt100_s_clear,
+	/*   6: el       */	vt100_s_el,
+	/*   7: ed       */	vt100_s_ed,
+	/*   8: hpa      */	ABSENT_STRING,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	vt100_s_cup,
+	/*  11: cud1     */	vt100_s_cud1,
+	/*  12: home     */	vt100_s_home,
+	/*  13: civis    */	ABSENT_STRING,
+	/*  14: cub1     */	vt100_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	ABSENT_STRING,
+	/*  17: cuf1     */	vt100_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	vt100_s_cuu1,
+	/*  20: cvvis    */	ABSENT_STRING,
+	/*  21: dch1     */	ABSENT_STRING,
+	/*  22: dl1      */	ABSENT_STRING,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	vt100_s_smacs,
+	/*  26: blink    */	vt100_s_blink,
+	/*  27: bold     */	vt100_s_bold,
+	/*  28: smcup    */	ABSENT_STRING,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	ABSENT_STRING,
+	/*  31: smir     */	ABSENT_STRING,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	vt100_s_rev,
+	/*  35: smso     */	vt100_s_smso,
+	/*  36: smul     */	vt100_s_smul,
+	/*  37: ech      */	ABSENT_STRING,
+	/*  38: rmacs    */	vt100_s_rmacs,
+	/*  39: sgr0     */	vt100_s_sgr0,
+	/*  40: rmcup    */	ABSENT_STRING,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	ABSENT_STRING,
+	/*  43: rmso     */	vt100_s_rmso,
+	/*  44: rmul     */	vt100_s_rmul,
+	/*  45: flash    */	ABSENT_STRING,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	ABSENT_STRING,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	ABSENT_STRING,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	vt100_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	ABSENT_STRING,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	vt100_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	vt100_s_kf0,
+	/*  66: kf1      */	vt100_s_kf1,
+	/*  67: kf10     */	vt100_s_kf10,
+	/*  68: kf2      */	vt100_s_kf2,
+	/*  69: kf3      */	vt100_s_kf3,
+	/*  70: kf4      */	vt100_s_kf4,
+	/*  71: kf5      */	vt100_s_kf5,
+	/*  72: kf6      */	vt100_s_kf6,
+	/*  73: kf7      */	vt100_s_kf7,
+	/*  74: kf8      */	vt100_s_kf8,
+	/*  75: kf9      */	vt100_s_kf9,
+	/*  76: khome    */	ABSENT_STRING,
+	/*  77: kich1    */	ABSENT_STRING,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	vt100_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	ABSENT_STRING,
+	/*  82: kpp      */	ABSENT_STRING,
+	/*  83: kcuf1    */	vt100_s_kcuf1,
+	/*  84: kind     */	ABSENT_STRING,
+	/*  85: kri      */	ABSENT_STRING,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	vt100_s_kcuu1,
+	/*  88: rmkx     */	vt100_s_rmkx,
+	/*  89: smkx     */	vt100_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	vt100_s_lf1,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	vt100_s_lf2,
+	/*  94: lf3      */	vt100_s_lf3,
+	/*  95: lf4      */	vt100_s_lf4,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	ABSENT_STRING,
+	/* 102: smm      */	ABSENT_STRING,
+	/* 103: nel      */	ABSENT_STRING,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	ABSENT_STRING,
+	/* 106: dl       */	ABSENT_STRING,
+	/* 107: cud      */	vt100_s_cud,
+	/* 108: ich      */	ABSENT_STRING,
+	/* 109: indn     */	ABSENT_STRING,
+	/* 110: il       */	ABSENT_STRING,
+	/* 111: cub      */	vt100_s_cub,
+	/* 112: cuf      */	vt100_s_cuf,
+	/* 113: rin      */	ABSENT_STRING,
+	/* 114: cuu      */	vt100_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	vt100_s_mc0,
+	/* 119: mc4      */	vt100_s_mc4,
+	/* 120: mc5      */	vt100_s_mc5,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	ABSENT_STRING,
+	/* 123: rs2      */	vt100_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	vt100_s_rc,
+	/* 127: vpa      */	ABSENT_STRING,
+	/* 128: sc       */	vt100_s_sc,
+	/* 129: ind      */	vt100_s_ind,
+	/* 130: ri       */	vt100_s_ri,
+	/* 131: sgr      */	vt100_s_sgr,
+	/* 132: hts      */	vt100_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	vt100_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	vt100_s_ka1,
+	/* 140: ka3      */	vt100_s_ka3,
+	/* 141: kb2      */	vt100_s_kb2,
+	/* 142: kc1      */	vt100_s_kc1,
+	/* 143: kc3      */	vt100_s_kc3,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	vt100_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	ABSENT_STRING,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	vt100_s_smam,
+	/* 152: rmam     */	vt100_s_rmam,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	vt100_s_enacs,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	ABSENT_STRING,
+	/* 165: kent     */	vt100_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	ABSENT_STRING,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	ABSENT_STRING,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	ABSENT_STRING,
+	/* 200: kIC      */	ABSENT_STRING,
+	/* 201: kLFT     */	ABSENT_STRING,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	ABSENT_STRING,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	ABSENT_STRING,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	ABSENT_STRING,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	ABSENT_STRING,
+	/* 217: kf12     */	ABSENT_STRING,
+	/* 218: kf13     */	ABSENT_STRING,
+	/* 219: kf14     */	ABSENT_STRING,
+	/* 220: kf15     */	ABSENT_STRING,
+	/* 221: kf16     */	ABSENT_STRING,
+	/* 222: kf17     */	ABSENT_STRING,
+	/* 223: kf18     */	ABSENT_STRING,
+	/* 224: kf19     */	ABSENT_STRING,
+	/* 225: kf20     */	ABSENT_STRING,
+	/* 226: kf21     */	ABSENT_STRING,
+	/* 227: kf22     */	ABSENT_STRING,
+	/* 228: kf23     */	ABSENT_STRING,
+	/* 229: kf24     */	ABSENT_STRING,
+	/* 230: kf25     */	ABSENT_STRING,
+	/* 231: kf26     */	ABSENT_STRING,
+	/* 232: kf27     */	ABSENT_STRING,
+	/* 233: kf28     */	ABSENT_STRING,
+	/* 234: kf29     */	ABSENT_STRING,
+	/* 235: kf30     */	ABSENT_STRING,
+	/* 236: kf31     */	ABSENT_STRING,
+	/* 237: kf32     */	ABSENT_STRING,
+	/* 238: kf33     */	ABSENT_STRING,
+	/* 239: kf34     */	ABSENT_STRING,
+	/* 240: kf35     */	ABSENT_STRING,
+	/* 241: kf36     */	ABSENT_STRING,
+	/* 242: kf37     */	ABSENT_STRING,
+	/* 243: kf38     */	ABSENT_STRING,
+	/* 244: kf39     */	ABSENT_STRING,
+	/* 245: kf40     */	ABSENT_STRING,
+	/* 246: kf41     */	ABSENT_STRING,
+	/* 247: kf42     */	ABSENT_STRING,
+	/* 248: kf43     */	ABSENT_STRING,
+	/* 249: kf44     */	ABSENT_STRING,
+	/* 250: kf45     */	ABSENT_STRING,
+	/* 251: kf46     */	ABSENT_STRING,
+	/* 252: kf47     */	ABSENT_STRING,
+	/* 253: kf48     */	ABSENT_STRING,
+	/* 254: kf49     */	ABSENT_STRING,
+	/* 255: kf50     */	ABSENT_STRING,
+	/* 256: kf51     */	ABSENT_STRING,
+	/* 257: kf52     */	ABSENT_STRING,
+	/* 258: kf53     */	ABSENT_STRING,
+	/* 259: kf54     */	ABSENT_STRING,
+	/* 260: kf55     */	ABSENT_STRING,
+	/* 261: kf56     */	ABSENT_STRING,
+	/* 262: kf57     */	ABSENT_STRING,
+	/* 263: kf58     */	ABSENT_STRING,
+	/* 264: kf59     */	ABSENT_STRING,
+	/* 265: kf60     */	ABSENT_STRING,
+	/* 266: kf61     */	ABSENT_STRING,
+	/* 267: kf62     */	ABSENT_STRING,
+	/* 268: kf63     */	ABSENT_STRING,
+	/* 269: el1      */	vt100_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	ABSENT_STRING,
+	/* 294: u7       */	ABSENT_STRING,
+	/* 295: u8       */	ABSENT_STRING,
+	/* 296: u9       */	ABSENT_STRING,
+	/* 297: op       */	ABSENT_STRING,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	ABSENT_STRING,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	ABSENT_STRING,
+	/* 360: setab    */	ABSENT_STRING,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* xterm */
+
+static char xterm_alias_data[] = "xterm|xterm terminal emulator (X Window System)";
+
+static char xterm_s_cbt         [] = "\033[Z";
+static char xterm_s_bel         [] = "\007";
+static char xterm_s_cr          [] = "\015";
+static char xterm_s_csr         [] = "\033[%i%p1%d;%p2%dr";
+static char xterm_s_tbc         [] = "\033[3g";
+static char xterm_s_clear       [] = "\033[H\033[2J";
+static char xterm_s_el          [] = "\033[K";
+static char xterm_s_ed          [] = "\033[J";
+static char xterm_s_hpa         [] = "\033[%i%p1%dG";
+static char xterm_s_cup         [] = "\033[%i%p1%d;%p2%dH";
+static char xterm_s_cud1        [] = "\012";
+static char xterm_s_home        [] = "\033[H";
+static char xterm_s_civis       [] = "\033[?25l";
+static char xterm_s_cub1        [] = "\010";
+static char xterm_s_cnorm       [] = "\033[?12l\033[?25h";
+static char xterm_s_cuf1        [] = "\033[C";
+static char xterm_s_cuu1        [] = "\033[A";
+static char xterm_s_cvvis       [] = "\033[?12;25h";
+static char xterm_s_dch1        [] = "\033[P";
+static char xterm_s_dl1         [] = "\033[M";
+static char xterm_s_smacs       [] = "\033(0";
+static char xterm_s_blink       [] = "\033[5m";
+static char xterm_s_bold        [] = "\033[1m";
+static char xterm_s_smcup       [] = "\033[?1049h\033[22;0;0t";
+static char xterm_s_dim         [] = "\033[2m";
+static char xterm_s_smir        [] = "\033[4h";
+static char xterm_s_invis       [] = "\033[8m";
+static char xterm_s_rev         [] = "\033[7m";
+static char xterm_s_smso        [] = "\033[7m";
+static char xterm_s_smul        [] = "\033[4m";
+static char xterm_s_ech         [] = "\033[%p1%dX";
+static char xterm_s_rmacs       [] = "\033(B";
+static char xterm_s_sgr0        [] = "\033(B\033[m";
+static char xterm_s_rmcup       [] = "\033[?1049l\033[23;0;0t";
+static char xterm_s_rmir        [] = "\033[4l";
+static char xterm_s_rmso        [] = "\033[27m";
+static char xterm_s_rmul        [] = "\033[24m";
+static char xterm_s_flash       [] = "\033[?5h$<100/>\033[?5l";
+static char xterm_s_is2         [] = "\033[!p\033[?3;4l\033[4l\033>";
+static char xterm_s_il1         [] = "\033[L";
+static char xterm_s_kbs         [] = "\010";
+static char xterm_s_kdch1       [] = "\033[3~";
+static char xterm_s_kcud1       [] = "\033OB";
+static char xterm_s_kf1         [] = "\033OP";
+static char xterm_s_kf10        [] = "\033[21~";
+static char xterm_s_kf2         [] = "\033OQ";
+static char xterm_s_kf3         [] = "\033OR";
+static char xterm_s_kf4         [] = "\033OS";
+static char xterm_s_kf5         [] = "\033[15~";
+static char xterm_s_kf6         [] = "\033[17~";
+static char xterm_s_kf7         [] = "\033[18~";
+static char xterm_s_kf8         [] = "\033[19~";
+static char xterm_s_kf9         [] = "\033[20~";
+static char xterm_s_khome       [] = "\033OH";
+static char xterm_s_kich1       [] = "\033[2~";
+static char xterm_s_kcub1       [] = "\033OD";
+static char xterm_s_knp         [] = "\033[6~";
+static char xterm_s_kpp         [] = "\033[5~";
+static char xterm_s_kcuf1       [] = "\033OC";
+static char xterm_s_kind        [] = "\033[1;2B";
+static char xterm_s_kri         [] = "\033[1;2A";
+static char xterm_s_kcuu1       [] = "\033OA";
+static char xterm_s_rmkx        [] = "\033[?1l\033>";
+static char xterm_s_smkx        [] = "\033[?1h\033=";
+static char xterm_s_rmm         [] = "\033[?1034l";
+static char xterm_s_smm         [] = "\033[?1034h";
+static char xterm_s_dch         [] = "\033[%p1%dP";
+static char xterm_s_dl          [] = "\033[%p1%dM";
+static char xterm_s_cud         [] = "\033[%p1%dB";
+static char xterm_s_ich         [] = "\033[%p1%d@";
+static char xterm_s_indn        [] = "\033[%p1%dS";
+static char xterm_s_il          [] = "\033[%p1%dL";
+static char xterm_s_cub         [] = "\033[%p1%dD";
+static char xterm_s_cuf         [] = "\033[%p1%dC";
+static char xterm_s_rin         [] = "\033[%p1%dT";
+static char xterm_s_cuu         [] = "\033[%p1%dA";
+static char xterm_s_mc0         [] = "\033[i";
+static char xterm_s_mc4         [] = "\033[4i";
+static char xterm_s_mc5         [] = "\033[5i";
+static char xterm_s_rep         [] = "%p1%c\033[%p2%{1}%-%db";
+static char xterm_s_rs1         [] = "\033c";
+static char xterm_s_rs2         [] = "\033[!p\033[?3;4l\033[4l\033>";
+static char xterm_s_rc          [] = "\0338";
+static char xterm_s_vpa         [] = "\033[%i%p1%dd";
+static char xterm_s_sc          [] = "\0337";
+static char xterm_s_ind         [] = "\012";
+static char xterm_s_ri          [] = "\033M";
+static char xterm_s_sgr         [] = "%?%p9%t\033(0%e\033(B%;\033[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m";
+static char xterm_s_hts         [] = "\033H";
+static char xterm_s_ht          [] = "\011";
+static char xterm_s_kb2         [] = "\033OE";
+static char xterm_s_acsc        [] = "``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char xterm_s_kcbt        [] = "\033[Z";
+static char xterm_s_smam        [] = "\033[?7h";
+static char xterm_s_rmam        [] = "\033[?7l";
+static char xterm_s_kend        [] = "\033OF";
+static char xterm_s_kent        [] = "\033OM";
+static char xterm_s_kDC         [] = "\033[3;2~";
+static char xterm_s_kEND        [] = "\033[1;2F";
+static char xterm_s_kHOM        [] = "\033[1;2H";
+static char xterm_s_kIC         [] = "\033[2;2~";
+static char xterm_s_kLFT        [] = "\033[1;2D";
+static char xterm_s_kNXT        [] = "\033[6;2~";
+static char xterm_s_kPRV        [] = "\033[5;2~";
+static char xterm_s_kRIT        [] = "\033[1;2C";
+static char xterm_s_kf11        [] = "\033[23~";
+static char xterm_s_kf12        [] = "\033[24~";
+static char xterm_s_kf13        [] = "\033[1;2P";
+static char xterm_s_kf14        [] = "\033[1;2Q";
+static char xterm_s_kf15        [] = "\033[1;2R";
+static char xterm_s_kf16        [] = "\033[1;2S";
+static char xterm_s_kf17        [] = "\033[15;2~";
+static char xterm_s_kf18        [] = "\033[17;2~";
+static char xterm_s_kf19        [] = "\033[18;2~";
+static char xterm_s_kf20        [] = "\033[19;2~";
+static char xterm_s_kf21        [] = "\033[20;2~";
+static char xterm_s_kf22        [] = "\033[21;2~";
+static char xterm_s_kf23        [] = "\033[23;2~";
+static char xterm_s_kf24        [] = "\033[24;2~";
+static char xterm_s_kf25        [] = "\033[1;5P";
+static char xterm_s_kf26        [] = "\033[1;5Q";
+static char xterm_s_kf27        [] = "\033[1;5R";
+static char xterm_s_kf28        [] = "\033[1;5S";
+static char xterm_s_kf29        [] = "\033[15;5~";
+static char xterm_s_kf30        [] = "\033[17;5~";
+static char xterm_s_kf31        [] = "\033[18;5~";
+static char xterm_s_kf32        [] = "\033[19;5~";
+static char xterm_s_kf33        [] = "\033[20;5~";
+static char xterm_s_kf34        [] = "\033[21;5~";
+static char xterm_s_kf35        [] = "\033[23;5~";
+static char xterm_s_kf36        [] = "\033[24;5~";
+static char xterm_s_kf37        [] = "\033[1;6P";
+static char xterm_s_kf38        [] = "\033[1;6Q";
+static char xterm_s_kf39        [] = "\033[1;6R";
+static char xterm_s_kf40        [] = "\033[1;6S";
+static char xterm_s_kf41        [] = "\033[15;6~";
+static char xterm_s_kf42        [] = "\033[17;6~";
+static char xterm_s_kf43        [] = "\033[18;6~";
+static char xterm_s_kf44        [] = "\033[19;6~";
+static char xterm_s_kf45        [] = "\033[20;6~";
+static char xterm_s_kf46        [] = "\033[21;6~";
+static char xterm_s_kf47        [] = "\033[23;6~";
+static char xterm_s_kf48        [] = "\033[24;6~";
+static char xterm_s_kf49        [] = "\033[1;3P";
+static char xterm_s_kf50        [] = "\033[1;3Q";
+static char xterm_s_kf51        [] = "\033[1;3R";
+static char xterm_s_kf52        [] = "\033[1;3S";
+static char xterm_s_kf53        [] = "\033[15;3~";
+static char xterm_s_kf54        [] = "\033[17;3~";
+static char xterm_s_kf55        [] = "\033[18;3~";
+static char xterm_s_kf56        [] = "\033[19;3~";
+static char xterm_s_kf57        [] = "\033[20;3~";
+static char xterm_s_kf58        [] = "\033[21;3~";
+static char xterm_s_kf59        [] = "\033[23;3~";
+static char xterm_s_kf60        [] = "\033[24;3~";
+static char xterm_s_kf61        [] = "\033[1;4P";
+static char xterm_s_kf62        [] = "\033[1;4Q";
+static char xterm_s_kf63        [] = "\033[1;4R";
+static char xterm_s_el1         [] = "\033[1K";
+static char xterm_s_u6          [] = "\033[%i%d;%dR";
+static char xterm_s_u7          [] = "\033[6n";
+static char xterm_s_u8          [] = "\033[?%[;0123456789]c";
+static char xterm_s_u9          [] = "\033[c";
+static char xterm_s_op          [] = "\033[39;49m";
+static char xterm_s_setf        [] = "\033[3%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m";
+static char xterm_s_setb        [] = "\033[4%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m";
+static char xterm_s_sitm        [] = "\033[3m";
+static char xterm_s_ritm        [] = "\033[23m";
+static char xterm_s_kmous       [] = "\033[<";
+static char xterm_s_setaf       [] = "\033[3%p1%dm";
+static char xterm_s_setab       [] = "\033[4%p1%dm";
+static char xterm_s_meml        [] = "\033l";
+static char xterm_s_memu        [] = "\033m";
+
+static char xterm_bool_data[] = {
+	/*   0: bw       */	FALSE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	TRUE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	TRUE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	TRUE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 xterm_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * xterm_string_data[] = {
+	/*   0: cbt      */	xterm_s_cbt,
+	/*   1: bel      */	xterm_s_bel,
+	/*   2: cr       */	xterm_s_cr,
+	/*   3: csr      */	xterm_s_csr,
+	/*   4: tbc      */	xterm_s_tbc,
+	/*   5: clear    */	xterm_s_clear,
+	/*   6: el       */	xterm_s_el,
+	/*   7: ed       */	xterm_s_ed,
+	/*   8: hpa      */	xterm_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	xterm_s_cup,
+	/*  11: cud1     */	xterm_s_cud1,
+	/*  12: home     */	xterm_s_home,
+	/*  13: civis    */	xterm_s_civis,
+	/*  14: cub1     */	xterm_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	xterm_s_cnorm,
+	/*  17: cuf1     */	xterm_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	xterm_s_cuu1,
+	/*  20: cvvis    */	xterm_s_cvvis,
+	/*  21: dch1     */	xterm_s_dch1,
+	/*  22: dl1      */	xterm_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	xterm_s_smacs,
+	/*  26: blink    */	xterm_s_blink,
+	/*  27: bold     */	xterm_s_bold,
+	/*  28: smcup    */	xterm_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	xterm_s_dim,
+	/*  31: smir     */	xterm_s_smir,
+	/*  32: invis    */	xterm_s_invis,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	xterm_s_rev,
+	/*  35: smso     */	xterm_s_smso,
+	/*  36: smul     */	xterm_s_smul,
+	/*  37: ech      */	xterm_s_ech,
+	/*  38: rmacs    */	xterm_s_rmacs,
+	/*  39: sgr0     */	xterm_s_sgr0,
+	/*  40: rmcup    */	xterm_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	xterm_s_rmir,
+	/*  43: rmso     */	xterm_s_rmso,
+	/*  44: rmul     */	xterm_s_rmul,
+	/*  45: flash    */	xterm_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	xterm_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	xterm_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	xterm_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	xterm_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	xterm_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	xterm_s_kf1,
+	/*  67: kf10     */	xterm_s_kf10,
+	/*  68: kf2      */	xterm_s_kf2,
+	/*  69: kf3      */	xterm_s_kf3,
+	/*  70: kf4      */	xterm_s_kf4,
+	/*  71: kf5      */	xterm_s_kf5,
+	/*  72: kf6      */	xterm_s_kf6,
+	/*  73: kf7      */	xterm_s_kf7,
+	/*  74: kf8      */	xterm_s_kf8,
+	/*  75: kf9      */	xterm_s_kf9,
+	/*  76: khome    */	xterm_s_khome,
+	/*  77: kich1    */	xterm_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	xterm_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	xterm_s_knp,
+	/*  82: kpp      */	xterm_s_kpp,
+	/*  83: kcuf1    */	xterm_s_kcuf1,
+	/*  84: kind     */	xterm_s_kind,
+	/*  85: kri      */	xterm_s_kri,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	xterm_s_kcuu1,
+	/*  88: rmkx     */	xterm_s_rmkx,
+	/*  89: smkx     */	xterm_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	xterm_s_rmm,
+	/* 102: smm      */	xterm_s_smm,
+	/* 103: nel      */	ABSENT_STRING,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	xterm_s_dch,
+	/* 106: dl       */	xterm_s_dl,
+	/* 107: cud      */	xterm_s_cud,
+	/* 108: ich      */	xterm_s_ich,
+	/* 109: indn     */	xterm_s_indn,
+	/* 110: il       */	xterm_s_il,
+	/* 111: cub      */	xterm_s_cub,
+	/* 112: cuf      */	xterm_s_cuf,
+	/* 113: rin      */	xterm_s_rin,
+	/* 114: cuu      */	xterm_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	xterm_s_mc0,
+	/* 119: mc4      */	xterm_s_mc4,
+	/* 120: mc5      */	xterm_s_mc5,
+	/* 121: rep      */	xterm_s_rep,
+	/* 122: rs1      */	xterm_s_rs1,
+	/* 123: rs2      */	xterm_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	xterm_s_rc,
+	/* 127: vpa      */	xterm_s_vpa,
+	/* 128: sc       */	xterm_s_sc,
+	/* 129: ind      */	xterm_s_ind,
+	/* 130: ri       */	xterm_s_ri,
+	/* 131: sgr      */	xterm_s_sgr,
+	/* 132: hts      */	xterm_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	xterm_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	xterm_s_kb2,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	xterm_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	xterm_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	xterm_s_smam,
+	/* 152: rmam     */	xterm_s_rmam,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	ABSENT_STRING,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	xterm_s_kend,
+	/* 165: kent     */	xterm_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	xterm_s_kDC,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	xterm_s_kEND,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	xterm_s_kHOM,
+	/* 200: kIC      */	xterm_s_kIC,
+	/* 201: kLFT     */	xterm_s_kLFT,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	xterm_s_kNXT,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	xterm_s_kPRV,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	xterm_s_kRIT,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	xterm_s_kf11,
+	/* 217: kf12     */	xterm_s_kf12,
+	/* 218: kf13     */	xterm_s_kf13,
+	/* 219: kf14     */	xterm_s_kf14,
+	/* 220: kf15     */	xterm_s_kf15,
+	/* 221: kf16     */	xterm_s_kf16,
+	/* 222: kf17     */	xterm_s_kf17,
+	/* 223: kf18     */	xterm_s_kf18,
+	/* 224: kf19     */	xterm_s_kf19,
+	/* 225: kf20     */	xterm_s_kf20,
+	/* 226: kf21     */	xterm_s_kf21,
+	/* 227: kf22     */	xterm_s_kf22,
+	/* 228: kf23     */	xterm_s_kf23,
+	/* 229: kf24     */	xterm_s_kf24,
+	/* 230: kf25     */	xterm_s_kf25,
+	/* 231: kf26     */	xterm_s_kf26,
+	/* 232: kf27     */	xterm_s_kf27,
+	/* 233: kf28     */	xterm_s_kf28,
+	/* 234: kf29     */	xterm_s_kf29,
+	/* 235: kf30     */	xterm_s_kf30,
+	/* 236: kf31     */	xterm_s_kf31,
+	/* 237: kf32     */	xterm_s_kf32,
+	/* 238: kf33     */	xterm_s_kf33,
+	/* 239: kf34     */	xterm_s_kf34,
+	/* 240: kf35     */	xterm_s_kf35,
+	/* 241: kf36     */	xterm_s_kf36,
+	/* 242: kf37     */	xterm_s_kf37,
+	/* 243: kf38     */	xterm_s_kf38,
+	/* 244: kf39     */	xterm_s_kf39,
+	/* 245: kf40     */	xterm_s_kf40,
+	/* 246: kf41     */	xterm_s_kf41,
+	/* 247: kf42     */	xterm_s_kf42,
+	/* 248: kf43     */	xterm_s_kf43,
+	/* 249: kf44     */	xterm_s_kf44,
+	/* 250: kf45     */	xterm_s_kf45,
+	/* 251: kf46     */	xterm_s_kf46,
+	/* 252: kf47     */	xterm_s_kf47,
+	/* 253: kf48     */	xterm_s_kf48,
+	/* 254: kf49     */	xterm_s_kf49,
+	/* 255: kf50     */	xterm_s_kf50,
+	/* 256: kf51     */	xterm_s_kf51,
+	/* 257: kf52     */	xterm_s_kf52,
+	/* 258: kf53     */	xterm_s_kf53,
+	/* 259: kf54     */	xterm_s_kf54,
+	/* 260: kf55     */	xterm_s_kf55,
+	/* 261: kf56     */	xterm_s_kf56,
+	/* 262: kf57     */	xterm_s_kf57,
+	/* 263: kf58     */	xterm_s_kf58,
+	/* 264: kf59     */	xterm_s_kf59,
+	/* 265: kf60     */	xterm_s_kf60,
+	/* 266: kf61     */	xterm_s_kf61,
+	/* 267: kf62     */	xterm_s_kf62,
+	/* 268: kf63     */	xterm_s_kf63,
+	/* 269: el1      */	xterm_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	xterm_s_u6,
+	/* 294: u7       */	xterm_s_u7,
+	/* 295: u8       */	xterm_s_u8,
+	/* 296: u9       */	xterm_s_u9,
+	/* 297: op       */	xterm_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	xterm_s_setf,
+	/* 303: setb     */	xterm_s_setb,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	xterm_s_sitm,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	xterm_s_ritm,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	xterm_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	xterm_s_setaf,
+	/* 360: setab    */	xterm_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	xterm_s_meml,
+	/* 412: memu     */	xterm_s_memu,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* xterm-256color */
+
+static char xterm_256color_alias_data[] = "xterm-256color|xterm with 256 colors";
+
+static char xterm_256color_s_cbt[] = "\033[Z";
+static char xterm_256color_s_bel[] = "\007";
+static char xterm_256color_s_cr [] = "\015";
+static char xterm_256color_s_csr[] = "\033[%i%p1%d;%p2%dr";
+static char xterm_256color_s_tbc[] = "\033[3g";
+static char xterm_256color_s_clear[] = "\033[H\033[2J";
+static char xterm_256color_s_el [] = "\033[K";
+static char xterm_256color_s_ed [] = "\033[J";
+static char xterm_256color_s_hpa[] = "\033[%i%p1%dG";
+static char xterm_256color_s_cup[] = "\033[%i%p1%d;%p2%dH";
+static char xterm_256color_s_cud1[] = "\012";
+static char xterm_256color_s_home[] = "\033[H";
+static char xterm_256color_s_civis[] = "\033[?25l";
+static char xterm_256color_s_cub1[] = "\010";
+static char xterm_256color_s_cnorm[] = "\033[?12l\033[?25h";
+static char xterm_256color_s_cuf1[] = "\033[C";
+static char xterm_256color_s_cuu1[] = "\033[A";
+static char xterm_256color_s_cvvis[] = "\033[?12;25h";
+static char xterm_256color_s_dch1[] = "\033[P";
+static char xterm_256color_s_dl1[] = "\033[M";
+static char xterm_256color_s_smacs[] = "\033(0";
+static char xterm_256color_s_blink[] = "\033[5m";
+static char xterm_256color_s_bold[] = "\033[1m";
+static char xterm_256color_s_smcup[] = "\033[?1049h\033[22;0;0t";
+static char xterm_256color_s_dim[] = "\033[2m";
+static char xterm_256color_s_smir[] = "\033[4h";
+static char xterm_256color_s_invis[] = "\033[8m";
+static char xterm_256color_s_rev[] = "\033[7m";
+static char xterm_256color_s_smso[] = "\033[7m";
+static char xterm_256color_s_smul[] = "\033[4m";
+static char xterm_256color_s_ech[] = "\033[%p1%dX";
+static char xterm_256color_s_rmacs[] = "\033(B";
+static char xterm_256color_s_sgr0[] = "\033(B\033[m";
+static char xterm_256color_s_rmcup[] = "\033[?1049l\033[23;0;0t";
+static char xterm_256color_s_rmir[] = "\033[4l";
+static char xterm_256color_s_rmso[] = "\033[27m";
+static char xterm_256color_s_rmul[] = "\033[24m";
+static char xterm_256color_s_flash[] = "\033[?5h$<100/>\033[?5l";
+static char xterm_256color_s_is2[] = "\033[!p\033[?3;4l\033[4l\033>";
+static char xterm_256color_s_il1[] = "\033[L";
+static char xterm_256color_s_kbs[] = "\010";
+static char xterm_256color_s_kdch1[] = "\033[3~";
+static char xterm_256color_s_kcud1[] = "\033OB";
+static char xterm_256color_s_kf1[] = "\033OP";
+static char xterm_256color_s_kf10[] = "\033[21~";
+static char xterm_256color_s_kf2[] = "\033OQ";
+static char xterm_256color_s_kf3[] = "\033OR";
+static char xterm_256color_s_kf4[] = "\033OS";
+static char xterm_256color_s_kf5[] = "\033[15~";
+static char xterm_256color_s_kf6[] = "\033[17~";
+static char xterm_256color_s_kf7[] = "\033[18~";
+static char xterm_256color_s_kf8[] = "\033[19~";
+static char xterm_256color_s_kf9[] = "\033[20~";
+static char xterm_256color_s_khome[] = "\033OH";
+static char xterm_256color_s_kich1[] = "\033[2~";
+static char xterm_256color_s_kcub1[] = "\033OD";
+static char xterm_256color_s_knp[] = "\033[6~";
+static char xterm_256color_s_kpp[] = "\033[5~";
+static char xterm_256color_s_kcuf1[] = "\033OC";
+static char xterm_256color_s_kind[] = "\033[1;2B";
+static char xterm_256color_s_kri[] = "\033[1;2A";
+static char xterm_256color_s_kcuu1[] = "\033OA";
+static char xterm_256color_s_rmkx[] = "\033[?1l\033>";
+static char xterm_256color_s_smkx[] = "\033[?1h\033=";
+static char xterm_256color_s_rmm[] = "\033[?1034l";
+static char xterm_256color_s_smm[] = "\033[?1034h";
+static char xterm_256color_s_dch[] = "\033[%p1%dP";
+static char xterm_256color_s_dl [] = "\033[%p1%dM";
+static char xterm_256color_s_cud[] = "\033[%p1%dB";
+static char xterm_256color_s_ich[] = "\033[%p1%d@";
+static char xterm_256color_s_indn[] = "\033[%p1%dS";
+static char xterm_256color_s_il [] = "\033[%p1%dL";
+static char xterm_256color_s_cub[] = "\033[%p1%dD";
+static char xterm_256color_s_cuf[] = "\033[%p1%dC";
+static char xterm_256color_s_rin[] = "\033[%p1%dT";
+static char xterm_256color_s_cuu[] = "\033[%p1%dA";
+static char xterm_256color_s_mc0[] = "\033[i";
+static char xterm_256color_s_mc4[] = "\033[4i";
+static char xterm_256color_s_mc5[] = "\033[5i";
+static char xterm_256color_s_rep[] = "%p1%c\033[%p2%{1}%-%db";
+static char xterm_256color_s_rs1[] = "\033c\033]104\007";
+static char xterm_256color_s_rs2[] = "\033[!p\033[?3;4l\033[4l\033>";
+static char xterm_256color_s_rc [] = "\0338";
+static char xterm_256color_s_vpa[] = "\033[%i%p1%dd";
+static char xterm_256color_s_sc [] = "\0337";
+static char xterm_256color_s_ind[] = "\012";
+static char xterm_256color_s_ri [] = "\033M";
+static char xterm_256color_s_sgr[] = "%?%p9%t\033(0%e\033(B%;\033[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m";
+static char xterm_256color_s_hts[] = "\033H";
+static char xterm_256color_s_ht [] = "\011";
+static char xterm_256color_s_kb2[] = "\033OE";
+static char xterm_256color_s_acsc[] = "``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char xterm_256color_s_kcbt[] = "\033[Z";
+static char xterm_256color_s_smam[] = "\033[?7h";
+static char xterm_256color_s_rmam[] = "\033[?7l";
+static char xterm_256color_s_kend[] = "\033OF";
+static char xterm_256color_s_kent[] = "\033OM";
+static char xterm_256color_s_kDC[] = "\033[3;2~";
+static char xterm_256color_s_kEND[] = "\033[1;2F";
+static char xterm_256color_s_kHOM[] = "\033[1;2H";
+static char xterm_256color_s_kIC[] = "\033[2;2~";
+static char xterm_256color_s_kLFT[] = "\033[1;2D";
+static char xterm_256color_s_kNXT[] = "\033[6;2~";
+static char xterm_256color_s_kPRV[] = "\033[5;2~";
+static char xterm_256color_s_kRIT[] = "\033[1;2C";
+static char xterm_256color_s_kf11[] = "\033[23~";
+static char xterm_256color_s_kf12[] = "\033[24~";
+static char xterm_256color_s_kf13[] = "\033[1;2P";
+static char xterm_256color_s_kf14[] = "\033[1;2Q";
+static char xterm_256color_s_kf15[] = "\033[1;2R";
+static char xterm_256color_s_kf16[] = "\033[1;2S";
+static char xterm_256color_s_kf17[] = "\033[15;2~";
+static char xterm_256color_s_kf18[] = "\033[17;2~";
+static char xterm_256color_s_kf19[] = "\033[18;2~";
+static char xterm_256color_s_kf20[] = "\033[19;2~";
+static char xterm_256color_s_kf21[] = "\033[20;2~";
+static char xterm_256color_s_kf22[] = "\033[21;2~";
+static char xterm_256color_s_kf23[] = "\033[23;2~";
+static char xterm_256color_s_kf24[] = "\033[24;2~";
+static char xterm_256color_s_kf25[] = "\033[1;5P";
+static char xterm_256color_s_kf26[] = "\033[1;5Q";
+static char xterm_256color_s_kf27[] = "\033[1;5R";
+static char xterm_256color_s_kf28[] = "\033[1;5S";
+static char xterm_256color_s_kf29[] = "\033[15;5~";
+static char xterm_256color_s_kf30[] = "\033[17;5~";
+static char xterm_256color_s_kf31[] = "\033[18;5~";
+static char xterm_256color_s_kf32[] = "\033[19;5~";
+static char xterm_256color_s_kf33[] = "\033[20;5~";
+static char xterm_256color_s_kf34[] = "\033[21;5~";
+static char xterm_256color_s_kf35[] = "\033[23;5~";
+static char xterm_256color_s_kf36[] = "\033[24;5~";
+static char xterm_256color_s_kf37[] = "\033[1;6P";
+static char xterm_256color_s_kf38[] = "\033[1;6Q";
+static char xterm_256color_s_kf39[] = "\033[1;6R";
+static char xterm_256color_s_kf40[] = "\033[1;6S";
+static char xterm_256color_s_kf41[] = "\033[15;6~";
+static char xterm_256color_s_kf42[] = "\033[17;6~";
+static char xterm_256color_s_kf43[] = "\033[18;6~";
+static char xterm_256color_s_kf44[] = "\033[19;6~";
+static char xterm_256color_s_kf45[] = "\033[20;6~";
+static char xterm_256color_s_kf46[] = "\033[21;6~";
+static char xterm_256color_s_kf47[] = "\033[23;6~";
+static char xterm_256color_s_kf48[] = "\033[24;6~";
+static char xterm_256color_s_kf49[] = "\033[1;3P";
+static char xterm_256color_s_kf50[] = "\033[1;3Q";
+static char xterm_256color_s_kf51[] = "\033[1;3R";
+static char xterm_256color_s_kf52[] = "\033[1;3S";
+static char xterm_256color_s_kf53[] = "\033[15;3~";
+static char xterm_256color_s_kf54[] = "\033[17;3~";
+static char xterm_256color_s_kf55[] = "\033[18;3~";
+static char xterm_256color_s_kf56[] = "\033[19;3~";
+static char xterm_256color_s_kf57[] = "\033[20;3~";
+static char xterm_256color_s_kf58[] = "\033[21;3~";
+static char xterm_256color_s_kf59[] = "\033[23;3~";
+static char xterm_256color_s_kf60[] = "\033[24;3~";
+static char xterm_256color_s_kf61[] = "\033[1;4P";
+static char xterm_256color_s_kf62[] = "\033[1;4Q";
+static char xterm_256color_s_kf63[] = "\033[1;4R";
+static char xterm_256color_s_el1[] = "\033[1K";
+static char xterm_256color_s_u6 [] = "\033[%i%d;%dR";
+static char xterm_256color_s_u7 [] = "\033[6n";
+static char xterm_256color_s_u8 [] = "\033[?%[;0123456789]c";
+static char xterm_256color_s_u9 [] = "\033[c";
+static char xterm_256color_s_op [] = "\033[39;49m";
+static char xterm_256color_s_oc [] = "\033]104\007";
+static char xterm_256color_s_initc[] = "\033]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X\033\134";
+static char xterm_256color_s_sitm[] = "\033[3m";
+static char xterm_256color_s_ritm[] = "\033[23m";
+static char xterm_256color_s_kmous[] = "\033[<";
+static char xterm_256color_s_setaf[] = "\033[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m";
+static char xterm_256color_s_setab[] = "\033[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m";
+static char xterm_256color_s_meml[] = "\033l";
+static char xterm_256color_s_memu[] = "\033m";
+
+static char xterm_256color_bool_data[] = {
+	/*   0: bw       */	FALSE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	TRUE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	TRUE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	TRUE,
+	/*  28: bce      */	TRUE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 xterm_256color_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	256,
+	/*  14: pairs    */	32767,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * xterm_256color_string_data[] = {
+	/*   0: cbt      */	xterm_256color_s_cbt,
+	/*   1: bel      */	xterm_256color_s_bel,
+	/*   2: cr       */	xterm_256color_s_cr,
+	/*   3: csr      */	xterm_256color_s_csr,
+	/*   4: tbc      */	xterm_256color_s_tbc,
+	/*   5: clear    */	xterm_256color_s_clear,
+	/*   6: el       */	xterm_256color_s_el,
+	/*   7: ed       */	xterm_256color_s_ed,
+	/*   8: hpa      */	xterm_256color_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	xterm_256color_s_cup,
+	/*  11: cud1     */	xterm_256color_s_cud1,
+	/*  12: home     */	xterm_256color_s_home,
+	/*  13: civis    */	xterm_256color_s_civis,
+	/*  14: cub1     */	xterm_256color_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	xterm_256color_s_cnorm,
+	/*  17: cuf1     */	xterm_256color_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	xterm_256color_s_cuu1,
+	/*  20: cvvis    */	xterm_256color_s_cvvis,
+	/*  21: dch1     */	xterm_256color_s_dch1,
+	/*  22: dl1      */	xterm_256color_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	xterm_256color_s_smacs,
+	/*  26: blink    */	xterm_256color_s_blink,
+	/*  27: bold     */	xterm_256color_s_bold,
+	/*  28: smcup    */	xterm_256color_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	xterm_256color_s_dim,
+	/*  31: smir     */	xterm_256color_s_smir,
+	/*  32: invis    */	xterm_256color_s_invis,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	xterm_256color_s_rev,
+	/*  35: smso     */	xterm_256color_s_smso,
+	/*  36: smul     */	xterm_256color_s_smul,
+	/*  37: ech      */	xterm_256color_s_ech,
+	/*  38: rmacs    */	xterm_256color_s_rmacs,
+	/*  39: sgr0     */	xterm_256color_s_sgr0,
+	/*  40: rmcup    */	xterm_256color_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	xterm_256color_s_rmir,
+	/*  43: rmso     */	xterm_256color_s_rmso,
+	/*  44: rmul     */	xterm_256color_s_rmul,
+	/*  45: flash    */	xterm_256color_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	xterm_256color_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	xterm_256color_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	xterm_256color_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	xterm_256color_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	xterm_256color_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	xterm_256color_s_kf1,
+	/*  67: kf10     */	xterm_256color_s_kf10,
+	/*  68: kf2      */	xterm_256color_s_kf2,
+	/*  69: kf3      */	xterm_256color_s_kf3,
+	/*  70: kf4      */	xterm_256color_s_kf4,
+	/*  71: kf5      */	xterm_256color_s_kf5,
+	/*  72: kf6      */	xterm_256color_s_kf6,
+	/*  73: kf7      */	xterm_256color_s_kf7,
+	/*  74: kf8      */	xterm_256color_s_kf8,
+	/*  75: kf9      */	xterm_256color_s_kf9,
+	/*  76: khome    */	xterm_256color_s_khome,
+	/*  77: kich1    */	xterm_256color_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	xterm_256color_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	xterm_256color_s_knp,
+	/*  82: kpp      */	xterm_256color_s_kpp,
+	/*  83: kcuf1    */	xterm_256color_s_kcuf1,
+	/*  84: kind     */	xterm_256color_s_kind,
+	/*  85: kri      */	xterm_256color_s_kri,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	xterm_256color_s_kcuu1,
+	/*  88: rmkx     */	xterm_256color_s_rmkx,
+	/*  89: smkx     */	xterm_256color_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	xterm_256color_s_rmm,
+	/* 102: smm      */	xterm_256color_s_smm,
+	/* 103: nel      */	ABSENT_STRING,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	xterm_256color_s_dch,
+	/* 106: dl       */	xterm_256color_s_dl,
+	/* 107: cud      */	xterm_256color_s_cud,
+	/* 108: ich      */	xterm_256color_s_ich,
+	/* 109: indn     */	xterm_256color_s_indn,
+	/* 110: il       */	xterm_256color_s_il,
+	/* 111: cub      */	xterm_256color_s_cub,
+	/* 112: cuf      */	xterm_256color_s_cuf,
+	/* 113: rin      */	xterm_256color_s_rin,
+	/* 114: cuu      */	xterm_256color_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	xterm_256color_s_mc0,
+	/* 119: mc4      */	xterm_256color_s_mc4,
+	/* 120: mc5      */	xterm_256color_s_mc5,
+	/* 121: rep      */	xterm_256color_s_rep,
+	/* 122: rs1      */	xterm_256color_s_rs1,
+	/* 123: rs2      */	xterm_256color_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	xterm_256color_s_rc,
+	/* 127: vpa      */	xterm_256color_s_vpa,
+	/* 128: sc       */	xterm_256color_s_sc,
+	/* 129: ind      */	xterm_256color_s_ind,
+	/* 130: ri       */	xterm_256color_s_ri,
+	/* 131: sgr      */	xterm_256color_s_sgr,
+	/* 132: hts      */	xterm_256color_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	xterm_256color_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	xterm_256color_s_kb2,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	xterm_256color_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	xterm_256color_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	xterm_256color_s_smam,
+	/* 152: rmam     */	xterm_256color_s_rmam,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	ABSENT_STRING,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	xterm_256color_s_kend,
+	/* 165: kent     */	xterm_256color_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	xterm_256color_s_kDC,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	xterm_256color_s_kEND,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	xterm_256color_s_kHOM,
+	/* 200: kIC      */	xterm_256color_s_kIC,
+	/* 201: kLFT     */	xterm_256color_s_kLFT,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	xterm_256color_s_kNXT,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	xterm_256color_s_kPRV,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	xterm_256color_s_kRIT,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	xterm_256color_s_kf11,
+	/* 217: kf12     */	xterm_256color_s_kf12,
+	/* 218: kf13     */	xterm_256color_s_kf13,
+	/* 219: kf14     */	xterm_256color_s_kf14,
+	/* 220: kf15     */	xterm_256color_s_kf15,
+	/* 221: kf16     */	xterm_256color_s_kf16,
+	/* 222: kf17     */	xterm_256color_s_kf17,
+	/* 223: kf18     */	xterm_256color_s_kf18,
+	/* 224: kf19     */	xterm_256color_s_kf19,
+	/* 225: kf20     */	xterm_256color_s_kf20,
+	/* 226: kf21     */	xterm_256color_s_kf21,
+	/* 227: kf22     */	xterm_256color_s_kf22,
+	/* 228: kf23     */	xterm_256color_s_kf23,
+	/* 229: kf24     */	xterm_256color_s_kf24,
+	/* 230: kf25     */	xterm_256color_s_kf25,
+	/* 231: kf26     */	xterm_256color_s_kf26,
+	/* 232: kf27     */	xterm_256color_s_kf27,
+	/* 233: kf28     */	xterm_256color_s_kf28,
+	/* 234: kf29     */	xterm_256color_s_kf29,
+	/* 235: kf30     */	xterm_256color_s_kf30,
+	/* 236: kf31     */	xterm_256color_s_kf31,
+	/* 237: kf32     */	xterm_256color_s_kf32,
+	/* 238: kf33     */	xterm_256color_s_kf33,
+	/* 239: kf34     */	xterm_256color_s_kf34,
+	/* 240: kf35     */	xterm_256color_s_kf35,
+	/* 241: kf36     */	xterm_256color_s_kf36,
+	/* 242: kf37     */	xterm_256color_s_kf37,
+	/* 243: kf38     */	xterm_256color_s_kf38,
+	/* 244: kf39     */	xterm_256color_s_kf39,
+	/* 245: kf40     */	xterm_256color_s_kf40,
+	/* 246: kf41     */	xterm_256color_s_kf41,
+	/* 247: kf42     */	xterm_256color_s_kf42,
+	/* 248: kf43     */	xterm_256color_s_kf43,
+	/* 249: kf44     */	xterm_256color_s_kf44,
+	/* 250: kf45     */	xterm_256color_s_kf45,
+	/* 251: kf46     */	xterm_256color_s_kf46,
+	/* 252: kf47     */	xterm_256color_s_kf47,
+	/* 253: kf48     */	xterm_256color_s_kf48,
+	/* 254: kf49     */	xterm_256color_s_kf49,
+	/* 255: kf50     */	xterm_256color_s_kf50,
+	/* 256: kf51     */	xterm_256color_s_kf51,
+	/* 257: kf52     */	xterm_256color_s_kf52,
+	/* 258: kf53     */	xterm_256color_s_kf53,
+	/* 259: kf54     */	xterm_256color_s_kf54,
+	/* 260: kf55     */	xterm_256color_s_kf55,
+	/* 261: kf56     */	xterm_256color_s_kf56,
+	/* 262: kf57     */	xterm_256color_s_kf57,
+	/* 263: kf58     */	xterm_256color_s_kf58,
+	/* 264: kf59     */	xterm_256color_s_kf59,
+	/* 265: kf60     */	xterm_256color_s_kf60,
+	/* 266: kf61     */	xterm_256color_s_kf61,
+	/* 267: kf62     */	xterm_256color_s_kf62,
+	/* 268: kf63     */	xterm_256color_s_kf63,
+	/* 269: el1      */	xterm_256color_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	xterm_256color_s_u6,
+	/* 294: u7       */	xterm_256color_s_u7,
+	/* 295: u8       */	xterm_256color_s_u8,
+	/* 296: u9       */	xterm_256color_s_u9,
+	/* 297: op       */	xterm_256color_s_op,
+	/* 298: oc       */	xterm_256color_s_oc,
+	/* 299: initc    */	xterm_256color_s_initc,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	xterm_256color_s_sitm,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	xterm_256color_s_ritm,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	xterm_256color_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	xterm_256color_s_setaf,
+	/* 360: setab    */	xterm_256color_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	xterm_256color_s_meml,
+	/* 412: memu     */	xterm_256color_s_memu,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* screen */
+
+static char screen_alias_data[] = "screen|VT 100/ANSI X3.64 virtual terminal";
+
+static char screen_s_cbt        [] = "\033[Z";
+static char screen_s_bel        [] = "\007";
+static char screen_s_cr         [] = "\015";
+static char screen_s_csr        [] = "\033[%i%p1%d;%p2%dr";
+static char screen_s_tbc        [] = "\033[3g";
+static char screen_s_clear      [] = "\033[H\033[J";
+static char screen_s_el         [] = "\033[K";
+static char screen_s_ed         [] = "\033[J";
+static char screen_s_hpa        [] = "\033[%i%p1%dG";
+static char screen_s_cup        [] = "\033[%i%p1%d;%p2%dH";
+static char screen_s_cud1       [] = "\012";
+static char screen_s_home       [] = "\033[H";
+static char screen_s_civis      [] = "\033[?25l";
+static char screen_s_cub1       [] = "\010";
+static char screen_s_cnorm      [] = "\033[34h\033[?25h";
+static char screen_s_cuf1       [] = "\033[C";
+static char screen_s_cuu1       [] = "\033M";
+static char screen_s_cvvis      [] = "\033[34l";
+static char screen_s_dch1       [] = "\033[P";
+static char screen_s_dl1        [] = "\033[M";
+static char screen_s_smacs      [] = "\016";
+static char screen_s_blink      [] = "\033[5m";
+static char screen_s_bold       [] = "\033[1m";
+static char screen_s_smcup      [] = "\033[?1049h";
+static char screen_s_dim        [] = "\033[2m";
+static char screen_s_smir       [] = "\033[4h";
+static char screen_s_rev        [] = "\033[7m";
+static char screen_s_smso       [] = "\033[3m";
+static char screen_s_smul       [] = "\033[4m";
+static char screen_s_rmacs      [] = "\017";
+static char screen_s_sgr0       [] = "\033[m\017";
+static char screen_s_rmcup      [] = "\033[?1049l";
+static char screen_s_rmir       [] = "\033[4l";
+static char screen_s_rmso       [] = "\033[23m";
+static char screen_s_rmul       [] = "\033[24m";
+static char screen_s_flash      [] = "\033g";
+static char screen_s_is2        [] = "\033)0";
+static char screen_s_il1        [] = "\033[L";
+static char screen_s_kbs        [] = "\010";
+static char screen_s_kdch1      [] = "\033[3~";
+static char screen_s_kcud1      [] = "\033OB";
+static char screen_s_kf1        [] = "\033OP";
+static char screen_s_kf10       [] = "\033[21~";
+static char screen_s_kf2        [] = "\033OQ";
+static char screen_s_kf3        [] = "\033OR";
+static char screen_s_kf4        [] = "\033OS";
+static char screen_s_kf5        [] = "\033[15~";
+static char screen_s_kf6        [] = "\033[17~";
+static char screen_s_kf7        [] = "\033[18~";
+static char screen_s_kf8        [] = "\033[19~";
+static char screen_s_kf9        [] = "\033[20~";
+static char screen_s_khome      [] = "\033[1~";
+static char screen_s_kich1      [] = "\033[2~";
+static char screen_s_kcub1      [] = "\033OD";
+static char screen_s_knp        [] = "\033[6~";
+static char screen_s_kpp        [] = "\033[5~";
+static char screen_s_kcuf1      [] = "\033OC";
+static char screen_s_kcuu1      [] = "\033OA";
+static char screen_s_rmkx       [] = "\033[?1l\033>";
+static char screen_s_smkx       [] = "\033[?1h\033=";
+static char screen_s_nel        [] = "\033E";
+static char screen_s_dch        [] = "\033[%p1%dP";
+static char screen_s_dl         [] = "\033[%p1%dM";
+static char screen_s_cud        [] = "\033[%p1%dB";
+static char screen_s_ich        [] = "\033[%p1%d@";
+static char screen_s_indn       [] = "\033[%p1%dS";
+static char screen_s_il         [] = "\033[%p1%dL";
+static char screen_s_cub        [] = "\033[%p1%dD";
+static char screen_s_cuf        [] = "\033[%p1%dC";
+static char screen_s_cuu        [] = "\033[%p1%dA";
+static char screen_s_rs2        [] = "\033c\033[?1000l\033[?25h";
+static char screen_s_rc         [] = "\0338";
+static char screen_s_vpa        [] = "\033[%i%p1%dd";
+static char screen_s_sc         [] = "\0337";
+static char screen_s_ind        [] = "\012";
+static char screen_s_ri         [] = "\033M";
+static char screen_s_sgr        [] = "\033[0%?%p6%t;1%;%?%p1%t;3%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p5%t;2%;m%?%p9%t\016%e\017%;";
+static char screen_s_hts        [] = "\033H";
+static char screen_s_ht         [] = "\011";
+static char screen_s_acsc       [] = "++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char screen_s_kcbt       [] = "\033[Z";
+static char screen_s_enacs      [] = "\033(B\033)0";
+static char screen_s_kend       [] = "\033[4~";
+static char screen_s_kf11       [] = "\033[23~";
+static char screen_s_kf12       [] = "\033[24~";
+static char screen_s_el1        [] = "\033[1K";
+static char screen_s_op         [] = "\033[39;49m";
+static char screen_s_kmous      [] = "\033[M";
+static char screen_s_setaf      [] = "\033[3%p1%dm";
+static char screen_s_setab      [] = "\033[4%p1%dm";
+
+static char screen_bool_data[] = {
+	/*   0: bw       */	FALSE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	FALSE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	FALSE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	FALSE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	TRUE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 screen_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	CANCELLED_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * screen_string_data[] = {
+	/*   0: cbt      */	screen_s_cbt,
+	/*   1: bel      */	screen_s_bel,
+	/*   2: cr       */	screen_s_cr,
+	/*   3: csr      */	screen_s_csr,
+	/*   4: tbc      */	screen_s_tbc,
+	/*   5: clear    */	screen_s_clear,
+	/*   6: el       */	screen_s_el,
+	/*   7: ed       */	screen_s_ed,
+	/*   8: hpa      */	screen_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	screen_s_cup,
+	/*  11: cud1     */	screen_s_cud1,
+	/*  12: home     */	screen_s_home,
+	/*  13: civis    */	screen_s_civis,
+	/*  14: cub1     */	screen_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	screen_s_cnorm,
+	/*  17: cuf1     */	screen_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	screen_s_cuu1,
+	/*  20: cvvis    */	screen_s_cvvis,
+	/*  21: dch1     */	screen_s_dch1,
+	/*  22: dl1      */	screen_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	screen_s_smacs,
+	/*  26: blink    */	screen_s_blink,
+	/*  27: bold     */	screen_s_bold,
+	/*  28: smcup    */	screen_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	screen_s_dim,
+	/*  31: smir     */	screen_s_smir,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	screen_s_rev,
+	/*  35: smso     */	screen_s_smso,
+	/*  36: smul     */	screen_s_smul,
+	/*  37: ech      */	ABSENT_STRING,
+	/*  38: rmacs    */	screen_s_rmacs,
+	/*  39: sgr0     */	screen_s_sgr0,
+	/*  40: rmcup    */	screen_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	screen_s_rmir,
+	/*  43: rmso     */	screen_s_rmso,
+	/*  44: rmul     */	screen_s_rmul,
+	/*  45: flash    */	screen_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	screen_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	screen_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	screen_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	screen_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	screen_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	screen_s_kf1,
+	/*  67: kf10     */	screen_s_kf10,
+	/*  68: kf2      */	screen_s_kf2,
+	/*  69: kf3      */	screen_s_kf3,
+	/*  70: kf4      */	screen_s_kf4,
+	/*  71: kf5      */	screen_s_kf5,
+	/*  72: kf6      */	screen_s_kf6,
+	/*  73: kf7      */	screen_s_kf7,
+	/*  74: kf8      */	screen_s_kf8,
+	/*  75: kf9      */	screen_s_kf9,
+	/*  76: khome    */	screen_s_khome,
+	/*  77: kich1    */	screen_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	screen_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	screen_s_knp,
+	/*  82: kpp      */	screen_s_kpp,
+	/*  83: kcuf1    */	screen_s_kcuf1,
+	/*  84: kind     */	ABSENT_STRING,
+	/*  85: kri      */	ABSENT_STRING,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	screen_s_kcuu1,
+	/*  88: rmkx     */	screen_s_rmkx,
+	/*  89: smkx     */	screen_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	ABSENT_STRING,
+	/* 102: smm      */	ABSENT_STRING,
+	/* 103: nel      */	screen_s_nel,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	screen_s_dch,
+	/* 106: dl       */	screen_s_dl,
+	/* 107: cud      */	screen_s_cud,
+	/* 108: ich      */	screen_s_ich,
+	/* 109: indn     */	screen_s_indn,
+	/* 110: il       */	screen_s_il,
+	/* 111: cub      */	screen_s_cub,
+	/* 112: cuf      */	screen_s_cuf,
+	/* 113: rin      */	ABSENT_STRING,
+	/* 114: cuu      */	screen_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	ABSENT_STRING,
+	/* 119: mc4      */	ABSENT_STRING,
+	/* 120: mc5      */	ABSENT_STRING,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	ABSENT_STRING,
+	/* 123: rs2      */	screen_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	screen_s_rc,
+	/* 127: vpa      */	screen_s_vpa,
+	/* 128: sc       */	screen_s_sc,
+	/* 129: ind      */	screen_s_ind,
+	/* 130: ri       */	screen_s_ri,
+	/* 131: sgr      */	screen_s_sgr,
+	/* 132: hts      */	screen_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	screen_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	ABSENT_STRING,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	screen_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	screen_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	ABSENT_STRING,
+	/* 152: rmam     */	ABSENT_STRING,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	screen_s_enacs,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	screen_s_kend,
+	/* 165: kent     */	ABSENT_STRING,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	ABSENT_STRING,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	ABSENT_STRING,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	ABSENT_STRING,
+	/* 200: kIC      */	ABSENT_STRING,
+	/* 201: kLFT     */	ABSENT_STRING,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	ABSENT_STRING,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	ABSENT_STRING,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	ABSENT_STRING,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	screen_s_kf11,
+	/* 217: kf12     */	screen_s_kf12,
+	/* 218: kf13     */	ABSENT_STRING,
+	/* 219: kf14     */	ABSENT_STRING,
+	/* 220: kf15     */	ABSENT_STRING,
+	/* 221: kf16     */	ABSENT_STRING,
+	/* 222: kf17     */	ABSENT_STRING,
+	/* 223: kf18     */	ABSENT_STRING,
+	/* 224: kf19     */	ABSENT_STRING,
+	/* 225: kf20     */	ABSENT_STRING,
+	/* 226: kf21     */	ABSENT_STRING,
+	/* 227: kf22     */	ABSENT_STRING,
+	/* 228: kf23     */	ABSENT_STRING,
+	/* 229: kf24     */	ABSENT_STRING,
+	/* 230: kf25     */	ABSENT_STRING,
+	/* 231: kf26     */	ABSENT_STRING,
+	/* 232: kf27     */	ABSENT_STRING,
+	/* 233: kf28     */	ABSENT_STRING,
+	/* 234: kf29     */	ABSENT_STRING,
+	/* 235: kf30     */	ABSENT_STRING,
+	/* 236: kf31     */	ABSENT_STRING,
+	/* 237: kf32     */	ABSENT_STRING,
+	/* 238: kf33     */	ABSENT_STRING,
+	/* 239: kf34     */	ABSENT_STRING,
+	/* 240: kf35     */	ABSENT_STRING,
+	/* 241: kf36     */	ABSENT_STRING,
+	/* 242: kf37     */	ABSENT_STRING,
+	/* 243: kf38     */	ABSENT_STRING,
+	/* 244: kf39     */	ABSENT_STRING,
+	/* 245: kf40     */	ABSENT_STRING,
+	/* 246: kf41     */	ABSENT_STRING,
+	/* 247: kf42     */	ABSENT_STRING,
+	/* 248: kf43     */	ABSENT_STRING,
+	/* 249: kf44     */	ABSENT_STRING,
+	/* 250: kf45     */	ABSENT_STRING,
+	/* 251: kf46     */	ABSENT_STRING,
+	/* 252: kf47     */	ABSENT_STRING,
+	/* 253: kf48     */	ABSENT_STRING,
+	/* 254: kf49     */	ABSENT_STRING,
+	/* 255: kf50     */	ABSENT_STRING,
+	/* 256: kf51     */	ABSENT_STRING,
+	/* 257: kf52     */	ABSENT_STRING,
+	/* 258: kf53     */	ABSENT_STRING,
+	/* 259: kf54     */	ABSENT_STRING,
+	/* 260: kf55     */	ABSENT_STRING,
+	/* 261: kf56     */	ABSENT_STRING,
+	/* 262: kf57     */	ABSENT_STRING,
+	/* 263: kf58     */	ABSENT_STRING,
+	/* 264: kf59     */	ABSENT_STRING,
+	/* 265: kf60     */	ABSENT_STRING,
+	/* 266: kf61     */	ABSENT_STRING,
+	/* 267: kf62     */	ABSENT_STRING,
+	/* 268: kf63     */	ABSENT_STRING,
+	/* 269: el1      */	screen_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	ABSENT_STRING,
+	/* 294: u7       */	ABSENT_STRING,
+	/* 295: u8       */	ABSENT_STRING,
+	/* 296: u9       */	ABSENT_STRING,
+	/* 297: op       */	screen_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	screen_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	screen_s_setaf,
+	/* 360: setab    */	screen_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* screen.linux */
+
+static char screen_linux_alias_data[] = "screen.linux|screen in linux console";
+
+static char screen_linux_s_cbt  [] = "\033[Z";
+static char screen_linux_s_bel  [] = "\007";
+static char screen_linux_s_cr   [] = "\015";
+static char screen_linux_s_csr  [] = "\033[%i%p1%d;%p2%dr";
+static char screen_linux_s_tbc  [] = "\033[3g";
+static char screen_linux_s_clear[] = "\033[H\033[J";
+static char screen_linux_s_el   [] = "\033[K";
+static char screen_linux_s_ed   [] = "\033[J";
+static char screen_linux_s_hpa  [] = "\033[%i%p1%dG";
+static char screen_linux_s_cup  [] = "\033[%i%p1%d;%p2%dH";
+static char screen_linux_s_cud1 [] = "\012";
+static char screen_linux_s_home [] = "\033[H";
+static char screen_linux_s_civis[] = "\033[?25l";
+static char screen_linux_s_cub1 [] = "\010";
+static char screen_linux_s_cnorm[] = "\033[34h\033[?25h";
+static char screen_linux_s_cuf1 [] = "\033[C";
+static char screen_linux_s_cuu1 [] = "\033M";
+static char screen_linux_s_cvvis[] = "\033[34l";
+static char screen_linux_s_dch1 [] = "\033[P";
+static char screen_linux_s_dl1  [] = "\033[M";
+static char screen_linux_s_smacs[] = "\016";
+static char screen_linux_s_blink[] = "\033[5m";
+static char screen_linux_s_bold [] = "\033[1m";
+static char screen_linux_s_smcup[] = "\033[?1049h";
+static char screen_linux_s_dim  [] = "\033[2m";
+static char screen_linux_s_smir [] = "\033[4h";
+static char screen_linux_s_rev  [] = "\033[7m";
+static char screen_linux_s_smso [] = "\033[3m";
+static char screen_linux_s_smul [] = "\033[4m";
+static char screen_linux_s_rmacs[] = "\017";
+static char screen_linux_s_sgr0 [] = "\033[m\017";
+static char screen_linux_s_rmcup[] = "\033[?1049l";
+static char screen_linux_s_rmir [] = "\033[4l";
+static char screen_linux_s_rmso [] = "\033[23m";
+static char screen_linux_s_rmul [] = "\033[24m";
+static char screen_linux_s_flash[] = "\033g";
+static char screen_linux_s_is2  [] = "\033)0";
+static char screen_linux_s_il1  [] = "\033[L";
+static char screen_linux_s_kbs  [] = "\177";
+static char screen_linux_s_kdch1[] = "\033[3~";
+static char screen_linux_s_kcud1[] = "\033OB";
+static char screen_linux_s_kf1  [] = "\033OP";
+static char screen_linux_s_kf10 [] = "\033[21~";
+static char screen_linux_s_kf2  [] = "\033OQ";
+static char screen_linux_s_kf3  [] = "\033OR";
+static char screen_linux_s_kf4  [] = "\033OS";
+static char screen_linux_s_kf5  [] = "\033[15~";
+static char screen_linux_s_kf6  [] = "\033[17~";
+static char screen_linux_s_kf7  [] = "\033[18~";
+static char screen_linux_s_kf8  [] = "\033[19~";
+static char screen_linux_s_kf9  [] = "\033[20~";
+static char screen_linux_s_khome[] = "\033[1~";
+static char screen_linux_s_kich1[] = "\033[2~";
+static char screen_linux_s_kcub1[] = "\033OD";
+static char screen_linux_s_knp  [] = "\033[6~";
+static char screen_linux_s_kpp  [] = "\033[5~";
+static char screen_linux_s_kcuf1[] = "\033OC";
+static char screen_linux_s_kcuu1[] = "\033OA";
+static char screen_linux_s_rmkx [] = "\033[?1l\033>";
+static char screen_linux_s_smkx [] = "\033[?1h\033=";
+static char screen_linux_s_nel  [] = "\033E";
+static char screen_linux_s_dch  [] = "\033[%p1%dP";
+static char screen_linux_s_dl   [] = "\033[%p1%dM";
+static char screen_linux_s_cud  [] = "\033[%p1%dB";
+static char screen_linux_s_ich  [] = "\033[%p1%d@";
+static char screen_linux_s_indn [] = "\033[%p1%dS";
+static char screen_linux_s_il   [] = "\033[%p1%dL";
+static char screen_linux_s_cub  [] = "\033[%p1%dD";
+static char screen_linux_s_cuf  [] = "\033[%p1%dC";
+static char screen_linux_s_cuu  [] = "\033[%p1%dA";
+static char screen_linux_s_rs2  [] = "\033c\033[?1000l\033[?25h";
+static char screen_linux_s_rc   [] = "\0338";
+static char screen_linux_s_vpa  [] = "\033[%i%p1%dd";
+static char screen_linux_s_sc   [] = "\0337";
+static char screen_linux_s_ind  [] = "\012";
+static char screen_linux_s_ri   [] = "\033M";
+static char screen_linux_s_sgr  [] = "\033[0%?%p6%t;1%;%?%p1%t;3%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p5%t;2%;m%?%p9%t\016%e\017%;";
+static char screen_linux_s_hts  [] = "\033H";
+static char screen_linux_s_ht   [] = "\011";
+static char screen_linux_s_acsc [] = "++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char screen_linux_s_enacs[] = "\033(B\033)0";
+static char screen_linux_s_kend [] = "\033[4~";
+static char screen_linux_s_kf11 [] = "\033[23~";
+static char screen_linux_s_kf12 [] = "\033[24~";
+static char screen_linux_s_el1  [] = "\033[1K";
+static char screen_linux_s_op   [] = "\033[39;49m";
+static char screen_linux_s_kmous[] = "\033[M";
+static char screen_linux_s_setaf[] = "\033[3%p1%dm";
+static char screen_linux_s_setab[] = "\033[4%p1%dm";
+
+static char screen_linux_bool_data[] = {
+	/*   0: bw       */	TRUE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	FALSE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	FALSE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	FALSE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	TRUE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 screen_linux_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * screen_linux_string_data[] = {
+	/*   0: cbt      */	screen_linux_s_cbt,
+	/*   1: bel      */	screen_linux_s_bel,
+	/*   2: cr       */	screen_linux_s_cr,
+	/*   3: csr      */	screen_linux_s_csr,
+	/*   4: tbc      */	screen_linux_s_tbc,
+	/*   5: clear    */	screen_linux_s_clear,
+	/*   6: el       */	screen_linux_s_el,
+	/*   7: ed       */	screen_linux_s_ed,
+	/*   8: hpa      */	screen_linux_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	screen_linux_s_cup,
+	/*  11: cud1     */	screen_linux_s_cud1,
+	/*  12: home     */	screen_linux_s_home,
+	/*  13: civis    */	screen_linux_s_civis,
+	/*  14: cub1     */	screen_linux_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	screen_linux_s_cnorm,
+	/*  17: cuf1     */	screen_linux_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	screen_linux_s_cuu1,
+	/*  20: cvvis    */	screen_linux_s_cvvis,
+	/*  21: dch1     */	screen_linux_s_dch1,
+	/*  22: dl1      */	screen_linux_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	screen_linux_s_smacs,
+	/*  26: blink    */	screen_linux_s_blink,
+	/*  27: bold     */	screen_linux_s_bold,
+	/*  28: smcup    */	screen_linux_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	screen_linux_s_dim,
+	/*  31: smir     */	screen_linux_s_smir,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	screen_linux_s_rev,
+	/*  35: smso     */	screen_linux_s_smso,
+	/*  36: smul     */	screen_linux_s_smul,
+	/*  37: ech      */	ABSENT_STRING,
+	/*  38: rmacs    */	screen_linux_s_rmacs,
+	/*  39: sgr0     */	screen_linux_s_sgr0,
+	/*  40: rmcup    */	screen_linux_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	screen_linux_s_rmir,
+	/*  43: rmso     */	screen_linux_s_rmso,
+	/*  44: rmul     */	screen_linux_s_rmul,
+	/*  45: flash    */	screen_linux_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	screen_linux_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	screen_linux_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	screen_linux_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	screen_linux_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	screen_linux_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	screen_linux_s_kf1,
+	/*  67: kf10     */	screen_linux_s_kf10,
+	/*  68: kf2      */	screen_linux_s_kf2,
+	/*  69: kf3      */	screen_linux_s_kf3,
+	/*  70: kf4      */	screen_linux_s_kf4,
+	/*  71: kf5      */	screen_linux_s_kf5,
+	/*  72: kf6      */	screen_linux_s_kf6,
+	/*  73: kf7      */	screen_linux_s_kf7,
+	/*  74: kf8      */	screen_linux_s_kf8,
+	/*  75: kf9      */	screen_linux_s_kf9,
+	/*  76: khome    */	screen_linux_s_khome,
+	/*  77: kich1    */	screen_linux_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	screen_linux_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	screen_linux_s_knp,
+	/*  82: kpp      */	screen_linux_s_kpp,
+	/*  83: kcuf1    */	screen_linux_s_kcuf1,
+	/*  84: kind     */	ABSENT_STRING,
+	/*  85: kri      */	ABSENT_STRING,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	screen_linux_s_kcuu1,
+	/*  88: rmkx     */	screen_linux_s_rmkx,
+	/*  89: smkx     */	screen_linux_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	ABSENT_STRING,
+	/* 102: smm      */	ABSENT_STRING,
+	/* 103: nel      */	screen_linux_s_nel,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	screen_linux_s_dch,
+	/* 106: dl       */	screen_linux_s_dl,
+	/* 107: cud      */	screen_linux_s_cud,
+	/* 108: ich      */	screen_linux_s_ich,
+	/* 109: indn     */	screen_linux_s_indn,
+	/* 110: il       */	screen_linux_s_il,
+	/* 111: cub      */	screen_linux_s_cub,
+	/* 112: cuf      */	screen_linux_s_cuf,
+	/* 113: rin      */	ABSENT_STRING,
+	/* 114: cuu      */	screen_linux_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	ABSENT_STRING,
+	/* 119: mc4      */	ABSENT_STRING,
+	/* 120: mc5      */	ABSENT_STRING,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	ABSENT_STRING,
+	/* 123: rs2      */	screen_linux_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	screen_linux_s_rc,
+	/* 127: vpa      */	screen_linux_s_vpa,
+	/* 128: sc       */	screen_linux_s_sc,
+	/* 129: ind      */	screen_linux_s_ind,
+	/* 130: ri       */	screen_linux_s_ri,
+	/* 131: sgr      */	screen_linux_s_sgr,
+	/* 132: hts      */	screen_linux_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	screen_linux_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	ABSENT_STRING,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	screen_linux_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	CANCELLED_STRING,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	ABSENT_STRING,
+	/* 152: rmam     */	ABSENT_STRING,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	screen_linux_s_enacs,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	screen_linux_s_kend,
+	/* 165: kent     */	ABSENT_STRING,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	ABSENT_STRING,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	ABSENT_STRING,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	ABSENT_STRING,
+	/* 200: kIC      */	ABSENT_STRING,
+	/* 201: kLFT     */	ABSENT_STRING,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	ABSENT_STRING,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	ABSENT_STRING,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	ABSENT_STRING,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	screen_linux_s_kf11,
+	/* 217: kf12     */	screen_linux_s_kf12,
+	/* 218: kf13     */	ABSENT_STRING,
+	/* 219: kf14     */	ABSENT_STRING,
+	/* 220: kf15     */	ABSENT_STRING,
+	/* 221: kf16     */	ABSENT_STRING,
+	/* 222: kf17     */	ABSENT_STRING,
+	/* 223: kf18     */	ABSENT_STRING,
+	/* 224: kf19     */	ABSENT_STRING,
+	/* 225: kf20     */	ABSENT_STRING,
+	/* 226: kf21     */	ABSENT_STRING,
+	/* 227: kf22     */	ABSENT_STRING,
+	/* 228: kf23     */	ABSENT_STRING,
+	/* 229: kf24     */	ABSENT_STRING,
+	/* 230: kf25     */	ABSENT_STRING,
+	/* 231: kf26     */	ABSENT_STRING,
+	/* 232: kf27     */	ABSENT_STRING,
+	/* 233: kf28     */	ABSENT_STRING,
+	/* 234: kf29     */	ABSENT_STRING,
+	/* 235: kf30     */	ABSENT_STRING,
+	/* 236: kf31     */	ABSENT_STRING,
+	/* 237: kf32     */	ABSENT_STRING,
+	/* 238: kf33     */	ABSENT_STRING,
+	/* 239: kf34     */	ABSENT_STRING,
+	/* 240: kf35     */	ABSENT_STRING,
+	/* 241: kf36     */	ABSENT_STRING,
+	/* 242: kf37     */	ABSENT_STRING,
+	/* 243: kf38     */	ABSENT_STRING,
+	/* 244: kf39     */	ABSENT_STRING,
+	/* 245: kf40     */	ABSENT_STRING,
+	/* 246: kf41     */	ABSENT_STRING,
+	/* 247: kf42     */	ABSENT_STRING,
+	/* 248: kf43     */	ABSENT_STRING,
+	/* 249: kf44     */	ABSENT_STRING,
+	/* 250: kf45     */	ABSENT_STRING,
+	/* 251: kf46     */	ABSENT_STRING,
+	/* 252: kf47     */	ABSENT_STRING,
+	/* 253: kf48     */	ABSENT_STRING,
+	/* 254: kf49     */	ABSENT_STRING,
+	/* 255: kf50     */	ABSENT_STRING,
+	/* 256: kf51     */	ABSENT_STRING,
+	/* 257: kf52     */	ABSENT_STRING,
+	/* 258: kf53     */	ABSENT_STRING,
+	/* 259: kf54     */	ABSENT_STRING,
+	/* 260: kf55     */	ABSENT_STRING,
+	/* 261: kf56     */	ABSENT_STRING,
+	/* 262: kf57     */	ABSENT_STRING,
+	/* 263: kf58     */	ABSENT_STRING,
+	/* 264: kf59     */	ABSENT_STRING,
+	/* 265: kf60     */	ABSENT_STRING,
+	/* 266: kf61     */	ABSENT_STRING,
+	/* 267: kf62     */	ABSENT_STRING,
+	/* 268: kf63     */	ABSENT_STRING,
+	/* 269: el1      */	screen_linux_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	ABSENT_STRING,
+	/* 294: u7       */	ABSENT_STRING,
+	/* 295: u8       */	ABSENT_STRING,
+	/* 296: u9       */	ABSENT_STRING,
+	/* 297: op       */	screen_linux_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	screen_linux_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	screen_linux_s_setaf,
+	/* 360: setab    */	screen_linux_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* screen.rxvt */
+
+static char screen_rxvt_alias_data[] = "screen.rxvt|screen in rxvt";
+
+static char screen_rxvt_s_cbt   [] = "\033[Z";
+static char screen_rxvt_s_bel   [] = "\007";
+static char screen_rxvt_s_cr    [] = "\015";
+static char screen_rxvt_s_csr   [] = "\033[%i%p1%d;%p2%dr";
+static char screen_rxvt_s_tbc   [] = "\033[3g";
+static char screen_rxvt_s_clear [] = "\033[H\033[J";
+static char screen_rxvt_s_el    [] = "\033[K";
+static char screen_rxvt_s_ed    [] = "\033[J";
+static char screen_rxvt_s_hpa   [] = "\033[%i%p1%dG";
+static char screen_rxvt_s_cup   [] = "\033[%i%p1%d;%p2%dH";
+static char screen_rxvt_s_cud1  [] = "\012";
+static char screen_rxvt_s_home  [] = "\033[H";
+static char screen_rxvt_s_civis [] = "\033[?25l";
+static char screen_rxvt_s_cub1  [] = "\010";
+static char screen_rxvt_s_cnorm [] = "\033[34h\033[?25h";
+static char screen_rxvt_s_cuf1  [] = "\033[C";
+static char screen_rxvt_s_cuu1  [] = "\033M";
+static char screen_rxvt_s_dch1  [] = "\033[P";
+static char screen_rxvt_s_dl1   [] = "\033[M";
+static char screen_rxvt_s_smacs [] = "\016";
+static char screen_rxvt_s_blink [] = "\033[5m";
+static char screen_rxvt_s_bold  [] = "\033[1m";
+static char screen_rxvt_s_smcup [] = "\033[?1049h";
+static char screen_rxvt_s_dim   [] = "\033[2m";
+static char screen_rxvt_s_smir  [] = "\033[4h";
+static char screen_rxvt_s_rev   [] = "\033[7m";
+static char screen_rxvt_s_smso  [] = "\033[3m";
+static char screen_rxvt_s_smul  [] = "\033[4m";
+static char screen_rxvt_s_rmacs [] = "\017";
+static char screen_rxvt_s_sgr0  [] = "\033[m\017";
+static char screen_rxvt_s_rmcup [] = "\033[?1049l";
+static char screen_rxvt_s_rmir  [] = "\033[4l";
+static char screen_rxvt_s_rmso  [] = "\033[23m";
+static char screen_rxvt_s_rmul  [] = "\033[24m";
+static char screen_rxvt_s_is2   [] = "\033)0";
+static char screen_rxvt_s_il1   [] = "\033[L";
+static char screen_rxvt_s_kbs   [] = "\010";
+static char screen_rxvt_s_kdch1 [] = "\033[3~";
+static char screen_rxvt_s_kcud1 [] = "\033OB";
+static char screen_rxvt_s_kel   [] = "\033[8^";
+static char screen_rxvt_s_kf1   [] = "\033OP";
+static char screen_rxvt_s_kf10  [] = "\033[21~";
+static char screen_rxvt_s_kf2   [] = "\033OQ";
+static char screen_rxvt_s_kf3   [] = "\033OR";
+static char screen_rxvt_s_kf4   [] = "\033OS";
+static char screen_rxvt_s_kf5   [] = "\033[15~";
+static char screen_rxvt_s_kf6   [] = "\033[17~";
+static char screen_rxvt_s_kf7   [] = "\033[18~";
+static char screen_rxvt_s_kf8   [] = "\033[19~";
+static char screen_rxvt_s_kf9   [] = "\033[20~";
+static char screen_rxvt_s_khome [] = "\033[1~";
+static char screen_rxvt_s_kich1 [] = "\033[2~";
+static char screen_rxvt_s_kcub1 [] = "\033OD";
+static char screen_rxvt_s_knp   [] = "\033[6~";
+static char screen_rxvt_s_kpp   [] = "\033[5~";
+static char screen_rxvt_s_kcuf1 [] = "\033OC";
+static char screen_rxvt_s_kind  [] = "\033[a";
+static char screen_rxvt_s_kri   [] = "\033[b";
+static char screen_rxvt_s_kcuu1 [] = "\033OA";
+static char screen_rxvt_s_rmkx  [] = "\033[?1l\033>";
+static char screen_rxvt_s_smkx  [] = "\033[?1h\033=";
+static char screen_rxvt_s_nel   [] = "\033E";
+static char screen_rxvt_s_dch   [] = "\033[%p1%dP";
+static char screen_rxvt_s_dl    [] = "\033[%p1%dM";
+static char screen_rxvt_s_cud   [] = "\033[%p1%dB";
+static char screen_rxvt_s_ich   [] = "\033[%p1%d@";
+static char screen_rxvt_s_indn  [] = "\033[%p1%dS";
+static char screen_rxvt_s_il    [] = "\033[%p1%dL";
+static char screen_rxvt_s_cub   [] = "\033[%p1%dD";
+static char screen_rxvt_s_cuf   [] = "\033[%p1%dC";
+static char screen_rxvt_s_cuu   [] = "\033[%p1%dA";
+static char screen_rxvt_s_rs2   [] = "\033c\033[?1000l\033[?25h";
+static char screen_rxvt_s_rc    [] = "\0338";
+static char screen_rxvt_s_vpa   [] = "\033[%i%p1%dd";
+static char screen_rxvt_s_sc    [] = "\0337";
+static char screen_rxvt_s_ind   [] = "\012";
+static char screen_rxvt_s_ri    [] = "\033M";
+static char screen_rxvt_s_sgr   [] = "\033[0%?%p6%t;1%;%?%p1%t;3%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p5%t;2%;m%?%p9%t\016%e\017%;";
+static char screen_rxvt_s_hts   [] = "\033H";
+static char screen_rxvt_s_ht    [] = "\011";
+static char screen_rxvt_s_ka1   [] = "\033Ow";
+static char screen_rxvt_s_ka3   [] = "\033Oy";
+static char screen_rxvt_s_kb2   [] = "\033Ou";
+static char screen_rxvt_s_kc1   [] = "\033Oq";
+static char screen_rxvt_s_kc3   [] = "\033Os";
+static char screen_rxvt_s_acsc  [] = "++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char screen_rxvt_s_kcbt  [] = "\033[Z";
+static char screen_rxvt_s_enacs [] = "\033(B\033)0";
+static char screen_rxvt_s_kend  [] = "\033[4~";
+static char screen_rxvt_s_kent  [] = "\033OM";
+static char screen_rxvt_s_kDC   [] = "\033[3$";
+static char screen_rxvt_s_kEND  [] = "\033[8$";
+static char screen_rxvt_s_kHOM  [] = "\033[7$";
+static char screen_rxvt_s_kIC   [] = "\033[2$";
+static char screen_rxvt_s_kLFT  [] = "\033[d";
+static char screen_rxvt_s_kNXT  [] = "\033[6$";
+static char screen_rxvt_s_kPRV  [] = "\033[5$";
+static char screen_rxvt_s_kRIT  [] = "\033[c";
+static char screen_rxvt_s_kf11  [] = "\033[23~";
+static char screen_rxvt_s_kf12  [] = "\033[24~";
+static char screen_rxvt_s_kf13  [] = "\033[25~";
+static char screen_rxvt_s_kf14  [] = "\033[26~";
+static char screen_rxvt_s_kf15  [] = "\033[28~";
+static char screen_rxvt_s_kf16  [] = "\033[29~";
+static char screen_rxvt_s_kf17  [] = "\033[31~";
+static char screen_rxvt_s_kf18  [] = "\033[32~";
+static char screen_rxvt_s_kf19  [] = "\033[33~";
+static char screen_rxvt_s_kf20  [] = "\033[34~";
+static char screen_rxvt_s_kf21  [] = "\033[23$";
+static char screen_rxvt_s_kf22  [] = "\033[24$";
+static char screen_rxvt_s_kf23  [] = "\033[11^";
+static char screen_rxvt_s_kf24  [] = "\033[12^";
+static char screen_rxvt_s_kf25  [] = "\033[13^";
+static char screen_rxvt_s_kf26  [] = "\033[14^";
+static char screen_rxvt_s_kf27  [] = "\033[15^";
+static char screen_rxvt_s_kf28  [] = "\033[17^";
+static char screen_rxvt_s_kf29  [] = "\033[18^";
+static char screen_rxvt_s_kf30  [] = "\033[19^";
+static char screen_rxvt_s_kf31  [] = "\033[20^";
+static char screen_rxvt_s_kf32  [] = "\033[21^";
+static char screen_rxvt_s_kf33  [] = "\033[23^";
+static char screen_rxvt_s_kf34  [] = "\033[24^";
+static char screen_rxvt_s_kf35  [] = "\033[25^";
+static char screen_rxvt_s_kf36  [] = "\033[26^";
+static char screen_rxvt_s_kf37  [] = "\033[28^";
+static char screen_rxvt_s_kf38  [] = "\033[29^";
+static char screen_rxvt_s_kf39  [] = "\033[31^";
+static char screen_rxvt_s_kf40  [] = "\033[32^";
+static char screen_rxvt_s_kf41  [] = "\033[33^";
+static char screen_rxvt_s_kf42  [] = "\033[34^";
+static char screen_rxvt_s_kf43  [] = "\033[23@";
+static char screen_rxvt_s_kf44  [] = "\033[24@";
+static char screen_rxvt_s_el1   [] = "\033[1K";
+static char screen_rxvt_s_u6    [] = "\033[%i%d;%dR";
+static char screen_rxvt_s_u7    [] = "\033[6n";
+static char screen_rxvt_s_u8    [] = "\033[?1;2c";
+static char screen_rxvt_s_u9    [] = "\033[c";
+static char screen_rxvt_s_op    [] = "\033[39;49m";
+static char screen_rxvt_s_kmous [] = "\033[M";
+static char screen_rxvt_s_setaf [] = "\033[3%p1%dm";
+static char screen_rxvt_s_setab [] = "\033[4%p1%dm";
+
+static char screen_rxvt_bool_data[] = {
+	/*   0: bw       */	TRUE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	FALSE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	FALSE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	FALSE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	TRUE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 screen_rxvt_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * screen_rxvt_string_data[] = {
+	/*   0: cbt      */	screen_rxvt_s_cbt,
+	/*   1: bel      */	screen_rxvt_s_bel,
+	/*   2: cr       */	screen_rxvt_s_cr,
+	/*   3: csr      */	screen_rxvt_s_csr,
+	/*   4: tbc      */	screen_rxvt_s_tbc,
+	/*   5: clear    */	screen_rxvt_s_clear,
+	/*   6: el       */	screen_rxvt_s_el,
+	/*   7: ed       */	screen_rxvt_s_ed,
+	/*   8: hpa      */	screen_rxvt_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	screen_rxvt_s_cup,
+	/*  11: cud1     */	screen_rxvt_s_cud1,
+	/*  12: home     */	screen_rxvt_s_home,
+	/*  13: civis    */	screen_rxvt_s_civis,
+	/*  14: cub1     */	screen_rxvt_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	screen_rxvt_s_cnorm,
+	/*  17: cuf1     */	screen_rxvt_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	screen_rxvt_s_cuu1,
+	/*  20: cvvis    */	CANCELLED_STRING,
+	/*  21: dch1     */	screen_rxvt_s_dch1,
+	/*  22: dl1      */	screen_rxvt_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	screen_rxvt_s_smacs,
+	/*  26: blink    */	screen_rxvt_s_blink,
+	/*  27: bold     */	screen_rxvt_s_bold,
+	/*  28: smcup    */	screen_rxvt_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	screen_rxvt_s_dim,
+	/*  31: smir     */	screen_rxvt_s_smir,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	screen_rxvt_s_rev,
+	/*  35: smso     */	screen_rxvt_s_smso,
+	/*  36: smul     */	screen_rxvt_s_smul,
+	/*  37: ech      */	ABSENT_STRING,
+	/*  38: rmacs    */	screen_rxvt_s_rmacs,
+	/*  39: sgr0     */	screen_rxvt_s_sgr0,
+	/*  40: rmcup    */	screen_rxvt_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	screen_rxvt_s_rmir,
+	/*  43: rmso     */	screen_rxvt_s_rmso,
+	/*  44: rmul     */	screen_rxvt_s_rmul,
+	/*  45: flash    */	CANCELLED_STRING,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	screen_rxvt_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	screen_rxvt_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	screen_rxvt_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	screen_rxvt_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	screen_rxvt_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	screen_rxvt_s_kel,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	screen_rxvt_s_kf1,
+	/*  67: kf10     */	screen_rxvt_s_kf10,
+	/*  68: kf2      */	screen_rxvt_s_kf2,
+	/*  69: kf3      */	screen_rxvt_s_kf3,
+	/*  70: kf4      */	screen_rxvt_s_kf4,
+	/*  71: kf5      */	screen_rxvt_s_kf5,
+	/*  72: kf6      */	screen_rxvt_s_kf6,
+	/*  73: kf7      */	screen_rxvt_s_kf7,
+	/*  74: kf8      */	screen_rxvt_s_kf8,
+	/*  75: kf9      */	screen_rxvt_s_kf9,
+	/*  76: khome    */	screen_rxvt_s_khome,
+	/*  77: kich1    */	screen_rxvt_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	screen_rxvt_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	screen_rxvt_s_knp,
+	/*  82: kpp      */	screen_rxvt_s_kpp,
+	/*  83: kcuf1    */	screen_rxvt_s_kcuf1,
+	/*  84: kind     */	screen_rxvt_s_kind,
+	/*  85: kri      */	screen_rxvt_s_kri,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	screen_rxvt_s_kcuu1,
+	/*  88: rmkx     */	screen_rxvt_s_rmkx,
+	/*  89: smkx     */	screen_rxvt_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	ABSENT_STRING,
+	/* 102: smm      */	ABSENT_STRING,
+	/* 103: nel      */	screen_rxvt_s_nel,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	screen_rxvt_s_dch,
+	/* 106: dl       */	screen_rxvt_s_dl,
+	/* 107: cud      */	screen_rxvt_s_cud,
+	/* 108: ich      */	screen_rxvt_s_ich,
+	/* 109: indn     */	screen_rxvt_s_indn,
+	/* 110: il       */	screen_rxvt_s_il,
+	/* 111: cub      */	screen_rxvt_s_cub,
+	/* 112: cuf      */	screen_rxvt_s_cuf,
+	/* 113: rin      */	ABSENT_STRING,
+	/* 114: cuu      */	screen_rxvt_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	ABSENT_STRING,
+	/* 119: mc4      */	ABSENT_STRING,
+	/* 120: mc5      */	ABSENT_STRING,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	ABSENT_STRING,
+	/* 123: rs2      */	screen_rxvt_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	screen_rxvt_s_rc,
+	/* 127: vpa      */	screen_rxvt_s_vpa,
+	/* 128: sc       */	screen_rxvt_s_sc,
+	/* 129: ind      */	screen_rxvt_s_ind,
+	/* 130: ri       */	screen_rxvt_s_ri,
+	/* 131: sgr      */	screen_rxvt_s_sgr,
+	/* 132: hts      */	screen_rxvt_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	screen_rxvt_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	screen_rxvt_s_ka1,
+	/* 140: ka3      */	screen_rxvt_s_ka3,
+	/* 141: kb2      */	screen_rxvt_s_kb2,
+	/* 142: kc1      */	screen_rxvt_s_kc1,
+	/* 143: kc3      */	screen_rxvt_s_kc3,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	screen_rxvt_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	screen_rxvt_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	ABSENT_STRING,
+	/* 152: rmam     */	ABSENT_STRING,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	screen_rxvt_s_enacs,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	screen_rxvt_s_kend,
+	/* 165: kent     */	screen_rxvt_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	screen_rxvt_s_kDC,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	screen_rxvt_s_kEND,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	screen_rxvt_s_kHOM,
+	/* 200: kIC      */	screen_rxvt_s_kIC,
+	/* 201: kLFT     */	screen_rxvt_s_kLFT,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	screen_rxvt_s_kNXT,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	screen_rxvt_s_kPRV,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	screen_rxvt_s_kRIT,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	screen_rxvt_s_kf11,
+	/* 217: kf12     */	screen_rxvt_s_kf12,
+	/* 218: kf13     */	screen_rxvt_s_kf13,
+	/* 219: kf14     */	screen_rxvt_s_kf14,
+	/* 220: kf15     */	screen_rxvt_s_kf15,
+	/* 221: kf16     */	screen_rxvt_s_kf16,
+	/* 222: kf17     */	screen_rxvt_s_kf17,
+	/* 223: kf18     */	screen_rxvt_s_kf18,
+	/* 224: kf19     */	screen_rxvt_s_kf19,
+	/* 225: kf20     */	screen_rxvt_s_kf20,
+	/* 226: kf21     */	screen_rxvt_s_kf21,
+	/* 227: kf22     */	screen_rxvt_s_kf22,
+	/* 228: kf23     */	screen_rxvt_s_kf23,
+	/* 229: kf24     */	screen_rxvt_s_kf24,
+	/* 230: kf25     */	screen_rxvt_s_kf25,
+	/* 231: kf26     */	screen_rxvt_s_kf26,
+	/* 232: kf27     */	screen_rxvt_s_kf27,
+	/* 233: kf28     */	screen_rxvt_s_kf28,
+	/* 234: kf29     */	screen_rxvt_s_kf29,
+	/* 235: kf30     */	screen_rxvt_s_kf30,
+	/* 236: kf31     */	screen_rxvt_s_kf31,
+	/* 237: kf32     */	screen_rxvt_s_kf32,
+	/* 238: kf33     */	screen_rxvt_s_kf33,
+	/* 239: kf34     */	screen_rxvt_s_kf34,
+	/* 240: kf35     */	screen_rxvt_s_kf35,
+	/* 241: kf36     */	screen_rxvt_s_kf36,
+	/* 242: kf37     */	screen_rxvt_s_kf37,
+	/* 243: kf38     */	screen_rxvt_s_kf38,
+	/* 244: kf39     */	screen_rxvt_s_kf39,
+	/* 245: kf40     */	screen_rxvt_s_kf40,
+	/* 246: kf41     */	screen_rxvt_s_kf41,
+	/* 247: kf42     */	screen_rxvt_s_kf42,
+	/* 248: kf43     */	screen_rxvt_s_kf43,
+	/* 249: kf44     */	screen_rxvt_s_kf44,
+	/* 250: kf45     */	ABSENT_STRING,
+	/* 251: kf46     */	ABSENT_STRING,
+	/* 252: kf47     */	ABSENT_STRING,
+	/* 253: kf48     */	ABSENT_STRING,
+	/* 254: kf49     */	ABSENT_STRING,
+	/* 255: kf50     */	ABSENT_STRING,
+	/* 256: kf51     */	ABSENT_STRING,
+	/* 257: kf52     */	ABSENT_STRING,
+	/* 258: kf53     */	ABSENT_STRING,
+	/* 259: kf54     */	ABSENT_STRING,
+	/* 260: kf55     */	ABSENT_STRING,
+	/* 261: kf56     */	ABSENT_STRING,
+	/* 262: kf57     */	ABSENT_STRING,
+	/* 263: kf58     */	ABSENT_STRING,
+	/* 264: kf59     */	ABSENT_STRING,
+	/* 265: kf60     */	ABSENT_STRING,
+	/* 266: kf61     */	ABSENT_STRING,
+	/* 267: kf62     */	ABSENT_STRING,
+	/* 268: kf63     */	ABSENT_STRING,
+	/* 269: el1      */	screen_rxvt_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	screen_rxvt_s_u6,
+	/* 294: u7       */	screen_rxvt_s_u7,
+	/* 295: u8       */	screen_rxvt_s_u8,
+	/* 296: u9       */	screen_rxvt_s_u9,
+	/* 297: op       */	screen_rxvt_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	screen_rxvt_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	screen_rxvt_s_setaf,
+	/* 360: setab    */	screen_rxvt_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* screen.xterm-new */
+
+static char screen_xterm_xfree86_alias_data[] = "screen.xterm-xfree86|screen.xterm-new|screen customized for modern xterm";
+
+static char screen_xterm_xfree86_s_cbt[] = "\033[Z";
+static char screen_xterm_xfree86_s_bel[] = "\007";
+static char screen_xterm_xfree86_s_cr[] = "\015";
+static char screen_xterm_xfree86_s_csr[] = "\033[%i%p1%d;%p2%dr";
+static char screen_xterm_xfree86_s_tbc[] = "\033[3g";
+static char screen_xterm_xfree86_s_clear[] = "\033[H\033[2J";
+static char screen_xterm_xfree86_s_el[] = "\033[K";
+static char screen_xterm_xfree86_s_ed[] = "\033[J";
+static char screen_xterm_xfree86_s_hpa[] = "\033[%i%p1%dG";
+static char screen_xterm_xfree86_s_cup[] = "\033[%i%p1%d;%p2%dH";
+static char screen_xterm_xfree86_s_cud1[] = "\012";
+static char screen_xterm_xfree86_s_home[] = "\033[H";
+static char screen_xterm_xfree86_s_civis[] = "\033[?25l";
+static char screen_xterm_xfree86_s_cub1[] = "\010";
+static char screen_xterm_xfree86_s_cnorm[] = "\033[?12l\033[?25h";
+static char screen_xterm_xfree86_s_cuf1[] = "\033[C";
+static char screen_xterm_xfree86_s_cuu1[] = "\033[A";
+static char screen_xterm_xfree86_s_cvvis[] = "\033[?12;25h";
+static char screen_xterm_xfree86_s_dch1[] = "\033[P";
+static char screen_xterm_xfree86_s_dl1[] = "\033[M";
+static char screen_xterm_xfree86_s_smacs[] = "\033(0";
+static char screen_xterm_xfree86_s_blink[] = "\033[5m";
+static char screen_xterm_xfree86_s_bold[] = "\033[1m";
+static char screen_xterm_xfree86_s_smcup[] = "\033[?1049h\033[22;0;0t";
+static char screen_xterm_xfree86_s_dim[] = "\033[2m";
+static char screen_xterm_xfree86_s_smir[] = "\033[4h";
+static char screen_xterm_xfree86_s_rev[] = "\033[7m";
+static char screen_xterm_xfree86_s_smso[] = "\033[7m";
+static char screen_xterm_xfree86_s_smul[] = "\033[4m";
+static char screen_xterm_xfree86_s_ech[] = "\033[%p1%dX";
+static char screen_xterm_xfree86_s_rmacs[] = "\033(B";
+static char screen_xterm_xfree86_s_sgr0[] = "\033(B\033[m";
+static char screen_xterm_xfree86_s_rmcup[] = "\033[?1049l\033[23;0;0t";
+static char screen_xterm_xfree86_s_rmir[] = "\033[4l";
+static char screen_xterm_xfree86_s_rmso[] = "\033[27m";
+static char screen_xterm_xfree86_s_rmul[] = "\033[24m";
+static char screen_xterm_xfree86_s_flash[] = "\033[?5h$<100/>\033[?5l";
+static char screen_xterm_xfree86_s_is2[] = "\033[!p\033[?3;4l\033[4l\033>";
+static char screen_xterm_xfree86_s_il1[] = "\033[L";
+static char screen_xterm_xfree86_s_kbs[] = "\010";
+static char screen_xterm_xfree86_s_kdch1[] = "\033[3~";
+static char screen_xterm_xfree86_s_kcud1[] = "\033OB";
+static char screen_xterm_xfree86_s_kf1[] = "\033OP";
+static char screen_xterm_xfree86_s_kf10[] = "\033[21~";
+static char screen_xterm_xfree86_s_kf2[] = "\033OQ";
+static char screen_xterm_xfree86_s_kf3[] = "\033OR";
+static char screen_xterm_xfree86_s_kf4[] = "\033OS";
+static char screen_xterm_xfree86_s_kf5[] = "\033[15~";
+static char screen_xterm_xfree86_s_kf6[] = "\033[17~";
+static char screen_xterm_xfree86_s_kf7[] = "\033[18~";
+static char screen_xterm_xfree86_s_kf8[] = "\033[19~";
+static char screen_xterm_xfree86_s_kf9[] = "\033[20~";
+static char screen_xterm_xfree86_s_khome[] = "\033[1~";
+static char screen_xterm_xfree86_s_kich1[] = "\033[2~";
+static char screen_xterm_xfree86_s_kcub1[] = "\033OD";
+static char screen_xterm_xfree86_s_knp[] = "\033[6~";
+static char screen_xterm_xfree86_s_kpp[] = "\033[5~";
+static char screen_xterm_xfree86_s_kcuf1[] = "\033OC";
+static char screen_xterm_xfree86_s_kind[] = "\033[1;2B";
+static char screen_xterm_xfree86_s_kri[] = "\033[1;2A";
+static char screen_xterm_xfree86_s_kcuu1[] = "\033OA";
+static char screen_xterm_xfree86_s_rmkx[] = "\033[?1l\033>";
+static char screen_xterm_xfree86_s_smkx[] = "\033[?1h\033=";
+static char screen_xterm_xfree86_s_rmm[] = "\033[?1034l";
+static char screen_xterm_xfree86_s_smm[] = "\033[?1034h";
+static char screen_xterm_xfree86_s_dch[] = "\033[%p1%dP";
+static char screen_xterm_xfree86_s_dl[] = "\033[%p1%dM";
+static char screen_xterm_xfree86_s_cud[] = "\033[%p1%dB";
+static char screen_xterm_xfree86_s_ich[] = "\033[%p1%d@";
+static char screen_xterm_xfree86_s_indn[] = "\033[%p1%dS";
+static char screen_xterm_xfree86_s_il[] = "\033[%p1%dL";
+static char screen_xterm_xfree86_s_cub[] = "\033[%p1%dD";
+static char screen_xterm_xfree86_s_cuf[] = "\033[%p1%dC";
+static char screen_xterm_xfree86_s_rin[] = "\033[%p1%dT";
+static char screen_xterm_xfree86_s_cuu[] = "\033[%p1%dA";
+static char screen_xterm_xfree86_s_mc0[] = "\033[i";
+static char screen_xterm_xfree86_s_mc4[] = "\033[4i";
+static char screen_xterm_xfree86_s_mc5[] = "\033[5i";
+static char screen_xterm_xfree86_s_rs1[] = "\033c";
+static char screen_xterm_xfree86_s_rs2[] = "\033[!p\033[?3;4l\033[4l\033>";
+static char screen_xterm_xfree86_s_rc[] = "\0338";
+static char screen_xterm_xfree86_s_vpa[] = "\033[%i%p1%dd";
+static char screen_xterm_xfree86_s_sc[] = "\0337";
+static char screen_xterm_xfree86_s_ind[] = "\012";
+static char screen_xterm_xfree86_s_ri[] = "\033M";
+static char screen_xterm_xfree86_s_sgr[] = "%?%p9%t\033(0%e\033(B%;\033[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p5%t;2%;m";
+static char screen_xterm_xfree86_s_hts[] = "\033H";
+static char screen_xterm_xfree86_s_ht[] = "\011";
+static char screen_xterm_xfree86_s_kb2[] = "\033OE";
+static char screen_xterm_xfree86_s_acsc[] = "``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char screen_xterm_xfree86_s_kcbt[] = "\033[Z";
+static char screen_xterm_xfree86_s_smam[] = "\033[?7h";
+static char screen_xterm_xfree86_s_rmam[] = "\033[?7l";
+static char screen_xterm_xfree86_s_kend[] = "\033[4~";
+static char screen_xterm_xfree86_s_kent[] = "\033OM";
+static char screen_xterm_xfree86_s_kDC[] = "\033[3;2~";
+static char screen_xterm_xfree86_s_kEND[] = "\033[1;2F";
+static char screen_xterm_xfree86_s_kHOM[] = "\033[1;2H";
+static char screen_xterm_xfree86_s_kLFT[] = "\033[1;2D";
+static char screen_xterm_xfree86_s_kRIT[] = "\033[1;2C";
+static char screen_xterm_xfree86_s_kf11[] = "\033[23~";
+static char screen_xterm_xfree86_s_kf12[] = "\033[24~";
+static char screen_xterm_xfree86_s_kf13[] = "\033[1;2P";
+static char screen_xterm_xfree86_s_kf14[] = "\033[1;2Q";
+static char screen_xterm_xfree86_s_kf15[] = "\033[1;2R";
+static char screen_xterm_xfree86_s_kf16[] = "\033[1;2S";
+static char screen_xterm_xfree86_s_kf17[] = "\033[15;2~";
+static char screen_xterm_xfree86_s_kf18[] = "\033[17;2~";
+static char screen_xterm_xfree86_s_kf19[] = "\033[18;2~";
+static char screen_xterm_xfree86_s_kf20[] = "\033[19;2~";
+static char screen_xterm_xfree86_s_kf21[] = "\033[20;2~";
+static char screen_xterm_xfree86_s_kf22[] = "\033[21;2~";
+static char screen_xterm_xfree86_s_kf23[] = "\033[23;2~";
+static char screen_xterm_xfree86_s_kf24[] = "\033[24;2~";
+static char screen_xterm_xfree86_s_kf25[] = "\033[1;5P";
+static char screen_xterm_xfree86_s_kf26[] = "\033[1;5Q";
+static char screen_xterm_xfree86_s_kf27[] = "\033[1;5R";
+static char screen_xterm_xfree86_s_kf28[] = "\033[1;5S";
+static char screen_xterm_xfree86_s_kf29[] = "\033[15;5~";
+static char screen_xterm_xfree86_s_kf30[] = "\033[17;5~";
+static char screen_xterm_xfree86_s_kf31[] = "\033[18;5~";
+static char screen_xterm_xfree86_s_kf32[] = "\033[19;5~";
+static char screen_xterm_xfree86_s_kf33[] = "\033[20;5~";
+static char screen_xterm_xfree86_s_kf34[] = "\033[21;5~";
+static char screen_xterm_xfree86_s_kf35[] = "\033[23;5~";
+static char screen_xterm_xfree86_s_kf36[] = "\033[24;5~";
+static char screen_xterm_xfree86_s_kf37[] = "\033[1;6P";
+static char screen_xterm_xfree86_s_kf38[] = "\033[1;6Q";
+static char screen_xterm_xfree86_s_kf39[] = "\033[1;6R";
+static char screen_xterm_xfree86_s_kf40[] = "\033[1;6S";
+static char screen_xterm_xfree86_s_kf41[] = "\033[15;6~";
+static char screen_xterm_xfree86_s_kf42[] = "\033[17;6~";
+static char screen_xterm_xfree86_s_kf43[] = "\033[18;6~";
+static char screen_xterm_xfree86_s_kf44[] = "\033[19;6~";
+static char screen_xterm_xfree86_s_kf45[] = "\033[20;6~";
+static char screen_xterm_xfree86_s_kf46[] = "\033[21;6~";
+static char screen_xterm_xfree86_s_kf47[] = "\033[23;6~";
+static char screen_xterm_xfree86_s_kf48[] = "\033[24;6~";
+static char screen_xterm_xfree86_s_kf49[] = "\033[1;3P";
+static char screen_xterm_xfree86_s_kf50[] = "\033[1;3Q";
+static char screen_xterm_xfree86_s_kf51[] = "\033[1;3R";
+static char screen_xterm_xfree86_s_kf52[] = "\033[1;3S";
+static char screen_xterm_xfree86_s_kf53[] = "\033[15;3~";
+static char screen_xterm_xfree86_s_kf54[] = "\033[17;3~";
+static char screen_xterm_xfree86_s_kf55[] = "\033[18;3~";
+static char screen_xterm_xfree86_s_kf56[] = "\033[19;3~";
+static char screen_xterm_xfree86_s_kf57[] = "\033[20;3~";
+static char screen_xterm_xfree86_s_kf58[] = "\033[21;3~";
+static char screen_xterm_xfree86_s_kf59[] = "\033[23;3~";
+static char screen_xterm_xfree86_s_kf60[] = "\033[24;3~";
+static char screen_xterm_xfree86_s_kf61[] = "\033[1;4P";
+static char screen_xterm_xfree86_s_kf62[] = "\033[1;4Q";
+static char screen_xterm_xfree86_s_kf63[] = "\033[1;4R";
+static char screen_xterm_xfree86_s_el1[] = "\033[1K";
+static char screen_xterm_xfree86_s_u6[] = "\033[%i%d;%dR";
+static char screen_xterm_xfree86_s_u7[] = "\033[6n";
+static char screen_xterm_xfree86_s_u8[] = "\033[?%[;0123456789]c";
+static char screen_xterm_xfree86_s_u9[] = "\033[c";
+static char screen_xterm_xfree86_s_op[] = "\033[39;49m";
+static char screen_xterm_xfree86_s_setf[] = "\033[3%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m";
+static char screen_xterm_xfree86_s_setb[] = "\033[4%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m";
+static char screen_xterm_xfree86_s_kmous[] = "\033[M";
+static char screen_xterm_xfree86_s_setaf[] = "\033[3%p1%dm";
+static char screen_xterm_xfree86_s_setab[] = "\033[4%p1%dm";
+
+static char screen_xterm_xfree86_bool_data[] = {
+	/*   0: bw       */	TRUE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	TRUE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	TRUE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	FALSE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 screen_xterm_xfree86_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	8,
+	/*  14: pairs    */	64,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * screen_xterm_xfree86_string_data[] = {
+	/*   0: cbt      */	screen_xterm_xfree86_s_cbt,
+	/*   1: bel      */	screen_xterm_xfree86_s_bel,
+	/*   2: cr       */	screen_xterm_xfree86_s_cr,
+	/*   3: csr      */	screen_xterm_xfree86_s_csr,
+	/*   4: tbc      */	screen_xterm_xfree86_s_tbc,
+	/*   5: clear    */	screen_xterm_xfree86_s_clear,
+	/*   6: el       */	screen_xterm_xfree86_s_el,
+	/*   7: ed       */	screen_xterm_xfree86_s_ed,
+	/*   8: hpa      */	screen_xterm_xfree86_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	screen_xterm_xfree86_s_cup,
+	/*  11: cud1     */	screen_xterm_xfree86_s_cud1,
+	/*  12: home     */	screen_xterm_xfree86_s_home,
+	/*  13: civis    */	screen_xterm_xfree86_s_civis,
+	/*  14: cub1     */	screen_xterm_xfree86_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	screen_xterm_xfree86_s_cnorm,
+	/*  17: cuf1     */	screen_xterm_xfree86_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	screen_xterm_xfree86_s_cuu1,
+	/*  20: cvvis    */	screen_xterm_xfree86_s_cvvis,
+	/*  21: dch1     */	screen_xterm_xfree86_s_dch1,
+	/*  22: dl1      */	screen_xterm_xfree86_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	screen_xterm_xfree86_s_smacs,
+	/*  26: blink    */	screen_xterm_xfree86_s_blink,
+	/*  27: bold     */	screen_xterm_xfree86_s_bold,
+	/*  28: smcup    */	screen_xterm_xfree86_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	screen_xterm_xfree86_s_dim,
+	/*  31: smir     */	screen_xterm_xfree86_s_smir,
+	/*  32: invis    */	CANCELLED_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	screen_xterm_xfree86_s_rev,
+	/*  35: smso     */	screen_xterm_xfree86_s_smso,
+	/*  36: smul     */	screen_xterm_xfree86_s_smul,
+	/*  37: ech      */	screen_xterm_xfree86_s_ech,
+	/*  38: rmacs    */	screen_xterm_xfree86_s_rmacs,
+	/*  39: sgr0     */	screen_xterm_xfree86_s_sgr0,
+	/*  40: rmcup    */	screen_xterm_xfree86_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	screen_xterm_xfree86_s_rmir,
+	/*  43: rmso     */	screen_xterm_xfree86_s_rmso,
+	/*  44: rmul     */	screen_xterm_xfree86_s_rmul,
+	/*  45: flash    */	screen_xterm_xfree86_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	screen_xterm_xfree86_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	screen_xterm_xfree86_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	screen_xterm_xfree86_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	screen_xterm_xfree86_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	screen_xterm_xfree86_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	screen_xterm_xfree86_s_kf1,
+	/*  67: kf10     */	screen_xterm_xfree86_s_kf10,
+	/*  68: kf2      */	screen_xterm_xfree86_s_kf2,
+	/*  69: kf3      */	screen_xterm_xfree86_s_kf3,
+	/*  70: kf4      */	screen_xterm_xfree86_s_kf4,
+	/*  71: kf5      */	screen_xterm_xfree86_s_kf5,
+	/*  72: kf6      */	screen_xterm_xfree86_s_kf6,
+	/*  73: kf7      */	screen_xterm_xfree86_s_kf7,
+	/*  74: kf8      */	screen_xterm_xfree86_s_kf8,
+	/*  75: kf9      */	screen_xterm_xfree86_s_kf9,
+	/*  76: khome    */	screen_xterm_xfree86_s_khome,
+	/*  77: kich1    */	screen_xterm_xfree86_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	screen_xterm_xfree86_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	screen_xterm_xfree86_s_knp,
+	/*  82: kpp      */	screen_xterm_xfree86_s_kpp,
+	/*  83: kcuf1    */	screen_xterm_xfree86_s_kcuf1,
+	/*  84: kind     */	screen_xterm_xfree86_s_kind,
+	/*  85: kri      */	screen_xterm_xfree86_s_kri,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	screen_xterm_xfree86_s_kcuu1,
+	/*  88: rmkx     */	screen_xterm_xfree86_s_rmkx,
+	/*  89: smkx     */	screen_xterm_xfree86_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	screen_xterm_xfree86_s_rmm,
+	/* 102: smm      */	screen_xterm_xfree86_s_smm,
+	/* 103: nel      */	ABSENT_STRING,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	screen_xterm_xfree86_s_dch,
+	/* 106: dl       */	screen_xterm_xfree86_s_dl,
+	/* 107: cud      */	screen_xterm_xfree86_s_cud,
+	/* 108: ich      */	screen_xterm_xfree86_s_ich,
+	/* 109: indn     */	screen_xterm_xfree86_s_indn,
+	/* 110: il       */	screen_xterm_xfree86_s_il,
+	/* 111: cub      */	screen_xterm_xfree86_s_cub,
+	/* 112: cuf      */	screen_xterm_xfree86_s_cuf,
+	/* 113: rin      */	screen_xterm_xfree86_s_rin,
+	/* 114: cuu      */	screen_xterm_xfree86_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	screen_xterm_xfree86_s_mc0,
+	/* 119: mc4      */	screen_xterm_xfree86_s_mc4,
+	/* 120: mc5      */	screen_xterm_xfree86_s_mc5,
+	/* 121: rep      */	CANCELLED_STRING,
+	/* 122: rs1      */	screen_xterm_xfree86_s_rs1,
+	/* 123: rs2      */	screen_xterm_xfree86_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	screen_xterm_xfree86_s_rc,
+	/* 127: vpa      */	screen_xterm_xfree86_s_vpa,
+	/* 128: sc       */	screen_xterm_xfree86_s_sc,
+	/* 129: ind      */	screen_xterm_xfree86_s_ind,
+	/* 130: ri       */	screen_xterm_xfree86_s_ri,
+	/* 131: sgr      */	screen_xterm_xfree86_s_sgr,
+	/* 132: hts      */	screen_xterm_xfree86_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	screen_xterm_xfree86_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	screen_xterm_xfree86_s_kb2,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	screen_xterm_xfree86_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	screen_xterm_xfree86_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	screen_xterm_xfree86_s_smam,
+	/* 152: rmam     */	screen_xterm_xfree86_s_rmam,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	ABSENT_STRING,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	screen_xterm_xfree86_s_kend,
+	/* 165: kent     */	screen_xterm_xfree86_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	screen_xterm_xfree86_s_kDC,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	screen_xterm_xfree86_s_kEND,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	screen_xterm_xfree86_s_kHOM,
+	/* 200: kIC      */	CANCELLED_STRING,
+	/* 201: kLFT     */	screen_xterm_xfree86_s_kLFT,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	CANCELLED_STRING,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	CANCELLED_STRING,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	screen_xterm_xfree86_s_kRIT,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	screen_xterm_xfree86_s_kf11,
+	/* 217: kf12     */	screen_xterm_xfree86_s_kf12,
+	/* 218: kf13     */	screen_xterm_xfree86_s_kf13,
+	/* 219: kf14     */	screen_xterm_xfree86_s_kf14,
+	/* 220: kf15     */	screen_xterm_xfree86_s_kf15,
+	/* 221: kf16     */	screen_xterm_xfree86_s_kf16,
+	/* 222: kf17     */	screen_xterm_xfree86_s_kf17,
+	/* 223: kf18     */	screen_xterm_xfree86_s_kf18,
+	/* 224: kf19     */	screen_xterm_xfree86_s_kf19,
+	/* 225: kf20     */	screen_xterm_xfree86_s_kf20,
+	/* 226: kf21     */	screen_xterm_xfree86_s_kf21,
+	/* 227: kf22     */	screen_xterm_xfree86_s_kf22,
+	/* 228: kf23     */	screen_xterm_xfree86_s_kf23,
+	/* 229: kf24     */	screen_xterm_xfree86_s_kf24,
+	/* 230: kf25     */	screen_xterm_xfree86_s_kf25,
+	/* 231: kf26     */	screen_xterm_xfree86_s_kf26,
+	/* 232: kf27     */	screen_xterm_xfree86_s_kf27,
+	/* 233: kf28     */	screen_xterm_xfree86_s_kf28,
+	/* 234: kf29     */	screen_xterm_xfree86_s_kf29,
+	/* 235: kf30     */	screen_xterm_xfree86_s_kf30,
+	/* 236: kf31     */	screen_xterm_xfree86_s_kf31,
+	/* 237: kf32     */	screen_xterm_xfree86_s_kf32,
+	/* 238: kf33     */	screen_xterm_xfree86_s_kf33,
+	/* 239: kf34     */	screen_xterm_xfree86_s_kf34,
+	/* 240: kf35     */	screen_xterm_xfree86_s_kf35,
+	/* 241: kf36     */	screen_xterm_xfree86_s_kf36,
+	/* 242: kf37     */	screen_xterm_xfree86_s_kf37,
+	/* 243: kf38     */	screen_xterm_xfree86_s_kf38,
+	/* 244: kf39     */	screen_xterm_xfree86_s_kf39,
+	/* 245: kf40     */	screen_xterm_xfree86_s_kf40,
+	/* 246: kf41     */	screen_xterm_xfree86_s_kf41,
+	/* 247: kf42     */	screen_xterm_xfree86_s_kf42,
+	/* 248: kf43     */	screen_xterm_xfree86_s_kf43,
+	/* 249: kf44     */	screen_xterm_xfree86_s_kf44,
+	/* 250: kf45     */	screen_xterm_xfree86_s_kf45,
+	/* 251: kf46     */	screen_xterm_xfree86_s_kf46,
+	/* 252: kf47     */	screen_xterm_xfree86_s_kf47,
+	/* 253: kf48     */	screen_xterm_xfree86_s_kf48,
+	/* 254: kf49     */	screen_xterm_xfree86_s_kf49,
+	/* 255: kf50     */	screen_xterm_xfree86_s_kf50,
+	/* 256: kf51     */	screen_xterm_xfree86_s_kf51,
+	/* 257: kf52     */	screen_xterm_xfree86_s_kf52,
+	/* 258: kf53     */	screen_xterm_xfree86_s_kf53,
+	/* 259: kf54     */	screen_xterm_xfree86_s_kf54,
+	/* 260: kf55     */	screen_xterm_xfree86_s_kf55,
+	/* 261: kf56     */	screen_xterm_xfree86_s_kf56,
+	/* 262: kf57     */	screen_xterm_xfree86_s_kf57,
+	/* 263: kf58     */	screen_xterm_xfree86_s_kf58,
+	/* 264: kf59     */	screen_xterm_xfree86_s_kf59,
+	/* 265: kf60     */	screen_xterm_xfree86_s_kf60,
+	/* 266: kf61     */	screen_xterm_xfree86_s_kf61,
+	/* 267: kf62     */	screen_xterm_xfree86_s_kf62,
+	/* 268: kf63     */	screen_xterm_xfree86_s_kf63,
+	/* 269: el1      */	screen_xterm_xfree86_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	screen_xterm_xfree86_s_u6,
+	/* 294: u7       */	screen_xterm_xfree86_s_u7,
+	/* 295: u8       */	screen_xterm_xfree86_s_u8,
+	/* 296: u9       */	screen_xterm_xfree86_s_u9,
+	/* 297: op       */	screen_xterm_xfree86_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	screen_xterm_xfree86_s_setf,
+	/* 303: setb     */	screen_xterm_xfree86_s_setb,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	screen_xterm_xfree86_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	screen_xterm_xfree86_s_setaf,
+	/* 360: setab    */	screen_xterm_xfree86_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	CANCELLED_STRING,
+	/* 412: memu     */	CANCELLED_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+/* screen.xterm-256color */
+
+static char screen_xterm_256color_alias_data[] = "screen.xterm-256color|GNU Screen with xterm using 256 colors";
+
+static char screen_xterm_256color_s_cbt[] = "\033[Z";
+static char screen_xterm_256color_s_bel[] = "\007";
+static char screen_xterm_256color_s_cr[] = "\015";
+static char screen_xterm_256color_s_csr[] = "\033[%i%p1%d;%p2%dr";
+static char screen_xterm_256color_s_tbc[] = "\033[3g";
+static char screen_xterm_256color_s_clear[] = "\033[H\033[2J";
+static char screen_xterm_256color_s_el[] = "\033[K";
+static char screen_xterm_256color_s_ed[] = "\033[J";
+static char screen_xterm_256color_s_hpa[] = "\033[%i%p1%dG";
+static char screen_xterm_256color_s_cup[] = "\033[%i%p1%d;%p2%dH";
+static char screen_xterm_256color_s_cud1[] = "\012";
+static char screen_xterm_256color_s_home[] = "\033[H";
+static char screen_xterm_256color_s_civis[] = "\033[?25l";
+static char screen_xterm_256color_s_cub1[] = "\010";
+static char screen_xterm_256color_s_cnorm[] = "\033[?12l\033[?25h";
+static char screen_xterm_256color_s_cuf1[] = "\033[C";
+static char screen_xterm_256color_s_cuu1[] = "\033[A";
+static char screen_xterm_256color_s_cvvis[] = "\033[?12;25h";
+static char screen_xterm_256color_s_dch1[] = "\033[P";
+static char screen_xterm_256color_s_dl1[] = "\033[M";
+static char screen_xterm_256color_s_smacs[] = "\033(0";
+static char screen_xterm_256color_s_blink[] = "\033[5m";
+static char screen_xterm_256color_s_bold[] = "\033[1m";
+static char screen_xterm_256color_s_smcup[] = "\033[?1049h\033[22;0;0t";
+static char screen_xterm_256color_s_dim[] = "\033[2m";
+static char screen_xterm_256color_s_smir[] = "\033[4h";
+static char screen_xterm_256color_s_rev[] = "\033[7m";
+static char screen_xterm_256color_s_smso[] = "\033[7m";
+static char screen_xterm_256color_s_smul[] = "\033[4m";
+static char screen_xterm_256color_s_ech[] = "\033[%p1%dX";
+static char screen_xterm_256color_s_rmacs[] = "\033(B";
+static char screen_xterm_256color_s_sgr0[] = "\033(B\033[m";
+static char screen_xterm_256color_s_rmcup[] = "\033[?1049l\033[23;0;0t";
+static char screen_xterm_256color_s_rmir[] = "\033[4l";
+static char screen_xterm_256color_s_rmso[] = "\033[27m";
+static char screen_xterm_256color_s_rmul[] = "\033[24m";
+static char screen_xterm_256color_s_flash[] = "\033[?5h$<100/>\033[?5l";
+static char screen_xterm_256color_s_is2[] = "\033[!p\033[?3;4l\033[4l\033>";
+static char screen_xterm_256color_s_il1[] = "\033[L";
+static char screen_xterm_256color_s_kbs[] = "\010";
+static char screen_xterm_256color_s_kdch1[] = "\033[3~";
+static char screen_xterm_256color_s_kcud1[] = "\033OB";
+static char screen_xterm_256color_s_kf1[] = "\033OP";
+static char screen_xterm_256color_s_kf10[] = "\033[21~";
+static char screen_xterm_256color_s_kf2[] = "\033OQ";
+static char screen_xterm_256color_s_kf3[] = "\033OR";
+static char screen_xterm_256color_s_kf4[] = "\033OS";
+static char screen_xterm_256color_s_kf5[] = "\033[15~";
+static char screen_xterm_256color_s_kf6[] = "\033[17~";
+static char screen_xterm_256color_s_kf7[] = "\033[18~";
+static char screen_xterm_256color_s_kf8[] = "\033[19~";
+static char screen_xterm_256color_s_kf9[] = "\033[20~";
+static char screen_xterm_256color_s_khome[] = "\033[1~";
+static char screen_xterm_256color_s_kich1[] = "\033[2~";
+static char screen_xterm_256color_s_kcub1[] = "\033OD";
+static char screen_xterm_256color_s_knp[] = "\033[6~";
+static char screen_xterm_256color_s_kpp[] = "\033[5~";
+static char screen_xterm_256color_s_kcuf1[] = "\033OC";
+static char screen_xterm_256color_s_kind[] = "\033[1;2B";
+static char screen_xterm_256color_s_kri[] = "\033[1;2A";
+static char screen_xterm_256color_s_kcuu1[] = "\033OA";
+static char screen_xterm_256color_s_rmkx[] = "\033[?1l\033>";
+static char screen_xterm_256color_s_smkx[] = "\033[?1h\033=";
+static char screen_xterm_256color_s_rmm[] = "\033[?1034l";
+static char screen_xterm_256color_s_smm[] = "\033[?1034h";
+static char screen_xterm_256color_s_dch[] = "\033[%p1%dP";
+static char screen_xterm_256color_s_dl[] = "\033[%p1%dM";
+static char screen_xterm_256color_s_cud[] = "\033[%p1%dB";
+static char screen_xterm_256color_s_ich[] = "\033[%p1%d@";
+static char screen_xterm_256color_s_indn[] = "\033[%p1%dS";
+static char screen_xterm_256color_s_il[] = "\033[%p1%dL";
+static char screen_xterm_256color_s_cub[] = "\033[%p1%dD";
+static char screen_xterm_256color_s_cuf[] = "\033[%p1%dC";
+static char screen_xterm_256color_s_rin[] = "\033[%p1%dT";
+static char screen_xterm_256color_s_cuu[] = "\033[%p1%dA";
+static char screen_xterm_256color_s_mc0[] = "\033[i";
+static char screen_xterm_256color_s_mc4[] = "\033[4i";
+static char screen_xterm_256color_s_mc5[] = "\033[5i";
+static char screen_xterm_256color_s_rs1[] = "\033c";
+static char screen_xterm_256color_s_rs2[] = "\033[!p\033[?3;4l\033[4l\033>";
+static char screen_xterm_256color_s_rc[] = "\0338";
+static char screen_xterm_256color_s_vpa[] = "\033[%i%p1%dd";
+static char screen_xterm_256color_s_sc[] = "\0337";
+static char screen_xterm_256color_s_ind[] = "\012";
+static char screen_xterm_256color_s_ri[] = "\033M";
+static char screen_xterm_256color_s_sgr[] = "%?%p9%t\033(0%e\033(B%;\033[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p5%t;2%;m";
+static char screen_xterm_256color_s_hts[] = "\033H";
+static char screen_xterm_256color_s_ht[] = "\011";
+static char screen_xterm_256color_s_kb2[] = "\033OE";
+static char screen_xterm_256color_s_acsc[] = "``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
+static char screen_xterm_256color_s_kcbt[] = "\033[Z";
+static char screen_xterm_256color_s_smam[] = "\033[?7h";
+static char screen_xterm_256color_s_rmam[] = "\033[?7l";
+static char screen_xterm_256color_s_kend[] = "\033[4~";
+static char screen_xterm_256color_s_kent[] = "\033OM";
+static char screen_xterm_256color_s_kDC[] = "\033[3;2~";
+static char screen_xterm_256color_s_kEND[] = "\033[1;2F";
+static char screen_xterm_256color_s_kHOM[] = "\033[1;2H";
+static char screen_xterm_256color_s_kLFT[] = "\033[1;2D";
+static char screen_xterm_256color_s_kRIT[] = "\033[1;2C";
+static char screen_xterm_256color_s_kf11[] = "\033[23~";
+static char screen_xterm_256color_s_kf12[] = "\033[24~";
+static char screen_xterm_256color_s_kf13[] = "\033[1;2P";
+static char screen_xterm_256color_s_kf14[] = "\033[1;2Q";
+static char screen_xterm_256color_s_kf15[] = "\033[1;2R";
+static char screen_xterm_256color_s_kf16[] = "\033[1;2S";
+static char screen_xterm_256color_s_kf17[] = "\033[15;2~";
+static char screen_xterm_256color_s_kf18[] = "\033[17;2~";
+static char screen_xterm_256color_s_kf19[] = "\033[18;2~";
+static char screen_xterm_256color_s_kf20[] = "\033[19;2~";
+static char screen_xterm_256color_s_kf21[] = "\033[20;2~";
+static char screen_xterm_256color_s_kf22[] = "\033[21;2~";
+static char screen_xterm_256color_s_kf23[] = "\033[23;2~";
+static char screen_xterm_256color_s_kf24[] = "\033[24;2~";
+static char screen_xterm_256color_s_kf25[] = "\033[1;5P";
+static char screen_xterm_256color_s_kf26[] = "\033[1;5Q";
+static char screen_xterm_256color_s_kf27[] = "\033[1;5R";
+static char screen_xterm_256color_s_kf28[] = "\033[1;5S";
+static char screen_xterm_256color_s_kf29[] = "\033[15;5~";
+static char screen_xterm_256color_s_kf30[] = "\033[17;5~";
+static char screen_xterm_256color_s_kf31[] = "\033[18;5~";
+static char screen_xterm_256color_s_kf32[] = "\033[19;5~";
+static char screen_xterm_256color_s_kf33[] = "\033[20;5~";
+static char screen_xterm_256color_s_kf34[] = "\033[21;5~";
+static char screen_xterm_256color_s_kf35[] = "\033[23;5~";
+static char screen_xterm_256color_s_kf36[] = "\033[24;5~";
+static char screen_xterm_256color_s_kf37[] = "\033[1;6P";
+static char screen_xterm_256color_s_kf38[] = "\033[1;6Q";
+static char screen_xterm_256color_s_kf39[] = "\033[1;6R";
+static char screen_xterm_256color_s_kf40[] = "\033[1;6S";
+static char screen_xterm_256color_s_kf41[] = "\033[15;6~";
+static char screen_xterm_256color_s_kf42[] = "\033[17;6~";
+static char screen_xterm_256color_s_kf43[] = "\033[18;6~";
+static char screen_xterm_256color_s_kf44[] = "\033[19;6~";
+static char screen_xterm_256color_s_kf45[] = "\033[20;6~";
+static char screen_xterm_256color_s_kf46[] = "\033[21;6~";
+static char screen_xterm_256color_s_kf47[] = "\033[23;6~";
+static char screen_xterm_256color_s_kf48[] = "\033[24;6~";
+static char screen_xterm_256color_s_kf49[] = "\033[1;3P";
+static char screen_xterm_256color_s_kf50[] = "\033[1;3Q";
+static char screen_xterm_256color_s_kf51[] = "\033[1;3R";
+static char screen_xterm_256color_s_kf52[] = "\033[1;3S";
+static char screen_xterm_256color_s_kf53[] = "\033[15;3~";
+static char screen_xterm_256color_s_kf54[] = "\033[17;3~";
+static char screen_xterm_256color_s_kf55[] = "\033[18;3~";
+static char screen_xterm_256color_s_kf56[] = "\033[19;3~";
+static char screen_xterm_256color_s_kf57[] = "\033[20;3~";
+static char screen_xterm_256color_s_kf58[] = "\033[21;3~";
+static char screen_xterm_256color_s_kf59[] = "\033[23;3~";
+static char screen_xterm_256color_s_kf60[] = "\033[24;3~";
+static char screen_xterm_256color_s_kf61[] = "\033[1;4P";
+static char screen_xterm_256color_s_kf62[] = "\033[1;4Q";
+static char screen_xterm_256color_s_kf63[] = "\033[1;4R";
+static char screen_xterm_256color_s_el1[] = "\033[1K";
+static char screen_xterm_256color_s_u6[] = "\033[%i%d;%dR";
+static char screen_xterm_256color_s_u7[] = "\033[6n";
+static char screen_xterm_256color_s_u8[] = "\033[?%[;0123456789]c";
+static char screen_xterm_256color_s_u9[] = "\033[c";
+static char screen_xterm_256color_s_op[] = "\033[39;49m";
+static char screen_xterm_256color_s_kmous[] = "\033[M";
+static char screen_xterm_256color_s_setaf[] = "\033[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m";
+static char screen_xterm_256color_s_setab[] = "\033[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m";
+
+static char screen_xterm_256color_bool_data[] = {
+	/*   0: bw       */	TRUE,
+	/*   1: am       */	TRUE,
+	/*   2: xsb      */	FALSE,
+	/*   3: xhp      */	FALSE,
+	/*   4: xenl     */	TRUE,
+	/*   5: eo       */	FALSE,
+	/*   6: gn       */	FALSE,
+	/*   7: hc       */	FALSE,
+	/*   8: km       */	TRUE,
+	/*   9: hs       */	FALSE,
+	/*  10: in       */	FALSE,
+	/*  11: da       */	FALSE,
+	/*  12: db       */	FALSE,
+	/*  13: mir      */	TRUE,
+	/*  14: msgr     */	TRUE,
+	/*  15: os       */	FALSE,
+	/*  16: eslok    */	FALSE,
+	/*  17: xt       */	FALSE,
+	/*  18: hz       */	FALSE,
+	/*  19: ul       */	FALSE,
+	/*  20: xon      */	FALSE,
+	/*  21: nxon     */	FALSE,
+	/*  22: mc5i     */	TRUE,
+	/*  23: chts     */	FALSE,
+	/*  24: nrrmc    */	FALSE,
+	/*  25: npc      */	TRUE,
+	/*  26: ndscr    */	FALSE,
+	/*  27: ccc      */	FALSE,
+	/*  28: bce      */	FALSE,
+	/*  29: hls      */	FALSE,
+	/*  30: xhpa     */	FALSE,
+	/*  31: crxm     */	FALSE,
+	/*  32: daisy    */	FALSE,
+	/*  33: xvpa     */	FALSE,
+	/*  34: sam      */	FALSE,
+	/*  35: cpix     */	FALSE,
+	/*  36: lpix     */	FALSE,
+	/*  37: OTbs     */	TRUE,
+	/*  38: OTns     */	FALSE,
+	/*  39: OTnc     */	FALSE,
+	/*  40: OTMT     */	FALSE,
+	/*  41: OTNL     */	FALSE,
+	/*  42: OTpt     */	FALSE,
+	/*  43: OTxr     */	FALSE,
+};
+static NCURSES_INT2 screen_xterm_256color_number_data[] = {
+	/*   0: cols     */	80,
+	/*   1: it       */	8,
+	/*   2: lines    */	24,
+	/*   3: lm       */	ABSENT_NUMERIC,
+	/*   4: xmc      */	ABSENT_NUMERIC,
+	/*   5: pb       */	ABSENT_NUMERIC,
+	/*   6: vt       */	ABSENT_NUMERIC,
+	/*   7: wsl      */	ABSENT_NUMERIC,
+	/*   8: nlab     */	ABSENT_NUMERIC,
+	/*   9: lh       */	ABSENT_NUMERIC,
+	/*  10: lw       */	ABSENT_NUMERIC,
+	/*  11: ma       */	ABSENT_NUMERIC,
+	/*  12: wnum     */	ABSENT_NUMERIC,
+	/*  13: colors   */	256,
+	/*  14: pairs    */	32767,
+	/*  15: ncv      */	ABSENT_NUMERIC,
+	/*  16: bufsz    */	ABSENT_NUMERIC,
+	/*  17: spinv    */	ABSENT_NUMERIC,
+	/*  18: spinh    */	ABSENT_NUMERIC,
+	/*  19: maddr    */	ABSENT_NUMERIC,
+	/*  20: mjump    */	ABSENT_NUMERIC,
+	/*  21: mcs      */	ABSENT_NUMERIC,
+	/*  22: mls      */	ABSENT_NUMERIC,
+	/*  23: npins    */	ABSENT_NUMERIC,
+	/*  24: orc      */	ABSENT_NUMERIC,
+	/*  25: orl      */	ABSENT_NUMERIC,
+	/*  26: orhi     */	ABSENT_NUMERIC,
+	/*  27: orvi     */	ABSENT_NUMERIC,
+	/*  28: cps      */	ABSENT_NUMERIC,
+	/*  29: widcs    */	ABSENT_NUMERIC,
+	/*  30: btns     */	ABSENT_NUMERIC,
+	/*  31: bitwin   */	ABSENT_NUMERIC,
+	/*  32: bitype   */	ABSENT_NUMERIC,
+	/*  33: OTug     */	ABSENT_NUMERIC,
+	/*  34: OTdC     */	ABSENT_NUMERIC,
+	/*  35: OTdN     */	ABSENT_NUMERIC,
+	/*  36: OTdB     */	ABSENT_NUMERIC,
+	/*  37: OTdT     */	ABSENT_NUMERIC,
+	/*  38: OTkn     */	ABSENT_NUMERIC,
+};
+static char * screen_xterm_256color_string_data[] = {
+	/*   0: cbt      */	screen_xterm_256color_s_cbt,
+	/*   1: bel      */	screen_xterm_256color_s_bel,
+	/*   2: cr       */	screen_xterm_256color_s_cr,
+	/*   3: csr      */	screen_xterm_256color_s_csr,
+	/*   4: tbc      */	screen_xterm_256color_s_tbc,
+	/*   5: clear    */	screen_xterm_256color_s_clear,
+	/*   6: el       */	screen_xterm_256color_s_el,
+	/*   7: ed       */	screen_xterm_256color_s_ed,
+	/*   8: hpa      */	screen_xterm_256color_s_hpa,
+	/*   9: cmdch    */	ABSENT_STRING,
+	/*  10: cup      */	screen_xterm_256color_s_cup,
+	/*  11: cud1     */	screen_xterm_256color_s_cud1,
+	/*  12: home     */	screen_xterm_256color_s_home,
+	/*  13: civis    */	screen_xterm_256color_s_civis,
+	/*  14: cub1     */	screen_xterm_256color_s_cub1,
+	/*  15: mrcup    */	ABSENT_STRING,
+	/*  16: cnorm    */	screen_xterm_256color_s_cnorm,
+	/*  17: cuf1     */	screen_xterm_256color_s_cuf1,
+	/*  18: ll       */	ABSENT_STRING,
+	/*  19: cuu1     */	screen_xterm_256color_s_cuu1,
+	/*  20: cvvis    */	screen_xterm_256color_s_cvvis,
+	/*  21: dch1     */	screen_xterm_256color_s_dch1,
+	/*  22: dl1      */	screen_xterm_256color_s_dl1,
+	/*  23: dsl      */	ABSENT_STRING,
+	/*  24: hd       */	ABSENT_STRING,
+	/*  25: smacs    */	screen_xterm_256color_s_smacs,
+	/*  26: blink    */	screen_xterm_256color_s_blink,
+	/*  27: bold     */	screen_xterm_256color_s_bold,
+	/*  28: smcup    */	screen_xterm_256color_s_smcup,
+	/*  29: smdc     */	ABSENT_STRING,
+	/*  30: dim      */	screen_xterm_256color_s_dim,
+	/*  31: smir     */	screen_xterm_256color_s_smir,
+	/*  32: invis    */	ABSENT_STRING,
+	/*  33: prot     */	ABSENT_STRING,
+	/*  34: rev      */	screen_xterm_256color_s_rev,
+	/*  35: smso     */	screen_xterm_256color_s_smso,
+	/*  36: smul     */	screen_xterm_256color_s_smul,
+	/*  37: ech      */	screen_xterm_256color_s_ech,
+	/*  38: rmacs    */	screen_xterm_256color_s_rmacs,
+	/*  39: sgr0     */	screen_xterm_256color_s_sgr0,
+	/*  40: rmcup    */	screen_xterm_256color_s_rmcup,
+	/*  41: rmdc     */	ABSENT_STRING,
+	/*  42: rmir     */	screen_xterm_256color_s_rmir,
+	/*  43: rmso     */	screen_xterm_256color_s_rmso,
+	/*  44: rmul     */	screen_xterm_256color_s_rmul,
+	/*  45: flash    */	screen_xterm_256color_s_flash,
+	/*  46: ff       */	ABSENT_STRING,
+	/*  47: fsl      */	ABSENT_STRING,
+	/*  48: is1      */	ABSENT_STRING,
+	/*  49: is2      */	screen_xterm_256color_s_is2,
+	/*  50: is3      */	ABSENT_STRING,
+	/*  51: if       */	ABSENT_STRING,
+	/*  52: ich1     */	ABSENT_STRING,
+	/*  53: il1      */	screen_xterm_256color_s_il1,
+	/*  54: ip       */	ABSENT_STRING,
+	/*  55: kbs      */	screen_xterm_256color_s_kbs,
+	/*  56: ktbc     */	ABSENT_STRING,
+	/*  57: kclr     */	ABSENT_STRING,
+	/*  58: kctab    */	ABSENT_STRING,
+	/*  59: kdch1    */	screen_xterm_256color_s_kdch1,
+	/*  60: kdl1     */	ABSENT_STRING,
+	/*  61: kcud1    */	screen_xterm_256color_s_kcud1,
+	/*  62: krmir    */	ABSENT_STRING,
+	/*  63: kel      */	ABSENT_STRING,
+	/*  64: ked      */	ABSENT_STRING,
+	/*  65: kf0      */	ABSENT_STRING,
+	/*  66: kf1      */	screen_xterm_256color_s_kf1,
+	/*  67: kf10     */	screen_xterm_256color_s_kf10,
+	/*  68: kf2      */	screen_xterm_256color_s_kf2,
+	/*  69: kf3      */	screen_xterm_256color_s_kf3,
+	/*  70: kf4      */	screen_xterm_256color_s_kf4,
+	/*  71: kf5      */	screen_xterm_256color_s_kf5,
+	/*  72: kf6      */	screen_xterm_256color_s_kf6,
+	/*  73: kf7      */	screen_xterm_256color_s_kf7,
+	/*  74: kf8      */	screen_xterm_256color_s_kf8,
+	/*  75: kf9      */	screen_xterm_256color_s_kf9,
+	/*  76: khome    */	screen_xterm_256color_s_khome,
+	/*  77: kich1    */	screen_xterm_256color_s_kich1,
+	/*  78: kil1     */	ABSENT_STRING,
+	/*  79: kcub1    */	screen_xterm_256color_s_kcub1,
+	/*  80: kll      */	ABSENT_STRING,
+	/*  81: knp      */	screen_xterm_256color_s_knp,
+	/*  82: kpp      */	screen_xterm_256color_s_kpp,
+	/*  83: kcuf1    */	screen_xterm_256color_s_kcuf1,
+	/*  84: kind     */	screen_xterm_256color_s_kind,
+	/*  85: kri      */	screen_xterm_256color_s_kri,
+	/*  86: khts     */	ABSENT_STRING,
+	/*  87: kcuu1    */	screen_xterm_256color_s_kcuu1,
+	/*  88: rmkx     */	screen_xterm_256color_s_rmkx,
+	/*  89: smkx     */	screen_xterm_256color_s_smkx,
+	/*  90: lf0      */	ABSENT_STRING,
+	/*  91: lf1      */	ABSENT_STRING,
+	/*  92: lf10     */	ABSENT_STRING,
+	/*  93: lf2      */	ABSENT_STRING,
+	/*  94: lf3      */	ABSENT_STRING,
+	/*  95: lf4      */	ABSENT_STRING,
+	/*  96: lf5      */	ABSENT_STRING,
+	/*  97: lf6      */	ABSENT_STRING,
+	/*  98: lf7      */	ABSENT_STRING,
+	/*  99: lf8      */	ABSENT_STRING,
+	/* 100: lf9      */	ABSENT_STRING,
+	/* 101: rmm      */	screen_xterm_256color_s_rmm,
+	/* 102: smm      */	screen_xterm_256color_s_smm,
+	/* 103: nel      */	ABSENT_STRING,
+	/* 104: pad      */	ABSENT_STRING,
+	/* 105: dch      */	screen_xterm_256color_s_dch,
+	/* 106: dl       */	screen_xterm_256color_s_dl,
+	/* 107: cud      */	screen_xterm_256color_s_cud,
+	/* 108: ich      */	screen_xterm_256color_s_ich,
+	/* 109: indn     */	screen_xterm_256color_s_indn,
+	/* 110: il       */	screen_xterm_256color_s_il,
+	/* 111: cub      */	screen_xterm_256color_s_cub,
+	/* 112: cuf      */	screen_xterm_256color_s_cuf,
+	/* 113: rin      */	screen_xterm_256color_s_rin,
+	/* 114: cuu      */	screen_xterm_256color_s_cuu,
+	/* 115: pfkey    */	ABSENT_STRING,
+	/* 116: pfloc    */	ABSENT_STRING,
+	/* 117: pfx      */	ABSENT_STRING,
+	/* 118: mc0      */	screen_xterm_256color_s_mc0,
+	/* 119: mc4      */	screen_xterm_256color_s_mc4,
+	/* 120: mc5      */	screen_xterm_256color_s_mc5,
+	/* 121: rep      */	ABSENT_STRING,
+	/* 122: rs1      */	screen_xterm_256color_s_rs1,
+	/* 123: rs2      */	screen_xterm_256color_s_rs2,
+	/* 124: rs3      */	ABSENT_STRING,
+	/* 125: rf       */	ABSENT_STRING,
+	/* 126: rc       */	screen_xterm_256color_s_rc,
+	/* 127: vpa      */	screen_xterm_256color_s_vpa,
+	/* 128: sc       */	screen_xterm_256color_s_sc,
+	/* 129: ind      */	screen_xterm_256color_s_ind,
+	/* 130: ri       */	screen_xterm_256color_s_ri,
+	/* 131: sgr      */	screen_xterm_256color_s_sgr,
+	/* 132: hts      */	screen_xterm_256color_s_hts,
+	/* 133: wind     */	ABSENT_STRING,
+	/* 134: ht       */	screen_xterm_256color_s_ht,
+	/* 135: tsl      */	ABSENT_STRING,
+	/* 136: uc       */	ABSENT_STRING,
+	/* 137: hu       */	ABSENT_STRING,
+	/* 138: iprog    */	ABSENT_STRING,
+	/* 139: ka1      */	ABSENT_STRING,
+	/* 140: ka3      */	ABSENT_STRING,
+	/* 141: kb2      */	screen_xterm_256color_s_kb2,
+	/* 142: kc1      */	ABSENT_STRING,
+	/* 143: kc3      */	ABSENT_STRING,
+	/* 144: mc5p     */	ABSENT_STRING,
+	/* 145: rmp      */	ABSENT_STRING,
+	/* 146: acsc     */	screen_xterm_256color_s_acsc,
+	/* 147: pln      */	ABSENT_STRING,
+	/* 148: kcbt     */	screen_xterm_256color_s_kcbt,
+	/* 149: smxon    */	ABSENT_STRING,
+	/* 150: rmxon    */	ABSENT_STRING,
+	/* 151: smam     */	screen_xterm_256color_s_smam,
+	/* 152: rmam     */	screen_xterm_256color_s_rmam,
+	/* 153: xonc     */	ABSENT_STRING,
+	/* 154: xoffc    */	ABSENT_STRING,
+	/* 155: enacs    */	ABSENT_STRING,
+	/* 156: smln     */	ABSENT_STRING,
+	/* 157: rmln     */	ABSENT_STRING,
+	/* 158: kbeg     */	ABSENT_STRING,
+	/* 159: kcan     */	ABSENT_STRING,
+	/* 160: kclo     */	ABSENT_STRING,
+	/* 161: kcmd     */	ABSENT_STRING,
+	/* 162: kcpy     */	ABSENT_STRING,
+	/* 163: kcrt     */	ABSENT_STRING,
+	/* 164: kend     */	screen_xterm_256color_s_kend,
+	/* 165: kent     */	screen_xterm_256color_s_kent,
+	/* 166: kext     */	ABSENT_STRING,
+	/* 167: kfnd     */	ABSENT_STRING,
+	/* 168: khlp     */	ABSENT_STRING,
+	/* 169: kmrk     */	ABSENT_STRING,
+	/* 170: kmsg     */	ABSENT_STRING,
+	/* 171: kmov     */	ABSENT_STRING,
+	/* 172: knxt     */	ABSENT_STRING,
+	/* 173: kopn     */	ABSENT_STRING,
+	/* 174: kopt     */	ABSENT_STRING,
+	/* 175: kprv     */	ABSENT_STRING,
+	/* 176: kprt     */	ABSENT_STRING,
+	/* 177: krdo     */	ABSENT_STRING,
+	/* 178: kref     */	ABSENT_STRING,
+	/* 179: krfr     */	ABSENT_STRING,
+	/* 180: krpl     */	ABSENT_STRING,
+	/* 181: krst     */	ABSENT_STRING,
+	/* 182: kres     */	ABSENT_STRING,
+	/* 183: ksav     */	ABSENT_STRING,
+	/* 184: kspd     */	ABSENT_STRING,
+	/* 185: kund     */	ABSENT_STRING,
+	/* 186: kBEG     */	ABSENT_STRING,
+	/* 187: kCAN     */	ABSENT_STRING,
+	/* 188: kCMD     */	ABSENT_STRING,
+	/* 189: kCPY     */	ABSENT_STRING,
+	/* 190: kCRT     */	ABSENT_STRING,
+	/* 191: kDC      */	screen_xterm_256color_s_kDC,
+	/* 192: kDL      */	ABSENT_STRING,
+	/* 193: kslt     */	ABSENT_STRING,
+	/* 194: kEND     */	screen_xterm_256color_s_kEND,
+	/* 195: kEOL     */	ABSENT_STRING,
+	/* 196: kEXT     */	ABSENT_STRING,
+	/* 197: kFND     */	ABSENT_STRING,
+	/* 198: kHLP     */	ABSENT_STRING,
+	/* 199: kHOM     */	screen_xterm_256color_s_kHOM,
+	/* 200: kIC      */	ABSENT_STRING,
+	/* 201: kLFT     */	screen_xterm_256color_s_kLFT,
+	/* 202: kMSG     */	ABSENT_STRING,
+	/* 203: kMOV     */	ABSENT_STRING,
+	/* 204: kNXT     */	ABSENT_STRING,
+	/* 205: kOPT     */	ABSENT_STRING,
+	/* 206: kPRV     */	ABSENT_STRING,
+	/* 207: kPRT     */	ABSENT_STRING,
+	/* 208: kRDO     */	ABSENT_STRING,
+	/* 209: kRPL     */	ABSENT_STRING,
+	/* 210: kRIT     */	screen_xterm_256color_s_kRIT,
+	/* 211: kRES     */	ABSENT_STRING,
+	/* 212: kSAV     */	ABSENT_STRING,
+	/* 213: kSPD     */	ABSENT_STRING,
+	/* 214: kUND     */	ABSENT_STRING,
+	/* 215: rfi      */	ABSENT_STRING,
+	/* 216: kf11     */	screen_xterm_256color_s_kf11,
+	/* 217: kf12     */	screen_xterm_256color_s_kf12,
+	/* 218: kf13     */	screen_xterm_256color_s_kf13,
+	/* 219: kf14     */	screen_xterm_256color_s_kf14,
+	/* 220: kf15     */	screen_xterm_256color_s_kf15,
+	/* 221: kf16     */	screen_xterm_256color_s_kf16,
+	/* 222: kf17     */	screen_xterm_256color_s_kf17,
+	/* 223: kf18     */	screen_xterm_256color_s_kf18,
+	/* 224: kf19     */	screen_xterm_256color_s_kf19,
+	/* 225: kf20     */	screen_xterm_256color_s_kf20,
+	/* 226: kf21     */	screen_xterm_256color_s_kf21,
+	/* 227: kf22     */	screen_xterm_256color_s_kf22,
+	/* 228: kf23     */	screen_xterm_256color_s_kf23,
+	/* 229: kf24     */	screen_xterm_256color_s_kf24,
+	/* 230: kf25     */	screen_xterm_256color_s_kf25,
+	/* 231: kf26     */	screen_xterm_256color_s_kf26,
+	/* 232: kf27     */	screen_xterm_256color_s_kf27,
+	/* 233: kf28     */	screen_xterm_256color_s_kf28,
+	/* 234: kf29     */	screen_xterm_256color_s_kf29,
+	/* 235: kf30     */	screen_xterm_256color_s_kf30,
+	/* 236: kf31     */	screen_xterm_256color_s_kf31,
+	/* 237: kf32     */	screen_xterm_256color_s_kf32,
+	/* 238: kf33     */	screen_xterm_256color_s_kf33,
+	/* 239: kf34     */	screen_xterm_256color_s_kf34,
+	/* 240: kf35     */	screen_xterm_256color_s_kf35,
+	/* 241: kf36     */	screen_xterm_256color_s_kf36,
+	/* 242: kf37     */	screen_xterm_256color_s_kf37,
+	/* 243: kf38     */	screen_xterm_256color_s_kf38,
+	/* 244: kf39     */	screen_xterm_256color_s_kf39,
+	/* 245: kf40     */	screen_xterm_256color_s_kf40,
+	/* 246: kf41     */	screen_xterm_256color_s_kf41,
+	/* 247: kf42     */	screen_xterm_256color_s_kf42,
+	/* 248: kf43     */	screen_xterm_256color_s_kf43,
+	/* 249: kf44     */	screen_xterm_256color_s_kf44,
+	/* 250: kf45     */	screen_xterm_256color_s_kf45,
+	/* 251: kf46     */	screen_xterm_256color_s_kf46,
+	/* 252: kf47     */	screen_xterm_256color_s_kf47,
+	/* 253: kf48     */	screen_xterm_256color_s_kf48,
+	/* 254: kf49     */	screen_xterm_256color_s_kf49,
+	/* 255: kf50     */	screen_xterm_256color_s_kf50,
+	/* 256: kf51     */	screen_xterm_256color_s_kf51,
+	/* 257: kf52     */	screen_xterm_256color_s_kf52,
+	/* 258: kf53     */	screen_xterm_256color_s_kf53,
+	/* 259: kf54     */	screen_xterm_256color_s_kf54,
+	/* 260: kf55     */	screen_xterm_256color_s_kf55,
+	/* 261: kf56     */	screen_xterm_256color_s_kf56,
+	/* 262: kf57     */	screen_xterm_256color_s_kf57,
+	/* 263: kf58     */	screen_xterm_256color_s_kf58,
+	/* 264: kf59     */	screen_xterm_256color_s_kf59,
+	/* 265: kf60     */	screen_xterm_256color_s_kf60,
+	/* 266: kf61     */	screen_xterm_256color_s_kf61,
+	/* 267: kf62     */	screen_xterm_256color_s_kf62,
+	/* 268: kf63     */	screen_xterm_256color_s_kf63,
+	/* 269: el1      */	screen_xterm_256color_s_el1,
+	/* 270: mgc      */	ABSENT_STRING,
+	/* 271: smgl     */	ABSENT_STRING,
+	/* 272: smgr     */	ABSENT_STRING,
+	/* 273: fln      */	ABSENT_STRING,
+	/* 274: sclk     */	ABSENT_STRING,
+	/* 275: dclk     */	ABSENT_STRING,
+	/* 276: rmclk    */	ABSENT_STRING,
+	/* 277: cwin     */	ABSENT_STRING,
+	/* 278: wingo    */	ABSENT_STRING,
+	/* 279: hup      */	ABSENT_STRING,
+	/* 280: dial     */	ABSENT_STRING,
+	/* 281: qdial    */	ABSENT_STRING,
+	/* 282: tone     */	ABSENT_STRING,
+	/* 283: pulse    */	ABSENT_STRING,
+	/* 284: hook     */	ABSENT_STRING,
+	/* 285: pause    */	ABSENT_STRING,
+	/* 286: wait     */	ABSENT_STRING,
+	/* 287: u0       */	ABSENT_STRING,
+	/* 288: u1       */	ABSENT_STRING,
+	/* 289: u2       */	ABSENT_STRING,
+	/* 290: u3       */	ABSENT_STRING,
+	/* 291: u4       */	ABSENT_STRING,
+	/* 292: u5       */	ABSENT_STRING,
+	/* 293: u6       */	screen_xterm_256color_s_u6,
+	/* 294: u7       */	screen_xterm_256color_s_u7,
+	/* 295: u8       */	screen_xterm_256color_s_u8,
+	/* 296: u9       */	screen_xterm_256color_s_u9,
+	/* 297: op       */	screen_xterm_256color_s_op,
+	/* 298: oc       */	ABSENT_STRING,
+	/* 299: initc    */	ABSENT_STRING,
+	/* 300: initp    */	ABSENT_STRING,
+	/* 301: scp      */	ABSENT_STRING,
+	/* 302: setf     */	ABSENT_STRING,
+	/* 303: setb     */	ABSENT_STRING,
+	/* 304: cpi      */	ABSENT_STRING,
+	/* 305: lpi      */	ABSENT_STRING,
+	/* 306: chr      */	ABSENT_STRING,
+	/* 307: cvr      */	ABSENT_STRING,
+	/* 308: defc     */	ABSENT_STRING,
+	/* 309: swidm    */	ABSENT_STRING,
+	/* 310: sdrfq    */	ABSENT_STRING,
+	/* 311: sitm     */	ABSENT_STRING,
+	/* 312: slm      */	ABSENT_STRING,
+	/* 313: smicm    */	ABSENT_STRING,
+	/* 314: snlq     */	ABSENT_STRING,
+	/* 315: snrmq    */	ABSENT_STRING,
+	/* 316: sshm     */	ABSENT_STRING,
+	/* 317: ssubm    */	ABSENT_STRING,
+	/* 318: ssupm    */	ABSENT_STRING,
+	/* 319: sum      */	ABSENT_STRING,
+	/* 320: rwidm    */	ABSENT_STRING,
+	/* 321: ritm     */	ABSENT_STRING,
+	/* 322: rlm      */	ABSENT_STRING,
+	/* 323: rmicm    */	ABSENT_STRING,
+	/* 324: rshm     */	ABSENT_STRING,
+	/* 325: rsubm    */	ABSENT_STRING,
+	/* 326: rsupm    */	ABSENT_STRING,
+	/* 327: rum      */	ABSENT_STRING,
+	/* 328: mhpa     */	ABSENT_STRING,
+	/* 329: mcud1    */	ABSENT_STRING,
+	/* 330: mcub1    */	ABSENT_STRING,
+	/* 331: mcuf1    */	ABSENT_STRING,
+	/* 332: mvpa     */	ABSENT_STRING,
+	/* 333: mcuu1    */	ABSENT_STRING,
+	/* 334: porder   */	ABSENT_STRING,
+	/* 335: mcud     */	ABSENT_STRING,
+	/* 336: mcub     */	ABSENT_STRING,
+	/* 337: mcuf     */	ABSENT_STRING,
+	/* 338: mcuu     */	ABSENT_STRING,
+	/* 339: scs      */	ABSENT_STRING,
+	/* 340: smgb     */	ABSENT_STRING,
+	/* 341: smgbp    */	ABSENT_STRING,
+	/* 342: smglp    */	ABSENT_STRING,
+	/* 343: smgrp    */	ABSENT_STRING,
+	/* 344: smgt     */	ABSENT_STRING,
+	/* 345: smgtp    */	ABSENT_STRING,
+	/* 346: sbim     */	ABSENT_STRING,
+	/* 347: scsd     */	ABSENT_STRING,
+	/* 348: rbim     */	ABSENT_STRING,
+	/* 349: rcsd     */	ABSENT_STRING,
+	/* 350: subcs    */	ABSENT_STRING,
+	/* 351: supcs    */	ABSENT_STRING,
+	/* 352: docr     */	ABSENT_STRING,
+	/* 353: zerom    */	ABSENT_STRING,
+	/* 354: csnm     */	ABSENT_STRING,
+	/* 355: kmous    */	screen_xterm_256color_s_kmous,
+	/* 356: minfo    */	ABSENT_STRING,
+	/* 357: reqmp    */	ABSENT_STRING,
+	/* 358: getm     */	ABSENT_STRING,
+	/* 359: setaf    */	screen_xterm_256color_s_setaf,
+	/* 360: setab    */	screen_xterm_256color_s_setab,
+	/* 361: pfxl     */	ABSENT_STRING,
+	/* 362: devt     */	ABSENT_STRING,
+	/* 363: csin     */	ABSENT_STRING,
+	/* 364: s0ds     */	ABSENT_STRING,
+	/* 365: s1ds     */	ABSENT_STRING,
+	/* 366: s2ds     */	ABSENT_STRING,
+	/* 367: s3ds     */	ABSENT_STRING,
+	/* 368: smglr    */	ABSENT_STRING,
+	/* 369: smgtb    */	ABSENT_STRING,
+	/* 370: birep    */	ABSENT_STRING,
+	/* 371: binel    */	ABSENT_STRING,
+	/* 372: bicr     */	ABSENT_STRING,
+	/* 373: colornm  */	ABSENT_STRING,
+	/* 374: defbi    */	ABSENT_STRING,
+	/* 375: endbi    */	ABSENT_STRING,
+	/* 376: setcolor */	ABSENT_STRING,
+	/* 377: slines   */	ABSENT_STRING,
+	/* 378: dispc    */	ABSENT_STRING,
+	/* 379: smpch    */	ABSENT_STRING,
+	/* 380: rmpch    */	ABSENT_STRING,
+	/* 381: smsc     */	ABSENT_STRING,
+	/* 382: rmsc     */	ABSENT_STRING,
+	/* 383: pctrm    */	ABSENT_STRING,
+	/* 384: scesc    */	ABSENT_STRING,
+	/* 385: scesa    */	ABSENT_STRING,
+	/* 386: ehhlm    */	ABSENT_STRING,
+	/* 387: elhlm    */	ABSENT_STRING,
+	/* 388: elohlm   */	ABSENT_STRING,
+	/* 389: erhlm    */	ABSENT_STRING,
+	/* 390: ethlm    */	ABSENT_STRING,
+	/* 391: evhlm    */	ABSENT_STRING,
+	/* 392: sgr1     */	ABSENT_STRING,
+	/* 393: slength  */	ABSENT_STRING,
+	/* 394: OTi2     */	ABSENT_STRING,
+	/* 395: OTrs     */	ABSENT_STRING,
+	/* 396: OTnl     */	ABSENT_STRING,
+	/* 397: OTbc     */	ABSENT_STRING,
+	/* 398: OTko     */	ABSENT_STRING,
+	/* 399: OTma     */	ABSENT_STRING,
+	/* 400: OTG2     */	ABSENT_STRING,
+	/* 401: OTG3     */	ABSENT_STRING,
+	/* 402: OTG1     */	ABSENT_STRING,
+	/* 403: OTG4     */	ABSENT_STRING,
+	/* 404: OTGR     */	ABSENT_STRING,
+	/* 405: OTGL     */	ABSENT_STRING,
+	/* 406: OTGU     */	ABSENT_STRING,
+	/* 407: OTGD     */	ABSENT_STRING,
+	/* 408: OTGH     */	ABSENT_STRING,
+	/* 409: OTGV     */	ABSENT_STRING,
+	/* 410: OTGC     */	ABSENT_STRING,
+	/* 411: meml     */	ABSENT_STRING,
+	/* 412: memu     */	ABSENT_STRING,
+	/* 413: box1     */	ABSENT_STRING,
+};
+static const TERMTYPE2 fallbacks[10] =
+{
+ /* linux */
+	{
+		linux_alias_data,
+		(char *)0,	/* pointer to string table */
+		linux_bool_data,
+		linux_number_data,
+		linux_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* rxvt */
+	{
+		rxvt_alias_data,
+		(char *)0,	/* pointer to string table */
+		rxvt_bool_data,
+		rxvt_number_data,
+		rxvt_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* vt100 */
+	{
+		vt100_alias_data,
+		(char *)0,	/* pointer to string table */
+		vt100_bool_data,
+		vt100_number_data,
+		vt100_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* xterm */
+	{
+		xterm_alias_data,
+		(char *)0,	/* pointer to string table */
+		xterm_bool_data,
+		xterm_number_data,
+		xterm_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* xterm-256color */
+	{
+		xterm_256color_alias_data,
+		(char *)0,	/* pointer to string table */
+		xterm_256color_bool_data,
+		xterm_256color_number_data,
+		xterm_256color_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* screen */
+	{
+		screen_alias_data,
+		(char *)0,	/* pointer to string table */
+		screen_bool_data,
+		screen_number_data,
+		screen_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* screen.linux */
+	{
+		screen_linux_alias_data,
+		(char *)0,	/* pointer to string table */
+		screen_linux_bool_data,
+		screen_linux_number_data,
+		screen_linux_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* screen.rxvt */
+	{
+		screen_rxvt_alias_data,
+		(char *)0,	/* pointer to string table */
+		screen_rxvt_bool_data,
+		screen_rxvt_number_data,
+		screen_rxvt_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* screen.xterm-new */
+	{
+		screen_xterm_xfree86_alias_data,
+		(char *)0,	/* pointer to string table */
+		screen_xterm_xfree86_bool_data,
+		screen_xterm_xfree86_number_data,
+		screen_xterm_xfree86_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+, /* screen.xterm-256color */
+	{
+		screen_xterm_256color_alias_data,
+		(char *)0,	/* pointer to string table */
+		screen_xterm_256color_bool_data,
+		screen_xterm_256color_number_data,
+		screen_xterm_256color_string_data,
+#if NCURSES_XNAMES
+		(char *)0,	/* pointer to extended string table */
+		(char **)0,	/* ...corresponding names */
+		44,		/* count total Booleans */
+		39,		/* count total Numbers */
+		414,		/* count total Strings */
+		0,		/* count extensions to Booleans */
+		0,		/* count extensions to Numbers */
+		0,		/* count extensions to Strings */
+#endif /* NCURSES_XNAMES */
+	}
+};
+
+NCURSES_EXPORT(const TERMTYPE2 *)
+_nc_fallback2 (const char *name GCC_UNUSED)
+{
+    const TERMTYPE2	*tp;
+
+    for (tp = fallbacks;
+	 tp < fallbacks + sizeof(fallbacks)/sizeof(TERMTYPE2);
+	 tp++) {
+	if (_nc_name_match(tp->term_names, name, "|")) {
+	    return(tp);
+	}
+    }
+    return((const TERMTYPE2 *)0);
+}
+
+#if NCURSES_EXT_NUMBERS
+#undef _nc_fallback
+
+/*
+ * This entrypoint is used by tack.
+ */
+NCURSES_EXPORT(const TERMTYPE *)
+_nc_fallback (const char *name)
+{
+    const TERMTYPE2 *tp = _nc_fallback2(name);
+    const TERMTYPE *result = 0;
+    if (tp != 0) {
+	static TERMTYPE temp;
+	_nc_export_termtype2(&temp, tp);
+	result = &temp;
+    }
+    return result;
+}
+#endif
diff --git a/contrib/depends/patches/sodium/disable-glibc-getrandom-getentropy.patch b/contrib/depends/patches/sodium/disable-glibc-getrandom-getentropy.patch
new file mode 100644
index 00000000..2f07c105
--- /dev/null
+++ b/contrib/depends/patches/sodium/disable-glibc-getrandom-getentropy.patch
@@ -0,0 +1,25 @@
+diff --git a/configure.ac b/configure.ac
+index 9e2de27c..0fa85c2d 100644
+--- a/configure.ac
++++ b/configure.ac
+@@ -807,6 +807,10 @@ AS_IF([test "x$EMSCRIPTEN" = "x"],[
+ # include <sys/random.h>
+ #endif
+ ]], [[
++#ifdef __linux__
++# error getrandom() is currently disabled on Linux to support glibc < 2.25
++#endif
++
+ unsigned char buf;
+ (void) getrandom((void *) &buf, 1U, 0U);
+   ]])],
+@@ -825,6 +829,9 @@ unsigned char buf;
+ # include <sys/random.h>
+ #endif
+ ]], [[
++#ifdef __linux__
++# error getentropy() is currently disabled on Linux to support glibc < 2.25
++#endif
+ #ifdef __APPLE__
+ # error getentropy() is currently disabled on Apple operating systems
+ #endif
diff --git a/contrib/depends/patches/sodium/fix-whitespace.patch b/contrib/depends/patches/sodium/fix-whitespace.patch
new file mode 100644
index 00000000..c3d3af0b
--- /dev/null
+++ b/contrib/depends/patches/sodium/fix-whitespace.patch
@@ -0,0 +1,13 @@
+diff --git a/configure b/configure
+index b29f769..ca008ae 100755
+--- a/configure
++++ b/configure
+@@ -591,7 +591,7 @@ MAKEFLAGS=
+ PACKAGE_NAME='libsodium'
+ PACKAGE_TARNAME='libsodium'
+ PACKAGE_VERSION='1.0.18'
+-PACKAGE_STRING='libsodium 1.0.18'
++PACKAGE_STRING='libsodium'
+ PACKAGE_BUGREPORT='https://github.com/jedisct1/libsodium/issues'
+ PACKAGE_URL='https://github.com/jedisct1/libsodium'
+ 
diff --git a/contrib/depends/patches/unbound/disable-glibc-reallocarray.patch b/contrib/depends/patches/unbound/disable-glibc-reallocarray.patch
new file mode 100644
index 00000000..d66a821a
--- /dev/null
+++ b/contrib/depends/patches/unbound/disable-glibc-reallocarray.patch
@@ -0,0 +1,14 @@
+diff --git a/configure.ac b/configure.ac
+index 5c7da197..e2b25288 100644
+--- a/configure.ac
++++ b/configure.ac
+@@ -1702,6 +1702,9 @@ AC_LINK_IFELSE([AC_LANG_SOURCE(AC_INCLUDES_DEFAULT
+ #ifndef _OPENBSD_SOURCE
+ #define _OPENBSD_SOURCE 1
+ #endif
++#ifdef __linux__
++# error reallocarray() is currently disabled on Linux to support glibc < 2.26
++#endif
+ #include <stdlib.h>
+ int main(void) {
+ 	void* p = reallocarray(NULL, 10, 100);
diff --git a/contrib/depends/toolchain.cmake.in b/contrib/depends/toolchain.cmake.in
new file mode 100644
index 00000000..50eaaa59
--- /dev/null
+++ b/contrib/depends/toolchain.cmake.in
@@ -0,0 +1,177 @@
+# Set the system name to one of Android, Darwin, FreeBSD, Linux, or Windows
+SET(CMAKE_SYSTEM_NAME @cmake_system_name@)
+SET(CMAKE_SYSTEM_PROCESSOR @arch@)
+SET(CMAKE_BUILD_TYPE @release_type@)
+
+OPTION(STATIC "Link libraries statically" ON)
+OPTION(TREZOR_DEBUG "Main trezor debugging switch" OFF)
+OPTION(BUILD_TESTS "Build tests." OFF)
+
+SET(STATIC ON)
+SET(UNBOUND_STATIC ON)
+SET(ARCH "default")
+
+SET(BUILD_TESTS @build_tests@)
+SET(TREZOR_DEBUG @build_tests@)
+
+# where is the target environment 
+SET(CMAKE_FIND_ROOT_PATH @prefix@ /usr)
+
+SET(ENV{PKG_CONFIG_PATH} @prefix@/lib/pkgconfig)
+
+SET(Readline_ROOT_DIR @prefix@)
+SET(Readline_INCLUDE_DIR @prefix@/include)
+SET(Readline_LIBRARY @prefix@/lib/libreadline.a)
+SET(Terminfo_LIBRARY @prefix@/lib/libtinfo.a)
+
+SET(UNBOUND_INCLUDE_DIR @prefix@/include)
+SET(UNBOUND_LIBRARIES @prefix@/lib/libunbound.a)
+
+SET(LIBUSB-1.0_LIBRARY @prefix@/lib/libusb-1.0.a)
+SET(LIBUDEV_LIBRARY @prefix@/lib/libudev.a)
+
+SET(Protobuf_FOUND 1)
+SET(Protobuf_PROTOC_EXECUTABLE @prefix@/native/bin/protoc CACHE FILEPATH "Path to the native protoc")
+SET(Protobuf_INCLUDE_DIR @prefix@/include CACHE PATH "Protobuf include dir")
+SET(Protobuf_INCLUDE_DIRS @prefix@/include CACHE PATH "Protobuf include dir")
+SET(Protobuf_LIBRARY @prefix@/lib/libprotobuf.a CACHE FILEPATH "Protobuf library")
+
+if(NOT CMAKE_SYSTEM_NAME STREQUAL "Android")
+SET(LIBUNWIND_INCLUDE_DIR @prefix@/include)
+SET(LIBUNWIND_LIBRARIES @prefix@/lib/libunwind.a)
+SET(LIBUNWIND_LIBRARY_DIRS @prefix@/lib)
+endif()
+
+SET(ZMQ_INCLUDE_PATH @prefix@/include)
+SET(ZMQ_LIB @prefix@/lib/libzmq.a)
+
+SET(Boost_IGNORE_SYSTEM_PATH ON)
+SET(BOOST_ROOT @prefix@)
+SET(BOOST_INCLUDEDIR @prefix@/include)
+SET(BOOST_LIBRARYDIR @prefix@/lib)
+SET(Boost_IGNORE_SYSTEM_PATHS_DEFAULT OFF)
+SET(Boost_NO_SYSTEM_PATHS ON)
+SET(Boost_USE_STATIC_LIBS ON)
+SET(Boost_USE_STATIC_RUNTIME ON)
+
+SET(OPENSSL_ROOT_DIR @prefix@)
+SET(ARCHITECTURE @arch@)
+
+# for libraries and headers in the target directories
+set (CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER) # Find programs on host
+set (CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY) # Find libs in target
+set (CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY) # Find includes in target
+
+# specify the cross compiler to be used. Darwin uses clang provided by the SDK.
+if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
+  if(ARCHITECTURE STREQUAL "aarch64")
+    SET(CLANG_TARGET "arm64-apple-darwin")
+    SET(CONF_TRIPLE "aarch64-apple-darwin")
+    SET(BUILD_TAG "mac-armv8")
+    SET(CMAKE_OSX_ARCHITECTURES "arm64")
+    set(ARM ON)
+    set(ARM_ID "armv8-a")
+  else()
+    SET(CLANG_TARGET "x86_64-apple-darwin")
+    SET(CONF_TRIPLE "x86_64-apple-darwin")
+    SET(BUILD_TAG "mac-x64")
+    SET(CMAKE_OSX_ARCHITECTURES "x86_64")
+  endif()
+  SET(_CMAKE_TOOLCHAIN_PREFIX @prefix@/native/bin/${CONF_TRIPLE}-)
+  SET(CMAKE_C_COMPILER @prefix@/native/bin/clang)
+  SET(CMAKE_C_COMPILER_TARGET ${CLANG_TARGET})
+  SET(CMAKE_C_FLAGS_INIT -B${_CMAKE_TOOLCHAIN_PREFIX})
+  SET(CMAKE_CXX_COMPILER @prefix@/native/bin/clang++ -stdlib=libc++)
+  SET(CMAKE_CXX_COMPILER_TARGET ${CLANG_TARGET})
+  SET(CMAKE_CXX_FLAGS_INIT -B${_CMAKE_TOOLCHAIN_PREFIX})
+  SET(CMAKE_ASM_COMPILER_TARGET ${CLANG_TARGET})
+  SET(CMAKE_ASM-ATT_COMPILER_TARGET ${CLANG_TARGET})
+  SET(APPLE True)
+  SET(BUILD_64 ON)
+  SET(BREW OFF)
+  SET(PORT OFF)
+  SET(CMAKE_OSX_SYSROOT "@prefix@/native/SDK/")
+  SET(CMAKE_OSX_DEPLOYMENT_TARGET "10.13")
+  SET(CMAKE_CXX_STANDARD 17)
+  SET(LLVM_ENABLE_PIC OFF)
+  SET(LLVM_ENABLE_PIE OFF)
+elseif(CMAKE_SYSTEM_NAME STREQUAL "Android")
+  SET(ANDROID TRUE)
+  if(ARCHITECTURE STREQUAL "arm")
+    SET(CMAKE_ANDROID_ARCH_ABI "armeabi-v7a")
+    SET(CMAKE_SYSTEM_PROCESSOR "armv7-a")
+    SET(CMAKE_ANDROID_ARM_MODE ON)
+    SET(CMAKE_C_COMPILER_TARGET arm-linux-androideabi)
+    SET(CMAKE_CXX_COMPILER_TARGET arm-linux-androideabi)
+    SET(_CMAKE_TOOLCHAIN_PREFIX arm-linux-androideabi-)
+  elseif(ARCHITECTURE STREQUAL "aarch64")
+    SET(CMAKE_ANDROID_ARCH_ABI "arm64-v8a")
+    SET(CMAKE_SYSTEM_PROCESSOR "aarch64")
+  endif()
+  SET(CMAKE_ANDROID_STANDALONE_TOOLCHAIN @prefix@/native)
+  SET(CMAKE_C_COMPILER "${_CMAKE_TOOLCHAIN_PREFIX}clang")
+  SET(CMAKE_CXX_COMPILER "${_CMAKE_TOOLCHAIN_PREFIX}clang++")
+else()
+  SET(CMAKE_C_COMPILER @CC@)
+  SET(CMAKE_CXX_COMPILER @CXX@)
+endif()
+
+if(ARCHITECTURE STREQUAL "arm")
+  set(ARCH "armv7-a")
+  set(ARM ON)
+  set(ARM_ID "armv7-a")
+  set(BUILD_64 OFF)
+  set(CMAKE_BUILD_TYPE release)
+  if(ANDROID)
+    set(BUILD_TAG "android-armv7")
+  else()
+    set(BUILD_TAG "linux-armv7")
+  endif()
+  set(ARM7)
+elseif(ARCHITECTURE STREQUAL "aarch64")
+  set(ARCH "armv8-a")
+  set(ARM ON)
+  set(ARM_ID "armv8-a")
+  if(ANDROID)
+    set(BUILD_TAG "android-armv8")
+  elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
+    set(BUILD_TAG "linux-armv8")
+  endif()
+  set(BUILD_64 ON)
+endif()
+
+if(ARCHITECTURE STREQUAL "riscv64")
+  if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
+    set(BUILD_TAG "linux-riscv64")
+  endif()
+  set(ARCH_ID "riscv64")
+  set(ARCH "rv64gc")
+endif()
+if(ARCHITECTURE STREQUAL "loongarch64")
+    set(ARCH_ID "loongarch64")
+    set(ARCH "loongarch")
+endif()
+
+if(ARCHITECTURE STREQUAL "i686")
+  SET(ARCH_ID "i386")
+  if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
+    set(BUILD_TAG "linux-x86")
+    SET(LINUX_32 ON)
+  elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
+    set(BUILD_TAG "win-x32")
+  endif()
+endif()
+
+if(ARCHITECTURE STREQUAL "x86_64")
+  if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
+    set(BUILD_TAG "linux-x64")
+  elseif(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD")
+    set(BUILD_TAG "freebsd-x64")
+  elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
+    set(BUILD_TAG "win-x64")
+  endif()
+  SET(ARCH_ID "x86_64")
+endif()
+
+#Create a new global cmake flag that indicates building with depends
+set (DEPENDS true)

From 0169c95c4055cdb705927dfc6d1a44d75b94958a Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 00:56:15 +0530
Subject: [PATCH 05/27] ci(gitian): update repo url

to be reverted later
---
 contrib/gitian/gitian-build.py  | 2 +-
 contrib/gitian/gitian-linux.yml | 2 +-
 contrib/gitian/gitian-osx.yml   | 2 +-
 contrib/gitian/gitian-win.yml   | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/contrib/gitian/gitian-build.py b/contrib/gitian/gitian-build.py
index 1e3b73f9..0a58f590 100644
--- a/contrib/gitian/gitian-build.py
+++ b/contrib/gitian/gitian-build.py
@@ -113,7 +113,7 @@ def main():
     parser = argparse.ArgumentParser(description='Script for running full Gitian builds.', usage='%(prog)s [options] signer version')
     parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')
     parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')
-    parser.add_argument('-u', '--url', dest='url', default='https://github.com/nerva-project/nerva', help='Specify the URL of the repository. Default is %(default)s')
+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/Sn1F3rt/nerva', help='Specify the URL of the repository. Default is %(default)s')
     parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')
     parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')
     parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')
diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
index dc406ada..40e0cfc7 100644
--- a/contrib/gitian/gitian-linux.yml
+++ b/contrib/gitian/gitian-linux.yml
@@ -38,7 +38,7 @@ packages:
 - "python"
 - "cmake"
 remotes:
-- "url": "https://github.com/nerva-project/nerva.git"
+- "url": "https://github.com/Sn1F3rt/nerva.git"
   "dir": "nerva"
 files: []
 script: |
diff --git a/contrib/gitian/gitian-osx.yml b/contrib/gitian/gitian-osx.yml
index 6f5e72bd..a7018759 100644
--- a/contrib/gitian/gitian-osx.yml
+++ b/contrib/gitian/gitian-osx.yml
@@ -24,7 +24,7 @@ packages:
 - "python-dev"
 - "python-setuptools"
 remotes:
-- "url": "https://github.com/nerva-project/nerva.git"
+- "url": "https://github.com/Sn1F3rt/nerva.git"
   "dir": "nerva"
 files: []
 script: |
diff --git a/contrib/gitian/gitian-win.yml b/contrib/gitian/gitian-win.yml
index 8d5b62fa..38d867fb 100644
--- a/contrib/gitian/gitian-win.yml
+++ b/contrib/gitian/gitian-win.yml
@@ -35,7 +35,7 @@ alternatives:
   package: "x86_64-w64-mingw32-gcc"
   path: "/usr/bin/x86_64-w64-mingw32-gcc-posix"
 remotes:
-- "url": "https://github.com/nerva-project/nerva.git"
+- "url": "https://github.com/Sn1F3rt/nerva.git"
   "dir": "nerva"
 files: []
 script: |

From 2db23fa887844e55c775803e9c43711998e15f92 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 01:01:47 +0530
Subject: [PATCH 06/27] ci(gitian): make config.guess and config.sub executable

---
 contrib/depends/config.guess | 0
 contrib/depends/config.sub   | 0
 2 files changed, 0 insertions(+), 0 deletions(-)
 mode change 100644 => 100755 contrib/depends/config.guess
 mode change 100644 => 100755 contrib/depends/config.sub

diff --git a/contrib/depends/config.guess b/contrib/depends/config.guess
old mode 100644
new mode 100755
diff --git a/contrib/depends/config.sub b/contrib/depends/config.sub
old mode 100644
new mode 100755

From 0100f906408e89bc1f653d753b11c8cd5a2af44d Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 01:11:08 +0530
Subject: [PATCH 07/27] ci(gitian): git describe error fix

---
 .github/workflows/gitian.yml | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/.github/workflows/gitian.yml b/.github/workflows/gitian.yml
index d049ee4e..33e00392 100644
--- a/.github/workflows/gitian.yml
+++ b/.github/workflows/gitian.yml
@@ -1,11 +1,9 @@
 name: ci/gh-actions/gitian
 
-on: [ push ]
-
-#on:
-#    push:
-#        tags:
-#            - '*'
+on:
+    push:
+        tags:
+            - '*'
 
 jobs:
     build-gitian:

From e31905a6fe2a5179480971ade02e49e615914333 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 21:32:23 +0530
Subject: [PATCH 08/27] ci: add depends.yml

---
 .github/workflows/depends.yml | 109 ++++++++++++++++++++++++++++++++++
 1 file changed, 109 insertions(+)
 create mode 100644 .github/workflows/depends.yml

diff --git a/.github/workflows/depends.yml b/.github/workflows/depends.yml
new file mode 100644
index 00000000..168f7365
--- /dev/null
+++ b/.github/workflows/depends.yml
@@ -0,0 +1,109 @@
+name: ci/gh-actions/depends
+
+on:
+    push:
+        paths-ignore:
+            - '**.md'
+    pull_request:
+        paths-ignore:
+            - '**.md'
+
+env:
+    APT_SET_CONF: |
+        echo "Acquire::Retries \"3\";"         | sudo tee -a /etc/apt/apt.conf.d/80-custom
+        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
+        echo "Acquire::ftp::Timeout \"120\";"  | sudo tee -a /etc/apt/apt.conf.d/80-custom
+    CCACHE_SETTINGS: |
+        ccache --max-size=150M
+        ccache --set-config=compression=true
+
+jobs:
+    build-cross:
+        runs-on: ubuntu-20.04
+        env:
+            CCACHE_TEMPDIR: /tmp/.ccache-temp
+        strategy:
+            fail-fast: false
+            matrix:
+                toolchain:
+                    -   name: "RISCV 64bit"
+                        host: "riscv64-linux-gnu"
+                        packages: "python3 gperf g++-riscv64-linux-gnu"
+                    -   name: "ARM v7"
+                        host: "arm-linux-gnueabihf"
+                        packages: "python3 gperf g++-arm-linux-gnueabihf"
+                    -   name: "ARM v8"
+                        host: "aarch64-linux-gnu"
+                        packages: "python3 gperf g++-aarch64-linux-gnu"
+                    -   name: "i686 Win"
+                        host: "i686-w64-mingw32"
+                        packages: "python3 g++-mingw-w64-i686"
+                    -   name: "i686 Linux"
+                        host: "i686-pc-linux-gnu"
+                        packages: "gperf cmake g++-multilib python3-zmq"
+                    -   name: "Win64"
+                        host: "x86_64-w64-mingw32"
+                        packages: "cmake python3 g++-mingw-w64-x86-64"
+                    -   name: "x86_64 Linux"
+                        host: "x86_64-unknown-linux-gnu"
+                        packages: "gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
+                    -   name: "Cross-Mac x86_64"
+                        host: "x86_64-apple-darwin"
+                        packages: "cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git"
+                    -   name: "Cross-Mac aarch64"
+                        host: "aarch64-apple-darwin"
+                        packages: "cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git"
+                    -   name: "x86_64 Freebsd"
+                        host: "x86_64-unknown-freebsd"
+                        packages: "clang-8 gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
+                    -   name: "ARMv8 Android"
+                        host: "aarch64-linux-android"
+                        packages: "gperf cmake python3"
+        name: ${{ matrix.toolchain.name }}
+        steps:
+            -   uses: actions/checkout@v4
+                with:
+                    fetch-depth: 0
+                    submodules: recursive
+            # Most volatile cache
+            -   name: ccache
+                uses: actions/cache@v4
+                with:
+                    path: ~/.ccache
+                    key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
+                    restore-keys: ccache-${{ matrix.toolchain.host }}-
+            # Less volatile cache
+            -   name: depends cache
+                uses: actions/cache@v4
+                with:
+                    path: contrib/depends/built
+                    key: depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
+                    restore-keys: |
+                        depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
+                        depends-${{ matrix.toolchain.host }}-
+            # Static cache
+            -   name: OSX SDK cache
+                uses: actions/cache@v4
+                with:
+                    path: contrib/depends/sdk-sources
+                    key: sdk-${{ matrix.toolchain.host }}-${{ matrix.toolchain.osx_sdk }}
+                    restore-keys: sdk-${{ matrix.toolchain.host }}-${{ matrix.toolchain.osx_sdk }}
+            -   name: set apt conf
+                run: ${{env.APT_SET_CONF}}
+            -   name: install dependencies
+                run: sudo apt update; sudo apt -y install build-essential libtool cmake autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache ${{ matrix.toolchain.packages }}
+            -   name: prepare w64-mingw32
+                if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'i686-w64-mingw32' }}
+                run: |
+                    sudo update-alternatives --set ${{ matrix.toolchain.host }}-g++ $(which ${{ matrix.toolchain.host }}-g++-posix)
+                    sudo update-alternatives --set ${{ matrix.toolchain.host }}-gcc $(which ${{ matrix.toolchain.host }}-gcc-posix)
+            -   name: build
+                run: |
+                    ${{env.CCACHE_SETTINGS}}
+                    make depends target=${{ matrix.toolchain.host }} -j2
+            -   uses: actions/upload-artifact@v4
+                if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'x86_64-apple-darwin' || matrix.toolchain.host == 'aarch64-apple-darwin' || matrix.toolchain.host == 'x86_64-unknown-linux-gnu' }}
+                with:
+                    name: ${{ matrix.toolchain.name }}
+                    path: |
+                        /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/build/${{ matrix.toolchain.host }}/release/bin/nerva*

From 81718c5602f914798395c38039d7d1e7faf9b27d Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 22:04:54 +0530
Subject: [PATCH 09/27] ci(depends): try fix builds

---
 .github/workflows/depends.yml | 3 ---
 CMakeLists.txt                | 2 +-
 2 files changed, 1 insertion(+), 4 deletions(-)

diff --git a/.github/workflows/depends.yml b/.github/workflows/depends.yml
index 168f7365..970505ff 100644
--- a/.github/workflows/depends.yml
+++ b/.github/workflows/depends.yml
@@ -26,9 +26,6 @@ jobs:
             fail-fast: false
             matrix:
                 toolchain:
-                    -   name: "RISCV 64bit"
-                        host: "riscv64-linux-gnu"
-                        packages: "python3 gperf g++-riscv64-linux-gnu"
                     -   name: "ARM v7"
                         host: "arm-linux-gnueabihf"
                         packages: "python3 gperf g++-arm-linux-gnueabihf"
diff --git a/CMakeLists.txt b/CMakeLists.txt
index ecd66401..ae60dd5c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -874,7 +874,7 @@ elseif(NOT MSVC AND NOT DEPENDS)
   set(EXTRA_LIBRARIES ${RT})
 endif()
 
-if (UNIX AND NOT APPLE AND STATIC)
+if (UNIX AND STATIC AND NOT APPLE AND NOT DEPENDS)
   set(EXTRA_LIBRARIES "${EXTRA_LIBRARIES};protokit;bsd")
 endif()
 

From 20b9b9084aa31edafcc5a9950a989576ad640a41 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 22:38:10 +0530
Subject: [PATCH 10/27] ci(depends): fix win build

---
 CMakeLists.txt | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index ae60dd5c..d566f1e7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -393,7 +393,7 @@ endif ()
 
 if (APPLE AND NOT IOS)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=default")
-  
+
   if (NOT OpenSSL_DIR)
       EXECUTE_PROCESS(COMMAND brew --prefix openssl
         OUTPUT_VARIABLE OPENSSL_ROOT_DIR
@@ -453,7 +453,7 @@ include_directories(${LIBUNWIND_INCLUDE})
 link_directories(${LIBUNWIND_LIBRARY_DIRS})
 
 # Final setup for hid
-if (HIDAPI_FOUND) 
+if (HIDAPI_FOUND)
   message(STATUS "Using HIDAPI include dir at ${HIDAPI_INCLUDE_DIR}")
   add_definitions(-DHAVE_HIDAPI)
   include_directories(${HIDAPI_INCLUDE_DIR})
@@ -741,7 +741,7 @@ else()
   endif(ARM)
 
   if(ANDROID AND NOT BUILD_GUI_DEPS STREQUAL "ON" OR IOS)
-    #From Android 5: "only position independent executables (PIE) are supported" 
+    #From Android 5: "only position independent executables (PIE) are supported"
     message(STATUS "Enabling PIE executable")
     set(PIC_FLAG "")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIE")
@@ -859,7 +859,9 @@ include_directories(SYSTEM ${Boost_INCLUDE_DIRS})
 if(MINGW)
   set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wa,-mbig-obj")
   set(EXTRA_LIBRARIES mswsock;ws2_32;iphlpapi;crypt32;bcrypt)
-  set(ICU_LIBRARIES icuio icuin icuuc icudt icutu iconv)
+  if(NOT DEPENDS)
+    set(ICU_LIBRARIES icuio icuin icuuc icudt icutu iconv)
+  endif()
 elseif(APPLE OR OPENBSD OR ANDROID)
   set(EXTRA_LIBRARIES "")
 elseif(FREEBSD)

From 3d9278db4cacee788ac8484ccdf9af3133dbc5b8 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Mon, 7 Oct 2024 23:24:41 +0530
Subject: [PATCH 11/27] ci(depends): run gitian on ubuntu focal

---
 contrib/gitian/dockrun.sh         | 8 ++++----
 contrib/gitian/gitian-android.yml | 2 +-
 contrib/gitian/gitian-build.py    | 6 +++---
 contrib/gitian/gitian-freebsd.yml | 2 +-
 contrib/gitian/gitian-linux.yml   | 2 +-
 contrib/gitian/gitian-osx.yml     | 2 +-
 contrib/gitian/gitian-win.yml     | 2 +-
 7 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/contrib/gitian/dockrun.sh b/contrib/gitian/dockrun.sh
index 396db126..e3cd0df4 100644
--- a/contrib/gitian/dockrun.sh
+++ b/contrib/gitian/dockrun.sh
@@ -17,8 +17,8 @@ fi
 
 GH_USER=${GH_USER-$USER}
 
-TAG=gitrun-bionic
-TAG2=base-bionic-amd64
+TAG=gitrun-focal
+TAG2=base-focal-amd64
 IMAGE=`docker images | grep $TAG`
 
 WORKDIR=/home/ubuntu
@@ -30,7 +30,7 @@ cd docker
 
 # container for running gitian-build.py
 cat <<EOF > ${TAG}.Dockerfile
-FROM ubuntu:bionic
+FROM ubuntu:focal
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' > /etc/apt/apt.conf.d/50cacher
@@ -63,7 +63,7 @@ cd docker
 
 # container for actually running each build
 cat <<EOF > ${TAG2}.Dockerfile
-FROM ubuntu:bionic
+FROM ubuntu:focal
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' > /etc/apt/apt.conf.d/50cacher
diff --git a/contrib/gitian/gitian-android.yml b/contrib/gitian/gitian-android.yml
index 8f23a9b1..5743ef79 100644
--- a/contrib/gitian/gitian-android.yml
+++ b/contrib/gitian/gitian-android.yml
@@ -2,7 +2,7 @@
 name: "nerva-android-0.2"
 enable_cache: true
 suites:
-- "bionic"
+- "focal"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-build.py b/contrib/gitian/gitian-build.py
index 0a58f590..e503bca1 100644
--- a/contrib/gitian/gitian-build.py
+++ b/contrib/gitian/gitian-build.py
@@ -36,7 +36,7 @@ def setup():
         subprocess.check_call(['rm', 'nerva', '-fR'])
     subprocess.check_call(['git', 'clone', args.url, 'nerva'])
     os.chdir('..')
-    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']
+    make_image_prog = ['bin/make-base-vm', '--suite', 'focal', '--arch', 'amd64']
     if args.docker:
         try:
             subprocess.check_output(['docker', '--help'])
@@ -48,7 +48,7 @@ def setup():
         make_image_prog += ['--lxc']
     subprocess.check_call(make_image_prog)
     os.chdir(workdir)
-    if args.is_bionic and not args.kvm and not args.docker:
+    if args.is_focal and not args.kvm and not args.docker:
         subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])
         print('Reboot is required')
         sys.exit(0)
@@ -134,7 +134,7 @@ def main():
     args = parser.parse_args()
     workdir = os.getcwd()
 
-    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])
+    args.is_focal = b'focal' in subprocess.check_output(['lsb_release', '-cs'])
 
     if args.buildsign:
         args.build = True
diff --git a/contrib/gitian/gitian-freebsd.yml b/contrib/gitian/gitian-freebsd.yml
index 35898af2..a72b1b17 100644
--- a/contrib/gitian/gitian-freebsd.yml
+++ b/contrib/gitian/gitian-freebsd.yml
@@ -2,7 +2,7 @@
 name: "nerva-freebsd-0.2"
 enable_cache: true
 suites:
-- "bionic"
+- "focal"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
index 40e0cfc7..8b919156 100644
--- a/contrib/gitian/gitian-linux.yml
+++ b/contrib/gitian/gitian-linux.yml
@@ -2,7 +2,7 @@
 name: "nerva-linux-0.2"
 enable_cache: true
 suites:
-- "bionic"
+- "focal"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-osx.yml b/contrib/gitian/gitian-osx.yml
index a7018759..97ede6bf 100644
--- a/contrib/gitian/gitian-osx.yml
+++ b/contrib/gitian/gitian-osx.yml
@@ -2,7 +2,7 @@
 name: "nerva-osx-0.2"
 enable_cache: true
 suites:
-- "bionic"
+- "focal"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-win.yml b/contrib/gitian/gitian-win.yml
index 38d867fb..194e4d02 100644
--- a/contrib/gitian/gitian-win.yml
+++ b/contrib/gitian/gitian-win.yml
@@ -2,7 +2,7 @@
 name: "nerva-win-0.2"
 enable_cache: true
 suites:
-- "bionic"
+- "focal"
 architectures:
 - "amd64"
 packages:

From efb2d199c278520c9bb30583bbe44dd9ff83fa04 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:11:00 +0530
Subject: [PATCH 12/27] chore: restructure files

---
 Ascii-Logo.txt => ascii-logo.txt                    | 0
 ANONYMITY_NETWORKS.md => docs/ANONYMITY_NETWORKS.md | 0
 CONTRIBUTING.md => docs/CONTRIBUTING.md             | 0
 LEVIN_PROTOCOL.md => docs/LEVIN_PROTOCOL.md         | 0
 README.i18n.md => docs/README.i18n.md               | 0
 sn => scripts/sn                                    | 0
 6 files changed, 0 insertions(+), 0 deletions(-)
 rename Ascii-Logo.txt => ascii-logo.txt (100%)
 rename ANONYMITY_NETWORKS.md => docs/ANONYMITY_NETWORKS.md (100%)
 rename CONTRIBUTING.md => docs/CONTRIBUTING.md (100%)
 rename LEVIN_PROTOCOL.md => docs/LEVIN_PROTOCOL.md (100%)
 rename README.i18n.md => docs/README.i18n.md (100%)
 rename sn => scripts/sn (100%)
 mode change 100755 => 100644

diff --git a/Ascii-Logo.txt b/ascii-logo.txt
similarity index 100%
rename from Ascii-Logo.txt
rename to ascii-logo.txt
diff --git a/ANONYMITY_NETWORKS.md b/docs/ANONYMITY_NETWORKS.md
similarity index 100%
rename from ANONYMITY_NETWORKS.md
rename to docs/ANONYMITY_NETWORKS.md
diff --git a/CONTRIBUTING.md b/docs/CONTRIBUTING.md
similarity index 100%
rename from CONTRIBUTING.md
rename to docs/CONTRIBUTING.md
diff --git a/LEVIN_PROTOCOL.md b/docs/LEVIN_PROTOCOL.md
similarity index 100%
rename from LEVIN_PROTOCOL.md
rename to docs/LEVIN_PROTOCOL.md
diff --git a/README.i18n.md b/docs/README.i18n.md
similarity index 100%
rename from README.i18n.md
rename to docs/README.i18n.md
diff --git a/sn b/scripts/sn
old mode 100755
new mode 100644
similarity index 100%
rename from sn
rename to scripts/sn

From 849e8c7e279354dee7fdb876c36975c0f64be879 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:19:52 +0530
Subject: [PATCH 13/27] ci(gitian): drop support for linux riscv64

---
 contrib/gitian/gitian-linux.yml | 11 +----------
 1 file changed, 1 insertion(+), 10 deletions(-)

diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
index 8b919156..aa6d2e66 100644
--- a/contrib/gitian/gitian-linux.yml
+++ b/contrib/gitian/gitian-linux.yml
@@ -21,7 +21,6 @@ packages:
 - "g++-7-arm-linux-gnueabihf"
 - "gcc-arm-linux-gnueabihf"
 - "g++-arm-linux-gnueabihf"
-- "g++-riscv64-linux-gnu"
 - "g++-7-multilib"
 - "gcc-7-multilib"
 - "binutils-arm-linux-gnueabihf"
@@ -44,7 +43,7 @@ files: []
 script: |
 
   WRAP_DIR=$HOME/wrapped
-  HOSTS="x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu i686-linux-gnu riscv64-linux-gnu"
+  HOSTS="x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu i686-linux-gnu"
   FAKETIME_HOST_PROGS=""
   FAKETIME_PROGS="date"
   HOST_CFLAGS="-O2 -g"
@@ -160,13 +159,6 @@ script: |
     fi
     export C_INCLUDE_PATH="$EXTRA_INCLUDES"
     export CPLUS_INCLUDE_PATH="$EXTRA_INCLUDES"
-    #  glibc only added riscv support in 2.27, disable backwards compatibility
-    if [ "$i" == "riscv64-linux-gnu" ]; then
-      BACKCOMPAT_OPTION=OFF
-    else
-      BACKCOMPAT_OPTION=ON
-    fi
-    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake -DBACKCOMPAT=${BACKCOMPAT_OPTION} -DCMAKE_SKIP_RPATH=ON
     make ${MAKEOPTS}
     chmod 755 bin/*
     cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
@@ -177,4 +169,3 @@ script: |
     cd ..
     rm -rf build
   done
-

From f5213a40acd465873c3b2bf1e9f7b9ac40e06dbe Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:20:17 +0530
Subject: [PATCH 14/27] build: set min req cmake to 3.5

---
 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d566f1e7..68a22ce3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -40,7 +40,7 @@ if (IOS)
     INCLUDE(CmakeLists_IOS.txt)
 endif()
 
-cmake_minimum_required(VERSION 3.14.6)
+cmake_minimum_required(VERSION 3.5)
 message(STATUS "CMake version ${CMAKE_VERSION}")
 
 project(monero)

From ac6c69d3ebd8ca8bd8c0b6a827d142057b310345 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:21:06 +0530
Subject: [PATCH 15/27] Revert "ci(depends): run gitian on ubuntu focal"

This reverts commit 3d9278db4cacee788ac8484ccdf9af3133dbc5b8.
---
 contrib/gitian/dockrun.sh         | 8 ++++----
 contrib/gitian/gitian-android.yml | 2 +-
 contrib/gitian/gitian-build.py    | 6 +++---
 contrib/gitian/gitian-freebsd.yml | 2 +-
 contrib/gitian/gitian-linux.yml   | 2 +-
 contrib/gitian/gitian-osx.yml     | 2 +-
 contrib/gitian/gitian-win.yml     | 2 +-
 7 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/contrib/gitian/dockrun.sh b/contrib/gitian/dockrun.sh
index e3cd0df4..396db126 100644
--- a/contrib/gitian/dockrun.sh
+++ b/contrib/gitian/dockrun.sh
@@ -17,8 +17,8 @@ fi
 
 GH_USER=${GH_USER-$USER}
 
-TAG=gitrun-focal
-TAG2=base-focal-amd64
+TAG=gitrun-bionic
+TAG2=base-bionic-amd64
 IMAGE=`docker images | grep $TAG`
 
 WORKDIR=/home/ubuntu
@@ -30,7 +30,7 @@ cd docker
 
 # container for running gitian-build.py
 cat <<EOF > ${TAG}.Dockerfile
-FROM ubuntu:focal
+FROM ubuntu:bionic
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' > /etc/apt/apt.conf.d/50cacher
@@ -63,7 +63,7 @@ cd docker
 
 # container for actually running each build
 cat <<EOF > ${TAG2}.Dockerfile
-FROM ubuntu:focal
+FROM ubuntu:bionic
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN echo 'Acquire::http { Proxy "http://172.17.0.1:3142"; };' > /etc/apt/apt.conf.d/50cacher
diff --git a/contrib/gitian/gitian-android.yml b/contrib/gitian/gitian-android.yml
index 5743ef79..8f23a9b1 100644
--- a/contrib/gitian/gitian-android.yml
+++ b/contrib/gitian/gitian-android.yml
@@ -2,7 +2,7 @@
 name: "nerva-android-0.2"
 enable_cache: true
 suites:
-- "focal"
+- "bionic"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-build.py b/contrib/gitian/gitian-build.py
index e503bca1..0a58f590 100644
--- a/contrib/gitian/gitian-build.py
+++ b/contrib/gitian/gitian-build.py
@@ -36,7 +36,7 @@ def setup():
         subprocess.check_call(['rm', 'nerva', '-fR'])
     subprocess.check_call(['git', 'clone', args.url, 'nerva'])
     os.chdir('..')
-    make_image_prog = ['bin/make-base-vm', '--suite', 'focal', '--arch', 'amd64']
+    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']
     if args.docker:
         try:
             subprocess.check_output(['docker', '--help'])
@@ -48,7 +48,7 @@ def setup():
         make_image_prog += ['--lxc']
     subprocess.check_call(make_image_prog)
     os.chdir(workdir)
-    if args.is_focal and not args.kvm and not args.docker:
+    if args.is_bionic and not args.kvm and not args.docker:
         subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])
         print('Reboot is required')
         sys.exit(0)
@@ -134,7 +134,7 @@ def main():
     args = parser.parse_args()
     workdir = os.getcwd()
 
-    args.is_focal = b'focal' in subprocess.check_output(['lsb_release', '-cs'])
+    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])
 
     if args.buildsign:
         args.build = True
diff --git a/contrib/gitian/gitian-freebsd.yml b/contrib/gitian/gitian-freebsd.yml
index a72b1b17..35898af2 100644
--- a/contrib/gitian/gitian-freebsd.yml
+++ b/contrib/gitian/gitian-freebsd.yml
@@ -2,7 +2,7 @@
 name: "nerva-freebsd-0.2"
 enable_cache: true
 suites:
-- "focal"
+- "bionic"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
index aa6d2e66..0b9d5e76 100644
--- a/contrib/gitian/gitian-linux.yml
+++ b/contrib/gitian/gitian-linux.yml
@@ -2,7 +2,7 @@
 name: "nerva-linux-0.2"
 enable_cache: true
 suites:
-- "focal"
+- "bionic"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-osx.yml b/contrib/gitian/gitian-osx.yml
index 97ede6bf..a7018759 100644
--- a/contrib/gitian/gitian-osx.yml
+++ b/contrib/gitian/gitian-osx.yml
@@ -2,7 +2,7 @@
 name: "nerva-osx-0.2"
 enable_cache: true
 suites:
-- "focal"
+- "bionic"
 architectures:
 - "amd64"
 packages:
diff --git a/contrib/gitian/gitian-win.yml b/contrib/gitian/gitian-win.yml
index 194e4d02..38d867fb 100644
--- a/contrib/gitian/gitian-win.yml
+++ b/contrib/gitian/gitian-win.yml
@@ -2,7 +2,7 @@
 name: "nerva-win-0.2"
 enable_cache: true
 suites:
-- "focal"
+- "bionic"
 architectures:
 - "amd64"
 packages:

From cfff71511da0a9ac3d179bf92c5d448efcf017eb Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:25:45 +0530
Subject: [PATCH 16/27] build: trigger build.yml


From fdd5f634f9166bea2399fccfa75797a1c2f89088 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:28:27 +0530
Subject: [PATCH 17/27] ci(build): update ignored paths

---
 .github/workflows/build.yml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 8ac2ff52..344e4207 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -3,10 +3,10 @@ name: ci/gh-actions/build
 on:
     push:
         paths-ignore:
-            - '**/*.md'
+            - '**.md'
     pull_request:
         paths-ignore:
-            - '**/*.md'
+            - '**.md'
 
 env:
     REMOVE_BUNDLED_PACKAGES: sudo rm -rf /usr/local

From 8a55ee5e85d957eb03081c6dcd6600f5bb100993 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:30:47 +0530
Subject: [PATCH 18/27] ci: enable build and depends to be triggered manually

---
 .github/workflows/build.yml   | 1 +
 .github/workflows/depends.yml | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 344e4207..bc78e070 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -7,6 +7,7 @@ on:
     pull_request:
         paths-ignore:
             - '**.md'
+    workflow_dispatch:
 
 env:
     REMOVE_BUNDLED_PACKAGES: sudo rm -rf /usr/local
diff --git a/.github/workflows/depends.yml b/.github/workflows/depends.yml
index 970505ff..a4d59bae 100644
--- a/.github/workflows/depends.yml
+++ b/.github/workflows/depends.yml
@@ -7,6 +7,7 @@ on:
     pull_request:
         paths-ignore:
             - '**.md'
+    workflow_dispatch:
 
 env:
     APT_SET_CONF: |

From 1cbe277e592cbef8ab5c2dbe728617f0381a4014 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:39:27 +0530
Subject: [PATCH 19/27] ci(build): switch back to old ccache paths

---
 .github/workflows/build.yml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index bc78e070..78fdfc7e 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -23,7 +23,7 @@ jobs:
     build-ubuntu:
         runs-on: ubuntu-latest
         env:
-            CCACHE_TEMPDIR: ~/.ccache-temp
+            CCACHE_TEMPDIR: /tmp/.ccache-temp
         steps:
             -   uses: actions/checkout@v4
                 with:
@@ -75,7 +75,7 @@ jobs:
     build-macos:
         runs-on: macos-latest
         env:
-            CCACHE_TEMPDIR: ~/.ccache-temp
+            CCACHE_TEMPDIR: /tmp/.ccache-temp
         steps:
             -   uses: actions/checkout@v4
                 with:
@@ -97,7 +97,7 @@ jobs:
     libwallet-ubuntu:
         runs-on: ubuntu-latest
         env:
-            CCACHE_TEMPDIR: ~/.ccache-temp
+            CCACHE_TEMPDIR: /tmp/.ccache-temp
         steps:
             -   uses: actions/checkout@v4
                 with:

From 650330340a03928ce73ebcf0f877c11b53a70d17 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 00:45:51 +0530
Subject: [PATCH 20/27] ci(depends): reformat

---
 .github/workflows/depends.yml | 21 ++++++---------------
 1 file changed, 6 insertions(+), 15 deletions(-)

diff --git a/.github/workflows/depends.yml b/.github/workflows/depends.yml
index a4d59bae..6edd0dfb 100644
--- a/.github/workflows/depends.yml
+++ b/.github/workflows/depends.yml
@@ -63,15 +63,13 @@ jobs:
                 with:
                     fetch-depth: 0
                     submodules: recursive
-            # Most volatile cache
-            -   name: ccache
+            -   name: Ccache
                 uses: actions/cache@v4
                 with:
                     path: ~/.ccache
                     key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
                     restore-keys: ccache-${{ matrix.toolchain.host }}-
-            # Less volatile cache
-            -   name: depends cache
+            -   name: Depends cache
                 uses: actions/cache@v4
                 with:
                     path: contrib/depends/built
@@ -79,23 +77,16 @@ jobs:
                     restore-keys: |
                         depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
                         depends-${{ matrix.toolchain.host }}-
-            # Static cache
-            -   name: OSX SDK cache
-                uses: actions/cache@v4
-                with:
-                    path: contrib/depends/sdk-sources
-                    key: sdk-${{ matrix.toolchain.host }}-${{ matrix.toolchain.osx_sdk }}
-                    restore-keys: sdk-${{ matrix.toolchain.host }}-${{ matrix.toolchain.osx_sdk }}
-            -   name: set apt conf
+            -   name: Set apt conf
                 run: ${{env.APT_SET_CONF}}
-            -   name: install dependencies
+            -   name: Install dependencies
                 run: sudo apt update; sudo apt -y install build-essential libtool cmake autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache ${{ matrix.toolchain.packages }}
-            -   name: prepare w64-mingw32
+            -   name: Prepare w64-mingw32
                 if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'i686-w64-mingw32' }}
                 run: |
                     sudo update-alternatives --set ${{ matrix.toolchain.host }}-g++ $(which ${{ matrix.toolchain.host }}-g++-posix)
                     sudo update-alternatives --set ${{ matrix.toolchain.host }}-gcc $(which ${{ matrix.toolchain.host }}-gcc-posix)
-            -   name: build
+            -   name: Build
                 run: |
                     ${{env.CCACHE_SETTINGS}}
                     make depends target=${{ matrix.toolchain.host }} -j2

From cc868852d1d0dfe219d7f027a1c6593e049a2b11 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 21:59:35 +0530
Subject: [PATCH 21/27] ci(depends): upload artifacts for all builds

---
 .github/workflows/depends.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.github/workflows/depends.yml b/.github/workflows/depends.yml
index 6edd0dfb..8fc1f677 100644
--- a/.github/workflows/depends.yml
+++ b/.github/workflows/depends.yml
@@ -91,7 +91,7 @@ jobs:
                     ${{env.CCACHE_SETTINGS}}
                     make depends target=${{ matrix.toolchain.host }} -j2
             -   uses: actions/upload-artifact@v4
-                if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'x86_64-apple-darwin' || matrix.toolchain.host == 'aarch64-apple-darwin' || matrix.toolchain.host == 'x86_64-unknown-linux-gnu' }}
+                # if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'x86_64-apple-darwin' || matrix.toolchain.host == 'aarch64-apple-darwin' || matrix.toolchain.host == 'x86_64-unknown-linux-gnu' }}
                 with:
                     name: ${{ matrix.toolchain.name }}
                     path: |

From 541f22638a594733c9ca0ba8bbf1c00a0f26dad4 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 22:49:34 +0530
Subject: [PATCH 22/27] build(cmake): set 3.5 min version

---
 CMakeLists.txt                         | 2 +-
 external/easylogging++/CMakeLists.txt  | 2 +-
 src/cryptonote_protocol/CMakeLists.txt | 2 +-
 src/p2p/CMakeLists.txt                 | 2 +-
 translations/CMakeLists.txt            | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 68a22ce3..24146bc7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -763,7 +763,7 @@ else()
   endif()
   set(USE_LTO ${USE_LTO_DEFAULT} CACHE BOOL "Use Link-Time Optimization (Release mode only)")
 
-  if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
+  if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
     # There is a clang bug that does not allow to compile code that uses AES-NI intrinsics if -flto is enabled, so explicitly disable
     set(USE_LTO false)
   endif()
diff --git a/external/easylogging++/CMakeLists.txt b/external/easylogging++/CMakeLists.txt
index 0b8885d2..029f63a8 100644
--- a/external/easylogging++/CMakeLists.txt
+++ b/external/easylogging++/CMakeLists.txt
@@ -26,7 +26,7 @@
 # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 # THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.14.6)
+cmake_minimum_required(VERSION 3.5)
 
 project(easylogging CXX)
 
diff --git a/src/cryptonote_protocol/CMakeLists.txt b/src/cryptonote_protocol/CMakeLists.txt
index 9ac0ccae..bb3d4e40 100644
--- a/src/cryptonote_protocol/CMakeLists.txt
+++ b/src/cryptonote_protocol/CMakeLists.txt
@@ -26,7 +26,7 @@
 # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 # THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.14.6)
+cmake_minimum_required(VERSION 3.5)
 project (monero CXX)
 
 file(GLOB CRYPTONOTE_PROTOCOL *)
diff --git a/src/p2p/CMakeLists.txt b/src/p2p/CMakeLists.txt
index 94e64cdd..d8816ef5 100644
--- a/src/p2p/CMakeLists.txt
+++ b/src/p2p/CMakeLists.txt
@@ -26,7 +26,7 @@
 # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 # THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.14.6)
+cmake_minimum_required(VERSION 3.5)
 project (monero CXX)
 
 file(GLOB P2P *)
diff --git a/translations/CMakeLists.txt b/translations/CMakeLists.txt
index 03f19ea1..1b252e75 100644
--- a/translations/CMakeLists.txt
+++ b/translations/CMakeLists.txt
@@ -26,7 +26,7 @@
 # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 # THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.14.6)
+cmake_minimum_required(VERSION 3.5)
 
 project(translations)
 

From 90daaf89ee675ee3c186671e18694187ceb1ec06 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Tue, 8 Oct 2024 23:54:36 +0530
Subject: [PATCH 23/27] fix(build - gitian): restore accidentally removed
 command

while removing riscv support
---
 contrib/gitian/gitian-linux.yml | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
index 0b9d5e76..7ba9a2a6 100644
--- a/contrib/gitian/gitian-linux.yml
+++ b/contrib/gitian/gitian-linux.yml
@@ -159,6 +159,7 @@ script: |
     fi
     export C_INCLUDE_PATH="$EXTRA_INCLUDES"
     export CPLUS_INCLUDE_PATH="$EXTRA_INCLUDES"
+    cmake .. -DCMAKE_TOOLCHAIN_FILE=${BASEPREFIX}/${i}/share/toolchain.cmake -DBACKCOMPAT=${BACKCOMPAT_OPTION} -DCMAKE_SKIP_RPATH=ON
     make ${MAKEOPTS}
     chmod 755 bin/*
     cp ../LICENSE ../README.md ../docs/ANONYMITY_NETWORKS.md bin
@@ -169,3 +170,4 @@ script: |
     cd ..
     rm -rf build
   done
+

From 42a7b9c74c7019f11dc051cc33713d9f1ed87032 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Wed, 9 Oct 2024 01:13:49 +0530
Subject: [PATCH 24/27] ci(gitian): enable freebsd and android builds

---
 .github/workflows/gitian.yml | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/.github/workflows/gitian.yml b/.github/workflows/gitian.yml
index 33e00392..ee7f613b 100644
--- a/.github/workflows/gitian.yml
+++ b/.github/workflows/gitian.yml
@@ -16,10 +16,10 @@ jobs:
                         option: "l"
                     -   name: "Windows"
                         option: "w"
-                    #-   name: "Android"
-                    #    option: "a"
-                    #-   name: "FreeBSD"
-                    #    option: "f"
+                    -   name: "Android"
+                        option: "a"
+                    -   name: "FreeBSD"
+                        option: "f"
                     -   name: "macOS"
                         option: "m"
         name: ${{ matrix.operating-system.name }}

From c02e1cba7d24f7e218f95bcdcfcc9da4150355fe Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Wed, 9 Oct 2024 13:41:06 +0530
Subject: [PATCH 25/27] ci: remove release.yml (move to gitian build system)

---
 .github/workflows/release.yml | 72 -----------------------------------
 1 file changed, 72 deletions(-)
 delete mode 100644 .github/workflows/release.yml

diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml
deleted file mode 100644
index 0e8a9777..00000000
--- a/.github/workflows/release.yml
+++ /dev/null
@@ -1,72 +0,0 @@
-name: ci/gh-actions/release
-
-on:
-    push:
-        tags:
-            - '*'
-
-jobs:
-    release-ubuntu:
-        runs-on: ubuntu-latest
-        steps:
-            -   uses: actions/checkout@v4
-                with:
-                    submodules: recursive
-            -   name: Remove bundled packages
-                run: sudo rm -rf /usr/local
-            -   name: Set APT configuration
-                run: |
-                    echo "Acquire::Retries \"3\";"         | sudo tee -a /etc/apt/apt.conf.d/80-custom
-                    echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
-                    echo "Acquire::ftp::Timeout \"120\";"  | sudo tee -a /etc/apt/apt.conf.d/80-custom
-            -   name: Update APT
-                run: sudo apt update
-            -   name: Install dependencies
-                run: sudo apt install -y build-essential cmake pkg-config libboost-all-dev libssl-dev libzmq3-dev libpgm-dev libunbound-dev libsodium-dev git
-            -   name: Build
-                run: USE_SINGLE_DIR=1 make release-static-linux-x86_64 -j3
-            -   name: Upload artifacts
-                uses: actions/upload-artifact@v4
-                with:
-                    name: linux-x64
-                    path: 'build/**/**/**/bin/nerva*'
-
-    release-windows:
-        runs-on: windows-latest
-        defaults:
-            run:
-                shell: msys2 {0}
-        steps:
-            -   uses: actions/checkout@v4
-                with:
-                    submodules: recursive
-            -   name: Install dependencies
-                uses: msys2/setup-msys2@v2
-                with:
-                    update: true
-                    install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-unbound git
-            -   name: Build
-                run: USE_SINGLE_DIR=1 make release-static-win64 -j2
-            -   name: Upload artifacts
-                uses: actions/upload-artifact@v4
-                with:
-                    name: win-x64
-                    path: 'build/**/**/**/bin/nerva*'
-
-    release-macos:
-        runs-on: macos-13
-        steps:
-            -   uses: actions/checkout@v4
-                with:
-                    submodules: recursive
-            -   name: Install dependencies
-                run: |
-                    HOMEBREW_NO_AUTO_UPDATE=1 brew install boost hidapi zmq libpgm miniupnpc ldns expat libunwind-headers protobuf@21 ccache
-                    brew link protobuf@21
-            -   name: Build
-                run: USE_SINGLE_DIR=1 make release-static-mac-x86_64 -j3
-            -   name: Upload artifacts
-                uses: actions/upload-artifact@v4
-                with:
-                    name: mac-x64
-                    path: 'build/**/**/**/bin/nerva*'

From 0377458f10e4c2bdff72bc5cd49168fae8223dc2 Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Thu, 10 Oct 2024 00:45:25 +0530
Subject: [PATCH 26/27] docs(gitian): update instructions for nerva

---
 contrib/gitian/DOCKRUN.md       | 10 +++++-----
 contrib/gitian/README.md        | 20 ++++++++++----------
 contrib/gitian/gitian-build.py  |  4 ++--
 contrib/gitian/gitian-linux.yml |  2 +-
 contrib/gitian/gitian-osx.yml   |  2 +-
 contrib/gitian/gitian-win.yml   |  2 +-
 6 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/contrib/gitian/DOCKRUN.md b/contrib/gitian/DOCKRUN.md
index f7eacf0c..b412be4b 100644
--- a/contrib/gitian/DOCKRUN.md
+++ b/contrib/gitian/DOCKRUN.md
@@ -23,7 +23,7 @@ su $USER
 The final `su` command is needed to start a new shell with your new group membership,
 since the `usermod` command doesn't affect any existing sessions.
 
-You'll also need to clone the ner repository and navigate to the `contrib/gitian` directory:
+You'll also need to clone the `nerva` repository and navigate to the `contrib/gitian` directory:
 
 ```bash
 git clone https://github.com/nerva-project/nerva.git
@@ -44,10 +44,10 @@ export GH_USER=<github account name>
 ```
 
 * PGP keys - if you don't have one already, you can use `gpg --quick-gen-key` to generate it.
-* a fork of the [gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repo on your GitHub account.
+* a fork of the [gitian-sigs](https://github.com/nerva-project/gitian-sigs/) repo on your GitHub account.
 Please follow the directions there for uploading your key first.
 
-**Note:** Please ensure your gpg public key is available to check signatures by adding it to the [gitian.sigs/gitian-pubkeys/](https://github.com/nerva-project/gitian.sigs/tree/master/gitian-pubkeys) directory in a pull request.
+**Note:** Please ensure your gpg public key is available to check signatures by adding it to the [gitian-sigs/pubkeys/](https://github.com/nerva-project/gitian-sigs/tree/main/pubkeys) directory in a pull request.
 
 
 Building the Binaries
@@ -57,7 +57,7 @@ The dockrun.sh script will do everything to build the binaries. Just specify the
 version to build as its only argument, e.g.
 
 ```bash
-VERSION=v0.18.1.0
+VERSION=v0.2.0.0
 ./dockrun.sh $VERSION
 ```
 
@@ -67,7 +67,7 @@ then the results will be signed, and the signatures will be pushed to GitHub.
 
 ***Note: In order to publish the signed assertions via this script, you need to have your SSH key uploaded to GitHub beforehand. See https://docs.github.com/articles/generating-an-ssh-key/ for more info.***
 
-You can also look in the [gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repo and / or [getnerva.org release checksums](https://web.getnerva.org/downloads/hashes.txt) to see if others got the same checksum for the same version tag.  If there is ever a mismatch -- **STOP! Something is wrong**.  Contact others on IRC / GitHub to figure out what is going on.
+You can also look in the [gitian-sigs](https://github.com/nerva-project/gitian-sigs/) repo and / or [release checksums](https://github.com/nerva-project/nerva/releases/latest/hashes.txt) to see if others got the same checksum for the same version tag.  If there is ever a mismatch -- **STOP! Something is wrong**.  Contact others on GitHub / Discord to figure out what is going on.
 
 
 Other Options
diff --git a/contrib/gitian/README.md b/contrib/gitian/README.md
index e99a138d..3e31b7e5 100644
--- a/contrib/gitian/README.md
+++ b/contrib/gitian/README.md
@@ -133,7 +133,7 @@ Common setup part:
 su - gitianuser
 
 GH_USER=YOUR_GITHUB_USER_NAME
-VERSION=v0.18.0.0
+VERSION=v0.2.0.0
 ```
 
 Where `GH_USER` is your GitHub user name and `VERSION` is the version tag you want to build. 
@@ -153,13 +153,13 @@ Setup for docker:
 
 While gitian and this build script does provide a way for you to sign the build directly, it is recommended to sign in a separate step. This script is only there for convenience. Separate steps for building can still be taken.
 In order to sign gitian builds on your host machine, which has your PGP key, 
-fork the [gitian.sigs repository](https://github.com/nerva-project/gitian.sigs) and clone it on your host machine, 
+fork the [gitian-sigs repository](https://github.com/nerva-project/gitian-sigs) and clone it on your host machine, 
 or pass the signed assert file back to your build machine.
 
 ```bash
 git clone https://github.com/nerva-project/gitian.sigs/
-pushd gitian.sigs
-git remote add $GH_USER https://github.com/$GH_USER/gitian.sigs
+pushd gitian-sigs
+git remote add $GH_USER https://github.com/$GH_USER/gitian-sigs
 popd
 ```
 
@@ -180,7 +180,7 @@ A full example for `docker` would look like the following:
 ./gitian-build.py -j 5 --memory 10000 --docker --detach-sign --no-commit --build $GH_USER $VERSION
 ```
 
-If all went well, this produces a number of (uncommitted) `.assert` files in the gitian.sigs directory.
+If all went well, this produces a number of (uncommitted) `.assert` files in the gitian-sigs directory.
 
 Checking your work
 ------------------
@@ -206,7 +206,7 @@ popd
 Don't ignore the incorrect formatting of the found assert files. These files you'll have to compare manually (currently OSX and FreeBSD).
 
 
-You can also look in the [gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repo and / or [getnerva.org release checksums](https://web.getnerva.org/downloads/hashes.txt) to see if others got the same checksum for the same version tag.  If there is ever a mismatch -- **STOP! Something is wrong**.  Contact others on IRC / github to figure out what is going on.
+You can also look in the [gitian-sigs](https://github.com/nerva-project/gitian-sigs/) repo and / or [release checksums](https://github.com/nerva-project/nerva/releases/latest/hashes.txt) to see if others got the same checksum for the same version tag.  If there is ever a mismatch -- **STOP! Something is wrong**.  Contact others on GitHub / Discord to figure out what is going on.
 
 
 Signing assert files
@@ -225,17 +225,17 @@ Submitting your signed assert files
 -----------------------------------
 
 Make a pull request (both the `.assert` and `.assert.sig` files) to the
-[nerva-project/gitian.sigs](https://github.com/nerva-project/gitian.sigs/) repository:
+[nerva-project/gitian-sigs](https://github.com/nerva-project/gitian-sigs/) repository:
 
 ```bash
-cd gitian.sigs
+cd gitian-sigs
 git checkout -b $VERSION
 # add your assert and sig files...
 git commit -S -a -m "Add $GH_USER $VERSION"
 git push --set-upstream $GH_USER $VERSION
 ```
 
-**Note:** Please ensure your gpg public key is available to check signatures by adding it to the [gitian.sigs/gitian-pubkeys/](https://github.com/nerva-project/gitian.sigs/tree/master/gitian-pubkeys) directory in a pull request.
+**Note:** Please ensure your gpg public key is available to check signatures by adding it to the [gitian-sigs/pubkeys/](https://github.com/nerva-project/gitian-sigs/tree/main/pubkeys) directory in a pull request.
 
 
 More Build Options
@@ -243,7 +243,7 @@ More Build Options
 
 You can choose your own remote and commit hash by running for example:
 ```bash
-./gitian-build.py --detach-sign --no-commit --url https://github.com/nervamooo-nerva/bitnerva -b nervamooo 1f5680c8db8f4cc7acc04a04c724b832003440fd
+./gitian-build.py --detach-sign --no-commit --url https://github.com/Sn1F3rt/nerva -b Sn1F3rt c02e1cba7d24f7e218f95bcdcfcc9da4150355fe
 ```
 
 Note that you won't be able to build commits authored before the gitian scripts
diff --git a/contrib/gitian/gitian-build.py b/contrib/gitian/gitian-build.py
index 0a58f590..a8114654 100644
--- a/contrib/gitian/gitian-build.py
+++ b/contrib/gitian/gitian-build.py
@@ -5,7 +5,7 @@
 import subprocess
 import sys
 
-gsigs = 'https://github.com/monero-project/gitian.sigs.git'
+gsigs = 'https://github.com/monero-project/gitian-sigs.git'
 gbrepo = 'https://github.com/devrandom/gitian-builder.git'
 
 platforms = {'l': ['Linux', 'linux', 'tar.bz2'],
@@ -113,7 +113,7 @@ def main():
     parser = argparse.ArgumentParser(description='Script for running full Gitian builds.', usage='%(prog)s [options] signer version')
     parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')
     parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')
-    parser.add_argument('-u', '--url', dest='url', default='https://github.com/Sn1F3rt/nerva', help='Specify the URL of the repository. Default is %(default)s')
+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/nerva-project/nerva', help='Specify the URL of the repository. Default is %(default)s')
     parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')
     parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')
     parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')
diff --git a/contrib/gitian/gitian-linux.yml b/contrib/gitian/gitian-linux.yml
index 7ba9a2a6..6c187482 100644
--- a/contrib/gitian/gitian-linux.yml
+++ b/contrib/gitian/gitian-linux.yml
@@ -37,7 +37,7 @@ packages:
 - "python"
 - "cmake"
 remotes:
-- "url": "https://github.com/Sn1F3rt/nerva.git"
+- "url": "https://github.com/nerva-project/nerva.git"
   "dir": "nerva"
 files: []
 script: |
diff --git a/contrib/gitian/gitian-osx.yml b/contrib/gitian/gitian-osx.yml
index a7018759..6f5e72bd 100644
--- a/contrib/gitian/gitian-osx.yml
+++ b/contrib/gitian/gitian-osx.yml
@@ -24,7 +24,7 @@ packages:
 - "python-dev"
 - "python-setuptools"
 remotes:
-- "url": "https://github.com/Sn1F3rt/nerva.git"
+- "url": "https://github.com/nerva-project/nerva.git"
   "dir": "nerva"
 files: []
 script: |
diff --git a/contrib/gitian/gitian-win.yml b/contrib/gitian/gitian-win.yml
index 38d867fb..8d5b62fa 100644
--- a/contrib/gitian/gitian-win.yml
+++ b/contrib/gitian/gitian-win.yml
@@ -35,7 +35,7 @@ alternatives:
   package: "x86_64-w64-mingw32-gcc"
   path: "/usr/bin/x86_64-w64-mingw32-gcc-posix"
 remotes:
-- "url": "https://github.com/Sn1F3rt/nerva.git"
+- "url": "https://github.com/nerva-project/nerva.git"
   "dir": "nerva"
 files: []
 script: |

From b9329264b948de03b650ed7f647ee963aff109aa Mon Sep 17 00:00:00 2001
From: Sayan Bhattacharyya <sn1f3rt@outlook.com>
Date: Fri, 11 Oct 2024 10:56:13 +0530
Subject: [PATCH 27/27] build(gitian): update gitian-build.py

---
 contrib/gitian/gitian-build.py | 381 ++++++++++++++++++++++++---------
 1 file changed, 281 insertions(+), 100 deletions(-)

diff --git a/contrib/gitian/gitian-build.py b/contrib/gitian/gitian-build.py
index a8114654..08fc4e7a 100644
--- a/contrib/gitian/gitian-build.py
+++ b/contrib/gitian/gitian-build.py
@@ -1,140 +1,316 @@
 #!/usr/bin/env python3
 
-import argparse
+from typing import AnyStr
+
 import os
-import subprocess
 import sys
+import argparse
+import subprocess
+
 
-gsigs = 'https://github.com/monero-project/gitian-sigs.git'
-gbrepo = 'https://github.com/devrandom/gitian-builder.git'
+gsigs = "https://github.com/nerva-project/gitian-sigs.git"
+gbrepo = "https://github.com/devrandom/gitian-builder.git"
 
-platforms = {'l': ['Linux', 'linux', 'tar.bz2'],
-        'a': ['Android', 'android', 'tar.bz2'],
-        'f': ['FreeBSD', 'freebsd', 'tar.bz2'],
-        'w': ['Windows', 'win', 'zip'],
-        'm': ['MacOS', 'osx', 'tar.bz2'] }
+platforms = {
+    "l": ["Linux", "linux", "tar.bz2"],
+    "a": ["Android", "android", "tar.bz2"],
+    "f": ["FreeBSD", "freebsd", "tar.bz2"],
+    "w": ["Windows", "win", "zip"],
+    "m": ["MacOS", "osx", "tar.bz2"],
+}
+
+args: AnyStr
+workdir: AnyStr
 
 def setup():
     global args, workdir
-    programs = ['apt-cacher-ng', 'ruby', 'git', 'make', 'wget']
+    programs = ["apt-cacher-ng", "ruby", "git", "make", "wget"]
     if args.kvm:
-        programs += ['python-vm-builder', 'qemu-kvm', 'qemu-utils']
+        programs += ["python-vm-builder", "qemu-kvm", "qemu-utils"]
     else:
-        programs += ['lxc', 'debootstrap']
+        programs += ["lxc", "debootstrap"]
     if not args.no_apt:
-        subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)
-    if not os.path.isdir('sigs'):
-        subprocess.check_call(['git', 'clone', gsigs, 'sigs'])
-    if not os.path.isdir('builder'):
-        subprocess.check_call(['git', 'clone', gbrepo, 'builder'])
-    os.chdir('builder')
-    subprocess.check_call(['git', 'checkout', 'c0f77ca018cb5332bfd595e0aff0468f77542c23'])
-    os.makedirs('inputs', exist_ok=True)
-    os.chdir('inputs')
-    if os.path.isdir('nerva'):
+        subprocess.check_call(["sudo", "apt-get", "install", "-qq"] + programs)
+    if not os.path.isdir("sigs"):
+        subprocess.check_call(["git", "clone", gsigs, "sigs"])
+    if not os.path.isdir("builder"):
+        subprocess.check_call(["git", "clone", gbrepo, "builder"])
+    os.chdir("builder")
+    subprocess.check_call(
+        ["git", "checkout", "c0f77ca018cb5332bfd595e0aff0468f77542c23"]
+    )
+    os.makedirs("inputs", exist_ok=True)
+    os.chdir("inputs")
+    if os.path.isdir("nerva"):
         # Remove the potentially stale nerva dir. Otherwise, you might face submodule mismatches.
-        subprocess.check_call(['rm', 'nerva', '-fR'])
-    subprocess.check_call(['git', 'clone', args.url, 'nerva'])
-    os.chdir('..')
-    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']
+        subprocess.check_call(["rm", "nerva", "-fR"])
+    subprocess.check_call(["git", "clone", args.url, "nerva"])
+    os.chdir("..")
+    make_image_prog = ["bin/make-base-vm", "--suite", "bionic", "--arch", "amd64"]
     if args.docker:
+        # noinspection PyBroadException
         try:
-            subprocess.check_output(['docker', '--help'])
+            subprocess.check_output(["docker", "--help"])
         except:
-            print("ERROR: Could not find 'docker' command. Ensure this is in your PATH.")
+            print(
+                "ERROR: Could not find 'docker' command. Ensure this is in your PATH."
+            )
             sys.exit(1)
-        make_image_prog += ['--docker']
+        make_image_prog += ["--docker"]
     elif not args.kvm:
-        make_image_prog += ['--lxc']
+        make_image_prog += ["--lxc"]
     subprocess.check_call(make_image_prog)
     os.chdir(workdir)
     if args.is_bionic and not args.kvm and not args.docker:
-        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])
-        print('Reboot is required')
+        subprocess.check_call(
+            ["sudo", "sed", "-i", "s/lxcbr0/br0/", "/etc/default/lxc-net"]
+        )
+        print("Reboot is required")
         sys.exit(0)
 
+
 def rebuild():
     global args, workdir
 
-    print('\nBuilding Dependencies\n')
-    os.makedirs('../out/' + args.version, exist_ok=True)
-
+    print("\nBuilding Dependencies\n")
+    os.makedirs("../out/" + args.version, exist_ok=True)
 
     for i in args.os:
         os_name = platforms[i][0]
         tag_name = platforms[i][1]
         suffix = platforms[i][2]
 
-        print('\nCompiling ' + args.version + ' ' + os_name)
-        infile = 'inputs/nerva/contrib/gitian/gitian-' + tag_name + '.yml'
-        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'nerva='+args.commit, '--url', 'nerva='+args.url, infile])
-        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-'+tag_name, '--destination', '../sigs/', infile])
-        subprocess.check_call('mv build/out/nerva-*.' + suffix + ' ../out/'+args.version, shell=True)
-        print('Moving var/install.log to var/install-' + tag_name + '.log')
-        subprocess.check_call('mv var/install.log var/install-' + tag_name + '.log', shell=True)
-        print('Moving var/build.log to var/build-' + tag_name + '.log')
-        subprocess.check_call('mv var/build.log var/build-' + tag_name + '.log', shell=True)
+        print("\nCompiling " + args.version + " " + os_name)
+        infile = "inputs/nerva/contrib/gitian/gitian-" + tag_name + ".yml"
+        subprocess.check_call(
+            [
+                "bin/gbuild",
+                "-j",
+                args.jobs,
+                "-m",
+                args.memory,
+                "--commit",
+                "nerva=" + args.commit,
+                "--url",
+                "nerva=" + args.url,
+                infile,
+            ]
+        )
+        subprocess.check_call(
+            [
+                "bin/gsign",
+                "-p",
+                args.sign_prog,
+                "--signer",
+                args.signer,
+                "--release",
+                args.version + "-" + tag_name,
+                "--destination",
+                "../sigs/",
+                infile,
+            ]
+        )
+        subprocess.check_call(
+            "mv build/out/nerva-*." + suffix + " ../out/" + args.version, shell=True
+        )
+        print("Moving var/install.log to var/install-" + tag_name + ".log")
+        subprocess.check_call(
+            "mv var/install.log var/install-" + tag_name + ".log", shell=True
+        )
+        print("Moving var/build.log to var/build-" + tag_name + ".log")
+        subprocess.check_call(
+            "mv var/build.log var/build-" + tag_name + ".log", shell=True
+        )
 
     os.chdir(workdir)
 
     if args.commit_files:
-        print('\nCommitting '+args.version+' Unsigned Sigs\n')
-        os.chdir('sigs')
+        print("\nCommitting " + args.version + " Unsigned Sigs\n")
+        os.chdir("sigs")
         for i, v in platforms:
-            subprocess.check_call(['git', 'add', args.version+'-'+v[1]+'/'+args.signer])
-        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])
+            subprocess.check_call(
+                ["git", "add", args.version + "-" + v[1] + "/" + args.signer]
+            )
+        subprocess.check_call(
+            [
+                "git",
+                "commit",
+                "-m",
+                "Add " + args.version + " unsigned sigs for " + args.signer,
+            ]
+        )
         os.chdir(workdir)
 
 
 def build():
     global args, workdir
 
-    print('\nChecking Depends Freshness\n')
-    os.chdir('builder')
-    os.makedirs('inputs', exist_ok=True)
+    print("\nChecking Depends Freshness\n")
+    os.chdir("builder")
+    os.makedirs("inputs", exist_ok=True)
 
-    subprocess.check_call(['make', '-C', 'inputs/nerva/contrib/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])
+    subprocess.check_call(
+        [
+            "make",
+            "-C",
+            "inputs/nerva/contrib/depends",
+            "download",
+            "SOURCES_PATH=" + os.getcwd() + "/cache/common",
+        ]
+    )
 
     rebuild()
 
 
 def verify():
     global args, workdir
-    os.chdir('builder')
+    os.chdir("builder")
 
     for i, v in platforms:
-        print('\nVerifying v'+args.version+' '+v[0]+'\n')
-        subprocess.check_call(['bin/gverify', '-v', '-d', '../sigs/', '-r', args.version+'-'+v[1], 'inputs/nerva/contrib/gitian/gitian-'+v[1]+'.yml'])
+        print("\nVerifying v" + args.version + " " + v[0] + "\n")
+        subprocess.check_call(
+            [
+                "bin/gverify",
+                "-v",
+                "-d",
+                "../sigs/",
+                "-r",
+                args.version + "-" + v[1],
+                "inputs/nerva/contrib/gitian/gitian-" + v[1] + ".yml",
+            ]
+        )
     os.chdir(workdir)
 
+
 def main():
     global args, workdir
 
-    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.', usage='%(prog)s [options] signer version')
-    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')
-    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')
-    parser.add_argument('-u', '--url', dest='url', default='https://github.com/nerva-project/nerva', help='Specify the URL of the repository. Default is %(default)s')
-    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')
-    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')
-    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')
-    parser.add_argument('-o', '--os', dest='os', default='lafwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, a for Android, f for FreeBSD, w for Windows, m for MacOS')
-    parser.add_argument('-r', '--rebuild', action='store_true', dest='rebuild', help='Redo a Gitian build')
-    parser.add_argument('-R', '--rebuildsign', action='store_true', dest='rebuildsign', help='Redo and sign a Gitian build')
-    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')
-    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')
-    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')
-    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')
-    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. If you run this script on a non-debian based system, pass the --no-apt flag')
-    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')
-    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')
-    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')
-    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build.')
-    parser.add_argument('-a', '--no-apt', action='store_true', dest='no_apt', help='Indicate that apt is not installed on the system')
+    parser = argparse.ArgumentParser(
+        description="Script for running full Gitian builds.",
+        usage="%(prog)s [options] signer version",
+    )
+    parser.add_argument(
+        "-c",
+        "--commit",
+        action="store_true",
+        dest="commit",
+        help="Indicate that the version argument is for a commit or branch",
+    )
+    parser.add_argument(
+        "-p",
+        "--pull",
+        action="store_true",
+        dest="pull",
+        help="Indicate that the version argument is the number of a github repository pull request",
+    )
+    parser.add_argument(
+        "-u",
+        "--url",
+        dest="url",
+        default="https://github.com/nerva-project/nerva",
+        help="Specify the URL of the repository. Default is %(default)s",
+    )
+    parser.add_argument(
+        "-v",
+        "--verify",
+        action="store_true",
+        dest="verify",
+        help="Verify the Gitian build",
+    )
+    parser.add_argument(
+        "-b", "--build", action="store_true", dest="build", help="Do a Gitian build"
+    )
+    parser.add_argument(
+        "-B",
+        "--buildsign",
+        action="store_true",
+        dest="buildsign",
+        help="Build both signed and unsigned binaries",
+    )
+    parser.add_argument(
+        "-o",
+        "--os",
+        dest="os",
+        default="lafwm",
+        help="Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, a for Android, f for FreeBSD, w for Windows, m for MacOS",
+    )
+    parser.add_argument(
+        "-r",
+        "--rebuild",
+        action="store_true",
+        dest="rebuild",
+        help="Redo a Gitian build",
+    )
+    parser.add_argument(
+        "-R",
+        "--rebuildsign",
+        action="store_true",
+        dest="rebuildsign",
+        help="Redo and sign a Gitian build",
+    )
+    parser.add_argument(
+        "-j",
+        "--jobs",
+        dest="jobs",
+        default="2",
+        help="Number of processes to use. Default %(default)s",
+    )
+    parser.add_argument(
+        "-m",
+        "--memory",
+        dest="memory",
+        default="2000",
+        help="Memory to allocate in MiB. Default %(default)s",
+    )
+    parser.add_argument(
+        "-k", "--kvm", action="store_true", dest="kvm", help="Use KVM instead of LXC"
+    )
+    parser.add_argument(
+        "-d",
+        "--docker",
+        action="store_true",
+        dest="docker",
+        help="Use Docker instead of LXC",
+    )
+    parser.add_argument(
+        "-S",
+        "--setup",
+        action="store_true",
+        dest="setup",
+        help="Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. If you run this script on a non-debian based system, pass the --no-apt flag",
+    )
+    parser.add_argument(
+        "-D",
+        "--detach-sign",
+        action="store_true",
+        dest="detach_sign",
+        help="Create the assert file for detached signing. Will not commit anything.",
+    )
+    parser.add_argument(
+        "-n",
+        "--no-commit",
+        action="store_false",
+        dest="commit_files",
+        help="Do not commit anything to git",
+    )
+    parser.add_argument(
+        "signer", nargs="?", help="GPG signer to sign each build assert file"
+    )
+    parser.add_argument(
+        "version", nargs="?", help="Version number, commit, or branch to build."
+    )
+    parser.add_argument(
+        "-a",
+        "--no-apt",
+        action="store_true",
+        dest="no_apt",
+        help="Indicate that apt is not installed on the system",
+    )
 
     args = parser.parse_args()
     workdir = os.getcwd()
 
-    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])
+    args.is_bionic = b"bionic" in subprocess.check_output(["lsb_release", "-cs"])
 
     if args.buildsign:
         args.build = True
@@ -145,59 +321,64 @@ def main():
         args.sign = True
 
     if args.kvm and args.docker:
-        raise Exception('Error: cannot have both kvm and docker')
+        raise Exception("Error: cannot have both kvm and docker")
 
-    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'
+    args.sign_prog = "true" if args.detach_sign else "gpg --detach-sign"
 
     # Set enviroment variable USE_LXC or USE_DOCKER, let gitian-builder know that we use lxc or docker
     if args.docker:
-        os.environ['USE_DOCKER'] = '1'
+        os.environ["USE_DOCKER"] = "1"
     elif not args.kvm:
-        os.environ['USE_LXC'] = '1'
-        if not 'GITIAN_HOST_IP' in os.environ.keys():
-            os.environ['GITIAN_HOST_IP'] = '10.0.2.2'
-        if not 'LXC_GUEST_IP' in os.environ.keys():
-            os.environ['LXC_GUEST_IP'] = '10.0.2.5'
+        os.environ["USE_LXC"] = "1"
+        if not "GITIAN_HOST_IP" in os.environ.keys():
+            os.environ["GITIAN_HOST_IP"] = "10.0.2.2"
+        if not "LXC_GUEST_IP" in os.environ.keys():
+            os.environ["LXC_GUEST_IP"] = "10.0.2.5"
 
     script_name = os.path.basename(sys.argv[0])
     # Signer and version shouldn't be empty
-    if args.signer == '':
-        print(script_name+': Missing signer.')
-        print('Try '+script_name+' --help for more information')
+    if args.signer == "":
+        print(script_name + ": Missing signer.")
+        print("Try " + script_name + " --help for more information")
         sys.exit(1)
-    if args.version == '':
-        print(script_name+': Missing version.')
-        print('Try '+script_name+' --help for more information')
+    if args.version == "":
+        print(script_name + ": Missing version.")
+        print("Try " + script_name + " --help for more information")
         sys.exit(1)
 
     # Add leading 'v' for tags
     if args.commit and args.pull:
-        raise Exception('Cannot have both commit and pull')
+        raise Exception("Cannot have both commit and pull")
     args.commit = args.commit if args.commit else args.version
 
     if args.setup:
         setup()
 
-    os.makedirs('builder/inputs/nerva', exist_ok=True)
-    os.chdir('builder/inputs/nerva')
+    os.makedirs("builder/inputs/nerva", exist_ok=True)
+    os.chdir("builder/inputs/nerva")
     if args.pull:
-        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])
-        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True).strip()
-        args.version = 'pull-' + args.version
+        subprocess.check_call(
+            ["git", "fetch", args.url, "refs/pull/" + args.version + "/merge"]
+        )
+        args.commit = subprocess.check_output(
+            ["git", "show", "-s", "--format=%H", "FETCH_HEAD"], universal_newlines=True
+        ).strip()
+        args.version = "pull-" + args.version
     print(args.commit)
-    subprocess.check_call(['git', 'fetch'])
-    subprocess.check_call(['git', 'checkout', args.commit])
+    subprocess.check_call(["git", "fetch"])
+    subprocess.check_call(["git", "checkout", args.commit])
     os.chdir(workdir)
 
     if args.build:
         build()
 
     if args.rebuild:
-        os.chdir('builder')
+        os.chdir("builder")
         rebuild()
 
     if args.verify:
         verify()
 
-if __name__ == '__main__':
+
+if __name__ == "__main__":
     main()
